Microsoft (R) Macro Assembler Version 6.00AD    	    09/21/25 15:37:37
z80emv.asm						     Page 1 - 1


				;	Z80 instruction executor for x86 Rev. 1.00
				;
				;	Copyright (C) 2025 by Gazelle
				;
				;Permission is hereby granted, free of charge, to any person
				;obtaining a copy of this software and associated documentation
				;files (the "Software"), to deal in the Software without
				;restriction, including without limitation the rights to use,
				;copy, modify, merge, publish, distribute, sublicense, and/or sell
				;copies of the Software, and to permit persons to whom the
				;Software is furnished to do so, subject to the following
				;conditions:
				;
				;The above copyright notice and this permission notice shall be
				;included in all copies or substantial portions of the Software.
				;
				;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
				;EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
				;OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
				;NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
				;HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
				;WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
				;FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
				;OTHER DEALINGS IN THE SOFTWARE.

				;2025/5/18 Rev. 1.00 Initial release

						page 0,150
						.model	small
 0000						.code
				;		.186

						assume	ds:nothing,es:nothing,ss:nothing

				;-------------------------------------
				;temp	equ	cx
 = dx				temp	equ	dx
				;-------------------------------------
				;;
				;		Entry point : nnnn:0e0h (far call)
				;;		DS must point base of Z80 instruction code area
				;
				;		SI have the address where the code here under was fetched.
				;		BP have the return code corresponding to the code here under.
				;;
				;		return code : BP
				;
				;		1	HLT
				;		2	OUT (n),A
				;		3	IN  A,(n)
				;		4	I/O instruction  RETI  RETN
				;		5	undefined code (2 bytes)
				;		6	undefined code (4 bytes)
				;
				;		register assign
				;
				;		A    : al
				;		flag : ah
				;		B    : ch
				;		C    : cl
				;		D    : dh
				;		E    : dl
				;		H    : bh
				;		L    : bl
				;
				;		PC   : si
				;		SP   : di
				;
				;		BC' [00F0]
				;		DE' [00F2]
				;		HL' [00F4]
				;		AF' [00F6]
				;		IX  [00F8]
				;		IY  [00FA]
				;		I   [00FC]
				;		R   [00FD]
				;		in the segment this emulation module loaded.
				;
				;-----------------------------------------------
 = 0000				code_EDFD	equ	0
 = 0001				code_HLT	equ	1
 = 0002				code_OUT	equ	2
 = 0003				code_IN		equ	3
 = 0004				code_IO		equ	4
 = 0005				code_undef2	equ	5
 = 0006				code_undef4	equ	6

				ifidni		temp,<dx>
 = dh				temp_h		equ	dh
 = dl				temp_l		equ	dl
 = cx				BC		equ	cx
 = bp				DE		equ	bp
				elseifidni	temp,<cx>
				endif
				;-----------------------------------------------
 = di				ret_reg		equ	di
 = bp				entry_SP	equ	bp

 = 00FF				int_no		equ	0ffh
 = bp				save_temp	equ	bp
 = si				PC80		equ	si
 = di				SP80		equ	di
 = ax				AF		equ	ax
 = bx				HL		equ	bx

 = ch				B		equ	ch
 = cl				C_reg		equ	cl
 = dh				D		equ	dh
 = dl				E		equ	dl
 = bh				H		equ	bh
 = bl				L		equ	bl
 = byte ptr ds:[HL]		M		equ	byte ptr ds:[HL]
 = al				A		equ	al

 = 0080				s_flag		equ	10000000b
 = 0040				z_flag		equ	01000000b
 = 0010				h_flag		equ	00010000b
 = 0004				p_flag		equ	00000100b
 = 0004				v_flag		equ	00000100b ;(=p_flag)
 = 0002				n_flag		equ	00000010b
 = 0001				c_flag		equ	00000001b

				;alt_BC		equ	word ptr ds:[0fff0h]
				;alt_DE		equ	word ptr ds:[0fff2h]
				;alt_HL		equ	word ptr ds:[0fff4h]
				;alt_AF		equ	word ptr ds:[0fff6h]
				;IX		equ	word ptr ds:[0fff8h]
				;XL		equ	byte ptr ds:[0fff8h]
				;XH		equ	byte ptr ds:[0fff9h]
				;IY		equ	word ptr ds:[0fffah]
				;YL		equ	byte ptr ds:[0fffah]
				;YH		equ	byte ptr ds:[0fffbh]
				;I		equ	byte ptr ds:[0fffch]
				;R		equ	byte ptr ds:[0fffdh]

 = word ptr cs:[00f0h]		alt_BC		equ	word ptr cs:[00f0h]
 = word ptr cs:[00f2h]		alt_DE		equ	word ptr cs:[00f2h]
 = word ptr cs:[00f4h]		alt_HL		equ	word ptr cs:[00f4h]
 = word ptr cs:[00f6h]		alt_AF		equ	word ptr cs:[00f6h]
 = word ptr cs:[00f8h]		IX		equ	word ptr cs:[00f8h]
 = byte ptr cs:[00f8h]		XL		equ	byte ptr cs:[00f8h]
 = byte ptr cs:[00f9h]		XH		equ	byte ptr cs:[00f9h]
 = word ptr cs:[00fah]		IY		equ	word ptr cs:[00fah]
 = byte ptr cs:[00fah]		YL		equ	byte ptr cs:[00fah]
 = byte ptr cs:[00fbh]		YH		equ	byte ptr cs:[00fbh]
 = byte ptr cs:[00fch]		I		equ	byte ptr cs:[00fch]
 = byte ptr cs:[00fdh]		R		equ	byte ptr cs:[00fdh]

 = 0020				org_CB		equ	020h
 = 0040				org_CBX		equ	040h
 = 0060				org_DD		equ	060h
 = 0080				org_FD		equ	080h
 = 00A0				org_ED		equ	0a0h

				;======================================
						org	0c0h
 00C0				entry_c0:
 00C0  33 FF					xor	ret_reg,ret_reg
 00C2  8E C7					mov	es,ret_reg
 00C4  26: 8B 36 03FC				mov	si,es:[int_no*4]
 00C9  8C DF					mov	ret_reg,ds
 00CB  8E C7					mov	es,ret_reg
 00CD  8B FD					mov	SP80,entry_SP
 00CF  8B EA					mov	save_temp,temp
 00D1  FC					cld
 00D2  8A 34					mov	temp_h,ds:[PC80]
 00D4  B2 00					mov	temp_l,0
 00D6  46					inc	PC80
 00D7  FF E2					jmp	temp

						org	0e0h
 00E0				entry:
 00E0  8B EA					mov	save_temp,temp
 00E2  FC					cld
 00E3  8A 34					mov	temp_h,ds:[PC80]
 00E5  B2 00					mov	temp_l,0
 00E7  46					inc	PC80
 00E8  FF E2					jmp	temp

				;======================================
				fetch1		macro
						mov	temp_h,ds:[PC80]
						inc	PC80
						jmp	temp
				endm

				fetch2		macro
						inc	PC80
						mov	temp_h,ds:[PC80]
						inc	PC80
						jmp	temp
				endm

				fetch3		macro
						mov	temp_h,ds:[PC80+2]
						add	PC80,3
						jmp	temp
				endm

				;======= M1 cycle ===============================

				;--- LD	reg16,imm16
				LXI		macro	dst
						mov	dst,ds:[PC80]
						fetch3
				endm

				;--- LD	reg8,imm8
				MVI		macro	dst
				ifidni	dst,temp_h
						mov	temp,save_temp
						mov	dst,ds:[PC80]
						mov	save_temp,temp
						mov	temp_l,0
				elseifidni	dst,temp_l
						mov	temp,save_temp
						mov	dst,ds:[PC80]
						mov	save_temp,temp
						mov	temp_l,0
				else
						mov	dst,ds:[PC80]
				endif
						fetch2
				endm

				;--- INC reg16
				INX		macro	src
						inc	src
						fetch1
				endm

				;--- DEC reg16
				DCX		macro	src
						dec	src
						fetch1
				endm

				;--- INC reg8
				INR		macro	src

						sahf

				ifidni		src,temp_h

						mov	temp,save_temp
						inc	src
						mov	save_temp,temp
						mov	temp_l,0

				elseifidni	src,temp_l

						mov	temp,save_temp
						inc	src
						mov	save_temp,temp
						mov	temp_l,0
				else
						inc	src
				endif
						lahf
						jo	@f
						and	ah,not (v_flag or n_flag)
						fetch1
				@@:		and	ah,not (n_flag)
						or	ah,v_flag
						fetch1
				endm

				;--- DEC reg8
				DCR		macro	src

						sahf

				ifidni		src,temp_h

						mov	temp,save_temp
						dec	src
						mov	save_temp,temp
						mov	temp_l,0

				elseifidni	src,temp_l

						mov	temp,save_temp
						dec	src
						mov	save_temp,temp
						mov	temp_l,0
				else
						dec	src
				endif
						lahf
						jo	@f
						and	ah,not (v_flag)
				;		or	ah,n_flag
						fetch1
				@@:		or	ah,(v_flag or n_flag)
						fetch1
				endm

				;--- ADD HL,reg16
				ADDHL		macro	src
						ror	ah,1
						add	HL,src
						rcl	ah,1
						and	ah,not (n_flag)
						fetch1
				endm

				;--- JR cc,n
				JR		macro	cc
				ifnb	<cc>
						sahf
						j&cc	@f
						fetch2
				@@:
				endif
						mov	temp,ax
						lodsb
						cbw
						add	PC80,ax
						mov	ax,temp
						mov	temp_l,0
						fetch1
				endm

				;--- LD ??,??
				LD		macro	dst,src

				ifidni		dst,src

				elseifidni	dst,temp_h

						mov	temp,save_temp
						mov	dst,src
						mov	save_temp,temp
						mov	temp_l,0

				elseifidni	dst,temp_l

						mov	temp,save_temp
						mov	dst,src
						mov	save_temp,temp
						mov	temp_l,0

				elseifidni	src,temp_h

						mov	temp,save_temp
						mov	dst,src
						mov	temp_l,0

				elseifidni	src,temp_l

						mov	temp,save_temp
						mov	dst,src
						mov	temp_l,0
				else
						mov	dst,src
				endif
						fetch1
				endm

				;--- ADD A,reg8
				ADD8	macro	src
				ifidni	src,temp_h

						mov	temp,save_temp
						add	A,src
						mov	temp_l,0

				elseifidni	src,temp_l

						mov	temp,save_temp
						add	A,src
						mov	temp_l,0
				else
						add	A,src
				endif
						lahf
						jo	@f
						and	ah,not (v_flag or n_flag)
						fetch1
				@@:		and	ah,not n_flag
						or	ah,v_flag
						fetch1
				endm

				;--- ADC A,reg8
				ADC8		macro	src

						sahf

				ifidni		src,temp_h

						mov	temp,save_temp
						adc	A,src
						mov	temp_l,0

				elseifidni	src,temp_l

						mov	temp,save_temp
						adc	A,src
						mov	temp_l,0
				else
						adc	A,src
				endif
						lahf
						jo	@f
						and	ah,not (v_flag or n_flag)
						fetch1
				@@:		and	ah,not n_flag
						or	ah,v_flag
						fetch1
				endm

				;---  SUB reg8
				SUB8	macro	src
				ifidni		src,temp_h

						mov	temp,save_temp
						sub	A,src
						mov	temp_l,0

				elseifidni	src,temp_l

						mov	temp,save_temp
						sub	A,src
						mov	temp_l,0
				else
						sub	A,src
				endif
						lahf
						jo	@f
						and	ah,not(v_flag)
				;		or	ah,n_flag
						fetch1
				@@:		or	ah,(v_flag or n_flag)
						fetch1
				endm

				;---  SBC A,reg8
				SBC8	macro	src

						sahf

				ifidni		src,temp_h

						mov	temp,save_temp
						sbb	A,src
						mov	temp_l,0

				elseifidni	src,temp_l

						mov	temp,save_temp
						sbb	A,src
						mov	temp_l,0
				else
						sbb	A,src
				endif
						lahf
						jo	@f
						and	ah,not(v_flag)
				;		or	ah,n_flag
						fetch1
				@@:		or	ah,(v_flag or n_flag)
						fetch1
				endm

				;--- AND reg8
				ANA	macro	src
				ifidni		src,temp_h

						mov	temp,save_temp
						and	A,src
						mov	temp_l,0

				elseifidni	src,temp_l

						mov	temp,save_temp
						and	A,src
						mov	temp_l,0
				else
						and	A,src
				endif
						lahf
						and	ah,not(n_flag or c_flag)
						or	ah,h_flag
						fetch1
				endm

				;---  OR reg8
				ORA	macro	src
				ifidni		src,temp_h

						mov	temp,save_temp
						or	A,src
						mov	temp_l,0

				elseifidni	src,temp_l

						mov	temp,save_temp
						or	A,src
						mov	temp_l,0
				else
						or	A,src
				endif
						lahf
						and	ah,not(h_flag or n_flag or c_flag)
						fetch1
				endm

				;--- XOR reg8
				XRA	macro	src
				ifidni		src,temp_h

						mov	temp,save_temp
						xor	A,src
						mov	temp_l,0

				elseifidni	src,temp_l

						mov	temp,save_temp
						xor	A,src
						mov	temp_l,0
				else
						xor	A,src
				endif
						lahf
						and	ah,not(h_flag or n_flag or c_flag)
						fetch1
				endm

				;--- CP reg8
				CPA	macro	src
				ifidni		src,temp_h

						mov	temp,save_temp
						cmp	A,src
						mov	temp_l,0

				elseifidni	src,temp_l

						mov	temp,save_temp
						cmp	A,src
						mov	temp_l,0
				else
						cmp	A,src
				endif
						lahf
						jo	@f
						and	ah,not(v_flag)
				;		or	ah,n_flag
						fetch1
				@@:		or	ah,(v_flag or n_flag)
						fetch1
				endm

				;--- CALL cc,nn
				CALL80		macro	cc
						add	PC80,2
				ifnb		<cc>
						sahf
						j&cc	@f
						fetch1
				@@:
				endif
						sub	SP80,2
						mov	ds:[SP80],PC80
						mov	PC80,ds:[PC80-2]
						fetch1
				endm

				;--- JP cc,nn
				JP80		macro	cc
				ifnb		<cc>
						sahf
						j&cc	@f
						fetch3
				@@:
				endif
						mov	PC80,ds:[PC80]
						fetch1
				endm

				;--- RET cc
				RET80		macro	cc
				ifnb		<cc>
						sahf
						j&cc	@f
						fetch1
				@@:
				endif
						mov	PC80,ds:[SP80]
						add	SP80,2
						fetch1
				endm

				;--- RST n
				RST		macro	nn
						sub	SP80,2
						mov	ds:[SP80],PC80
						mov	PC80,nn
						fetch1
				endm

				;---  PUSH reg16
				PUSH8		macro	src
						sub	SP80,2
				ifidni		src,AF
						xchg	ah,al
						mov	ds:[SP80],src
						xchg	ah,al
				else
						mov	ds:[SP80],src
				endif
						fetch1
				endm

				;--- POP reg16
				POP8		macro	dst
						mov	dst,ds:[SP80]
				ifidni		dst,AF
						xchg	ah,al
				endif
						add	SP80,2
						fetch1
				endm

				;======================================
 = 0000				op2	=	0

				M1	macro	nn
					rept	nn - op2
						org	op2 * 100h
						mov	temp,save_temp
						mov	entry_SP,SP80
						mov	ret_reg,dode_undef2
						retf
						op2	= op2 + 1
					endm
					op2	= nn + 1
					org	nn * 100h
				endm

				M1	00				;NOP
 = 0001			     1		op2	= 00 + 1
 0000				no_op:
						fetch1
 0000  8A 34		     1			mov	temp_h,ds:[PC80]
 0002  46		     1			inc	PC80
 0003  FF E2		     1			jmp	temp
 0005 0D 0A 5A 38 30 20		exe_msg1	db	0dh,0ah,'Z80 code executor',0dh,0ah,24h
       63 6F 64 65 20 65
       78 65 63 75 74 6F
       72 0D 0A 24

				M1	01				;LD	BC,nn
 = 0002			     1		op2	= 01 + 1
						LXI	BC
 0100  8B 0C		     1			mov	BC,ds:[PC80]
 0102  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 0105  83 C6 03		     2			add	PC80,3
 0108  FF E2		     2			jmp	temp

				M1	02				;LD	(BC),A
 = 0003			     1		op2	= 02 + 1
				ifidni		BC,<save_temp>
				else
 0200  8B D5					mov	temp,save_temp
 0202  8B E9					mov	save_temp,BC
 0204  3E: 88 46 00				mov	ds:[save_temp],A
 0208  8B EA					mov	save_temp,temp
 020A  B2 00					mov	temp_l,0
						fetch1
 020C  8A 34		     1			mov	temp_h,ds:[PC80]
 020E  46		     1			inc	PC80
 020F  FF E2		     1			jmp	temp
				endif

				M1	03				;INC	BC
 = 0004			     1		op2	= 03 + 1
						INX	BC
 0300  41		     1			inc	BC
 0301  8A 34		     2			mov	temp_h,ds:[PC80]
 0303  46		     2			inc	PC80
 0304  FF E2		     2			jmp	temp

 0306 43 6F 70 79 72 69		exe_msg2	db	'Copyright (c) Gazelle',24h
       67 68 74 20 28 63
       29 20 47 61 7A 65
       6C 6C 65 24

				M1	04				;INC	B
 = 0005			     1		op2	= 04 + 1
						INR	B
 0400  9E		     1			sahf
 0401  FE C5		     1			inc	B
 0403  9F		     1			lahf
 0404  70 08		     1			jo	@f
 0406  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 0409  8A 34		     2			mov	temp_h,ds:[PC80]
 040B  46		     2			inc	PC80
 040C  FF E2		     2			jmp	temp
 040E  80 E4 FD		     1	@@:		and	ah,not (n_flag)
 0411  80 CC 04		     1			or	ah,v_flag
 0414  8A 34		     2			mov	temp_h,ds:[PC80]
 0416  46		     2			inc	PC80
 0417  FF E2		     2			jmp	temp

				M1	05				;DEC	B
 = 0006			     1		op2	= 05 + 1
						DCR	B
 0500  9E		     1			sahf
 0501  FE CD		     1			dec	B
 0503  9F		     1			lahf
 0504  70 08		     1			jo	@f
 0506  80 E4 FB		     1			and	ah,not (v_flag)
 0509  8A 34		     2			mov	temp_h,ds:[PC80]
 050B  46		     2			inc	PC80
 050C  FF E2		     2			jmp	temp
 050E  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 0511  8A 34		     2			mov	temp_h,ds:[PC80]
 0513  46		     2			inc	PC80
 0514  FF E2		     2			jmp	temp

				M1	06				;LD	B,n
 = 0007			     1		op2	= 06 + 1
						MVI	B
 0600  8A 2C		     1			mov	B,ds:[PC80]
 0602  46		     2			inc	PC80
 0603  8A 34		     2			mov	temp_h,ds:[PC80]
 0605  46		     2			inc	PC80
 0606  FF E2		     2			jmp	temp

				M1	07				;RLCA
 = 0008			     1		op2	= 07 + 1
 0700  9E					sahf
 0701  D0 C0					rol	A,1
 0703  9F					lahf
 0704  80 E4 ED					and	ah,not(h_flag or n_flag)
						fetch1
 0707  8A 34		     1			mov	temp_h,ds:[PC80]
 0709  46		     1			inc	PC80
 070A  FF E2		     1			jmp	temp

				M1	08				;EX	AF,AF
 = 0009			     1		op2	= 08 + 1
 0800  2E: 87 06 00F6				xchg	ax,alt_AF
						fetch1
 0805  8A 34		     1			mov	temp_h,ds:[PC80]
 0807  46		     1			inc	PC80
 0808  FF E2		     1			jmp	temp

				M1	09				;ADD	HL,BC
 = 000A			     1		op2	= 09 + 1
						ADDHL	BC
 0900  D0 CC		     1			ror	ah,1
 0902  03 D9		     1			add	HL,BC
 0904  D0 D4		     1			rcl	ah,1
 0906  80 E4 FD		     1			and	ah,not (n_flag)
 0909  8A 34		     2			mov	temp_h,ds:[PC80]
 090B  46		     2			inc	PC80
 090C  FF E2		     2			jmp	temp

				M1	0AH				;LD	A,(BC)
 = 000B			     1		op2	= 0AH + 1
				ifidni		BC,<save_temp>
				else
 0A00  8B D5					mov	temp,save_temp
 0A02  8B E9					mov	save_temp,BC
 0A04  3E: 8A 46 00				mov	A,ds:[save_temp]
 0A08  8B EA					mov	save_temp,temp
 0A0A  B2 00					mov	temp_l,0
						fetch1
 0A0C  8A 34		     1			mov	temp_h,ds:[PC80]
 0A0E  46		     1			inc	PC80
 0A0F  FF E2		     1			jmp	temp
				endif

				M1	0BH				;DEC	BC
 = 000C			     1		op2	= 0BH + 1
						DCX	BC
 0B00  49		     1			dec	BC
 0B01  8A 34		     2			mov	temp_h,ds:[PC80]
 0B03  46		     2			inc	PC80
 0B04  FF E2		     2			jmp	temp

 0B06 68 74 74 70 73 3A		exe_msg4	db	'https://github.com/',24h
       2F 2F 67 69 74 68
       75 62 2E 63 6F 6D
       2F 24

				M1	0CH				;INC	C_reg
 = 000D			     1		op2	= 0CH + 1
						INR	C_reg
 0C00  9E		     1			sahf
 0C01  FE C1		     1			inc	C_reg
 0C03  9F		     1			lahf
 0C04  70 08		     1			jo	@f
 0C06  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 0C09  8A 34		     2			mov	temp_h,ds:[PC80]
 0C0B  46		     2			inc	PC80
 0C0C  FF E2		     2			jmp	temp
 0C0E  80 E4 FD		     1	@@:		and	ah,not (n_flag)
 0C11  80 CC 04		     1			or	ah,v_flag
 0C14  8A 34		     2			mov	temp_h,ds:[PC80]
 0C16  46		     2			inc	PC80
 0C17  FF E2		     2			jmp	temp

				M1	0DH				;DEC	C_reg
 = 000E			     1		op2	= 0DH + 1
						DCR	C_reg
 0D00  9E		     1			sahf
 0D01  FE C9		     1			dec	C_reg
 0D03  9F		     1			lahf
 0D04  70 08		     1			jo	@f
 0D06  80 E4 FB		     1			and	ah,not (v_flag)
 0D09  8A 34		     2			mov	temp_h,ds:[PC80]
 0D0B  46		     2			inc	PC80
 0D0C  FF E2		     2			jmp	temp
 0D0E  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 0D11  8A 34		     2			mov	temp_h,ds:[PC80]
 0D13  46		     2			inc	PC80
 0D14  FF E2		     2			jmp	temp

				M1	0EH				;LD	C,n
 = 000F			     1		op2	= 0EH + 1
						MVI	C_reg
 0E00  8A 0C		     1			mov	C_reg,ds:[PC80]
 0E02  46		     2			inc	PC80
 0E03  8A 34		     2			mov	temp_h,ds:[PC80]
 0E05  46		     2			inc	PC80
 0E06  FF E2		     2			jmp	temp

				M1	0FH				;RRCA
 = 0010			     1		op2	= 0FH + 1
 0F00  9E					sahf
 0F01  D0 C8					ror	A,1
 0F03  9F					lahf
 0F04  80 E4 ED					and	ah,not(h_flag or n_flag)
						fetch1
 0F07  8A 34		     1			mov	temp_h,ds:[PC80]
 0F09  46		     1			inc	PC80
 0F0A  FF E2		     1			jmp	temp

				M1	10H				;DJNZ	n
 = 0011			     1		op2	= 10H + 1
				ifidni		temp,<cx>
				else
 1000  FE CD					dec	B
 1002  75 06					jnz	@f
						fetch2
 1004  46		     1			inc	PC80
 1005  8A 34		     1			mov	temp_h,ds:[PC80]
 1007  46		     1			inc	PC80
 1008  FF E2		     1			jmp	temp
				endif
 100A  8B D0			@@:		mov	temp,ax
 100C  AC					lodsb
 100D  98					cbw
 100E  03 F0					add	PC80,ax
 1010  8B C2					mov	ax,temp
 1012  B2 00					mov	temp_l,0
						fetch1
 1014  8A 34		     1			mov	temp_h,ds:[PC80]
 1016  46		     1			inc	PC80
 1017  FF E2		     1			jmp	temp

				M1	11h				;LD	DE,nn
 = 0012			     1		op2	= 11h + 1
						LXI	DE
 1100  8B 2C		     1			mov	DE,ds:[PC80]
 1102  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 1105  83 C6 03		     2			add	PC80,3
 1108  FF E2		     2			jmp	temp

				M1	12H				;LD	(DE),A
 = 0013			     1		op2	= 12H + 1
				ifidni		DE,<save_temp>
				else
 1200  8B D5					mov	temp,save_temp
 1202  8B ED					mov	save_temp,DE
 1204  3E: 88 46 00				mov	ds:[save_temp],A
 1208  8B EA					mov	save_temp,temp
 120A  B2 00					mov	temp_l,0
						fetch1
 120C  8A 34		     1			mov	temp_h,ds:[PC80]
 120E  46		     1			inc	PC80
 120F  FF E2		     1			jmp	temp
				endif

				M1	13H				;INC	DE
 = 0014			     1		op2	= 13H + 1
						INX	DE
 1300  45		     1			inc	DE
 1301  8A 34		     2			mov	temp_h,ds:[PC80]
 1303  46		     2			inc	PC80
 1304  FF E2		     2			jmp	temp

 1306 47 61 7A 65 6C 6C		exe_msg5	db	'Gazelle8087',0dh,0ah,24h
       65 38 30 38 37 0D
       0A 24

				M1	14H				;INC	D
 = 0015			     1		op2	= 14H + 1
						INR	D
 1400  9E		     1			sahf
 1401  8B D5		     1			mov	temp,save_temp
 1403  FE C6		     1			inc	D
 1405  8B EA		     1			mov	save_temp,temp
 1407  B2 00		     1			mov	temp_l,0
 1409  9F		     1			lahf
 140A  70 08		     1			jo	@f
 140C  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 140F  8A 34		     2			mov	temp_h,ds:[PC80]
 1411  46		     2			inc	PC80
 1412  FF E2		     2			jmp	temp
 1414  80 E4 FD		     1	@@:		and	ah,not (n_flag)
 1417  80 CC 04		     1			or	ah,v_flag
 141A  8A 34		     2			mov	temp_h,ds:[PC80]
 141C  46		     2			inc	PC80
 141D  FF E2		     2			jmp	temp

				M1	15H				;DEC	D
 = 0016			     1		op2	= 15H + 1
						DCR	D
 1500  9E		     1			sahf
 1501  8B D5		     1			mov	temp,save_temp
 1503  FE CE		     1			dec	D
 1505  8B EA		     1			mov	save_temp,temp
 1507  B2 00		     1			mov	temp_l,0
 1509  9F		     1			lahf
 150A  70 08		     1			jo	@f
 150C  80 E4 FB		     1			and	ah,not (v_flag)
 150F  8A 34		     2			mov	temp_h,ds:[PC80]
 1511  46		     2			inc	PC80
 1512  FF E2		     2			jmp	temp
 1514  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 1517  8A 34		     2			mov	temp_h,ds:[PC80]
 1519  46		     2			inc	PC80
 151A  FF E2		     2			jmp	temp

				M1	16H				;LD	D,n
 = 0017			     1		op2	= 16H + 1
						MVI	D
 1600  8B D5		     1			mov	temp,save_temp
 1602  8A 34		     1			mov	D,ds:[PC80]
 1604  8B EA		     1			mov	save_temp,temp
 1606  B2 00		     1			mov	temp_l,0
 1608  46		     2			inc	PC80
 1609  8A 34		     2			mov	temp_h,ds:[PC80]
 160B  46		     2			inc	PC80
 160C  FF E2		     2			jmp	temp

				M1	17H				;RLA
 = 0018			     1		op2	= 17H + 1
 1700  9E					sahf
 1701  D0 D0					rcl	A,1
 1703  9F					lahf
 1704  80 E4 ED					and	ah,not(h_flag or n_flag)
						fetch1
 1707  8A 34		     1			mov	temp_h,ds:[PC80]
 1709  46		     1			inc	PC80
 170A  FF E2		     1			jmp	temp

				M1	18H				;JR	n
 = 0019			     1		op2	= 18H + 1
						JR
 1800  8B D0		     1			mov	temp,ax
 1802  AC		     1			lodsb
 1803  98		     1			cbw
 1804  03 F0		     1			add	PC80,ax
 1806  8B C2		     1			mov	ax,temp
 1808  B2 00		     1			mov	temp_l,0
 180A  8A 34		     2			mov	temp_h,ds:[PC80]
 180C  46		     2			inc	PC80
 180D  FF E2		     2			jmp	temp

				M1	19H				;ADD	HL,DE
 = 001A			     1		op2	= 19H + 1
						ADDHL	DE
 1900  D0 CC		     1			ror	ah,1
 1902  03 DD		     1			add	HL,DE
 1904  D0 D4		     1			rcl	ah,1
 1906  80 E4 FD		     1			and	ah,not (n_flag)
 1909  8A 34		     2			mov	temp_h,ds:[PC80]
 190B  46		     2			inc	PC80
 190C  FF E2		     2			jmp	temp

				M1	1AH				;LD	A,(DE)
 = 001B			     1		op2	= 1AH + 1
				ifidni		DE,<save_temp>
				else
 1A00  8B D5					mov	temp,save_temp
 1A02  8B ED					mov	save_temp,DE
 1A04  3E: 8A 46 00				mov	A,ds:[save_temp]
 1A08  8B EA					mov	save_temp,temp
 1A0A  B2 00					mov	temp_l,0
						fetch1
 1A0C  8A 34		     1			mov	temp_h,ds:[PC80]
 1A0E  46		     1			inc	PC80
 1A0F  FF E2		     1			jmp	temp
				endif

				M1	1BH				;DEC	DE
 = 001C			     1		op2	= 1BH + 1
						DCX	DE
 1B00  4D		     1			dec	DE
 1B01  8A 34		     2			mov	temp_h,ds:[PC80]
 1B03  46		     2			inc	PC80
 1B04  FF E2		     2			jmp	temp

 1B06 20 32 30 32 35 0D		exe_msg3	db	' 2025',0dh,0ah,24h
       0A 24

				M1	1CH				;INC	E
 = 001D			     1		op2	= 1CH + 1
						INR	E
 1C00  9E		     1			sahf
 1C01  8B D5		     1			mov	temp,save_temp
 1C03  FE C2		     1			inc	E
 1C05  8B EA		     1			mov	save_temp,temp
 1C07  B2 00		     1			mov	temp_l,0
 1C09  9F		     1			lahf
 1C0A  70 08		     1			jo	@f
 1C0C  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 1C0F  8A 34		     2			mov	temp_h,ds:[PC80]
 1C11  46		     2			inc	PC80
 1C12  FF E2		     2			jmp	temp
 1C14  80 E4 FD		     1	@@:		and	ah,not (n_flag)
 1C17  80 CC 04		     1			or	ah,v_flag
 1C1A  8A 34		     2			mov	temp_h,ds:[PC80]
 1C1C  46		     2			inc	PC80
 1C1D  FF E2		     2			jmp	temp

				M1	1DH				;DEC	E
 = 001E			     1		op2	= 1DH + 1
						DCR	E
 1D00  9E		     1			sahf
 1D01  8B D5		     1			mov	temp,save_temp
 1D03  FE CA		     1			dec	E
 1D05  8B EA		     1			mov	save_temp,temp
 1D07  B2 00		     1			mov	temp_l,0
 1D09  9F		     1			lahf
 1D0A  70 08		     1			jo	@f
 1D0C  80 E4 FB		     1			and	ah,not (v_flag)
 1D0F  8A 34		     2			mov	temp_h,ds:[PC80]
 1D11  46		     2			inc	PC80
 1D12  FF E2		     2			jmp	temp
 1D14  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 1D17  8A 34		     2			mov	temp_h,ds:[PC80]
 1D19  46		     2			inc	PC80
 1D1A  FF E2		     2			jmp	temp

				M1	1EH				;LD	E,n
 = 001F			     1		op2	= 1EH + 1
						MVI	E
 1E00  8B D5		     1			mov	temp,save_temp
 1E02  8A 14		     1			mov	E,ds:[PC80]
 1E04  8B EA		     1			mov	save_temp,temp
 1E06  B2 00		     1			mov	temp_l,0
 1E08  46		     2			inc	PC80
 1E09  8A 34		     2			mov	temp_h,ds:[PC80]
 1E0B  46		     2			inc	PC80
 1E0C  FF E2		     2			jmp	temp

				M1	1FH				;RRA
 = 0020			     1		op2	= 1FH + 1
 1F00  9E					sahf
 1F01  D0 D8					rcr	A,1
 1F03  9F					lahf
 1F04  80 E4 ED					and	ah,not(h_flag or n_flag)
						fetch1
 1F07  8A 34		     1			mov	temp_h,ds:[PC80]
 1F09  46		     1			inc	PC80
 1F0A  FF E2		     1			jmp	temp

				M1	20H
 = 0021			     1		op2	= 20H + 1
						JR	NZ
 2000  9E		     1			sahf
 2001  75 06		     1			jNZ	@f
 2003  46		     2			inc	PC80
 2004  8A 34		     2			mov	temp_h,ds:[PC80]
 2006  46		     2			inc	PC80
 2007  FF E2		     2			jmp	temp
 2009			     1	@@:
 2009  8B D0		     1			mov	temp,ax
 200B  AC		     1			lodsb
 200C  98		     1			cbw
 200D  03 F0		     1			add	PC80,ax
 200F  8B C2		     1			mov	ax,temp
 2011  B2 00		     1			mov	temp_l,0
 2013  8A 34		     2			mov	temp_h,ds:[PC80]
 2015  46		     2			inc	PC80
 2016  FF E2		     2			jmp	temp

				M1	21H				;LD	HL,nn
 = 0022			     1		op2	= 21H + 1
						LXI	HL
 2100  8B 1C		     1			mov	HL,ds:[PC80]
 2102  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 2105  83 C6 03		     2			add	PC80,3
 2108  FF E2		     2			jmp	temp

				M1	22H				;LD	(nn),HL
 = 0023			     1		op2	= 22H + 1
 2200  8B D5					mov	temp,save_temp
 2202  8B 2C					mov	save_temp,ds:[PC80]
 2204  3E: 89 5E 00				mov	ds:[save_temp],HL
 2208  8B EA					mov	save_temp,temp
 220A  B2 00					mov	temp_l,0
						fetch3
 220C  8A 74 02		     1			mov	temp_h,ds:[PC80+2]
 220F  83 C6 03		     1			add	PC80,3
 2212  FF E2		     1			jmp	temp

				M1	23H				;INC	HL
 = 0024			     1		op2	= 23H + 1
						INX	HL
 2300  43		     1			inc	HL
 2301  8A 34		     2			mov	temp_h,ds:[PC80]
 2303  46		     2			inc	PC80
 2304  FF E2		     2			jmp	temp

				M1	24H				;INC	H
 = 0025			     1		op2	= 24H + 1
						INR	H
 2400  9E		     1			sahf
 2401  FE C7		     1			inc	H
 2403  9F		     1			lahf
 2404  70 08		     1			jo	@f
 2406  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 2409  8A 34		     2			mov	temp_h,ds:[PC80]
 240B  46		     2			inc	PC80
 240C  FF E2		     2			jmp	temp
 240E  80 E4 FD		     1	@@:		and	ah,not (n_flag)
 2411  80 CC 04		     1			or	ah,v_flag
 2414  8A 34		     2			mov	temp_h,ds:[PC80]
 2416  46		     2			inc	PC80
 2417  FF E2		     2			jmp	temp

				M1	25H				;DEC	H
 = 0026			     1		op2	= 25H + 1
						DCR	H
 2500  9E		     1			sahf
 2501  FE CF		     1			dec	H
 2503  9F		     1			lahf
 2504  70 08		     1			jo	@f
 2506  80 E4 FB		     1			and	ah,not (v_flag)
 2509  8A 34		     2			mov	temp_h,ds:[PC80]
 250B  46		     2			inc	PC80
 250C  FF E2		     2			jmp	temp
 250E  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 2511  8A 34		     2			mov	temp_h,ds:[PC80]
 2513  46		     2			inc	PC80
 2514  FF E2		     2			jmp	temp

				M1	26H				;LD	H,n
 = 0027			     1		op2	= 26H + 1
						MVI	H
 2600  8A 3C		     1			mov	H,ds:[PC80]
 2602  46		     2			inc	PC80
 2603  8A 34		     2			mov	temp_h,ds:[PC80]
 2605  46		     2			inc	PC80
 2606  FF E2		     2			jmp	temp

				M1	27H				;DAA	*****
 = 0028			     1		op2	= 27H + 1
 2700  F6 C4 02					test	ah,n_flag
 2703  75 0B					jnz	@f
 2705  9E					sahf
 2706  27					daa
 2707  9F					lahf
 2708  80 E4 FD					and	ah,not (n_flag)
						fetch1
 270B  8A 34		     1			mov	temp_h,ds:[PC80]
 270D  46		     1			inc	PC80
 270E  FF E2		     1			jmp	temp
 2710  9E			@@:		sahf
 2711  2F					das
 2712  9F					lahf
						fetch1
 2713  8A 34		     1			mov	temp_h,ds:[PC80]
 2715  46		     1			inc	PC80
 2716  FF E2		     1			jmp	temp

				M1	28H
 = 0029			     1		op2	= 28H + 1
						JR	Z
 2800  9E		     1			sahf
 2801  74 06		     1			jZ	@f
 2803  46		     2			inc	PC80
 2804  8A 34		     2			mov	temp_h,ds:[PC80]
 2806  46		     2			inc	PC80
 2807  FF E2		     2			jmp	temp
 2809			     1	@@:
 2809  8B D0		     1			mov	temp,ax
 280B  AC		     1			lodsb
 280C  98		     1			cbw
 280D  03 F0		     1			add	PC80,ax
 280F  8B C2		     1			mov	ax,temp
 2811  B2 00		     1			mov	temp_l,0
 2813  8A 34		     2			mov	temp_h,ds:[PC80]
 2815  46		     2			inc	PC80
 2816  FF E2		     2			jmp	temp

				M1	29H				;ADD	HL,HL
 = 002A			     1		op2	= 29H + 1
						ADDHL	HL
 2900  D0 CC		     1			ror	ah,1
 2902  03 DB		     1			add	HL,HL
 2904  D0 D4		     1			rcl	ah,1
 2906  80 E4 FD		     1			and	ah,not (n_flag)
 2909  8A 34		     2			mov	temp_h,ds:[PC80]
 290B  46		     2			inc	PC80
 290C  FF E2		     2			jmp	temp

				M1	2AH				;LD	HL,(nn)
 = 002B			     1		op2	= 2AH + 1
 2A00  8B 1C					mov	HL,ds:[PC80]
 2A02  8B 1F					mov	HL,ds:[HL]
						fetch3
 2A04  8A 74 02		     1			mov	temp_h,ds:[PC80+2]
 2A07  83 C6 03		     1			add	PC80,3
 2A0A  FF E2		     1			jmp	temp

				M1	2BH				;DEC	HL
 = 002C			     1		op2	= 2BH + 1
						DCX	HL
 2B00  4B		     1			dec	HL
 2B01  8A 34		     2			mov	temp_h,ds:[PC80]
 2B03  46		     2			inc	PC80
 2B04  FF E2		     2			jmp	temp

				M1	2CH				;INC	L
 = 002D			     1		op2	= 2CH + 1
						INR	L
 2C00  9E		     1			sahf
 2C01  FE C3		     1			inc	L
 2C03  9F		     1			lahf
 2C04  70 08		     1			jo	@f
 2C06  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 2C09  8A 34		     2			mov	temp_h,ds:[PC80]
 2C0B  46		     2			inc	PC80
 2C0C  FF E2		     2			jmp	temp
 2C0E  80 E4 FD		     1	@@:		and	ah,not (n_flag)
 2C11  80 CC 04		     1			or	ah,v_flag
 2C14  8A 34		     2			mov	temp_h,ds:[PC80]
 2C16  46		     2			inc	PC80
 2C17  FF E2		     2			jmp	temp

				M1	2DH				;DEC	L
 = 002E			     1		op2	= 2DH + 1
						DCR	L
 2D00  9E		     1			sahf
 2D01  FE CB		     1			dec	L
 2D03  9F		     1			lahf
 2D04  70 08		     1			jo	@f
 2D06  80 E4 FB		     1			and	ah,not (v_flag)
 2D09  8A 34		     2			mov	temp_h,ds:[PC80]
 2D0B  46		     2			inc	PC80
 2D0C  FF E2		     2			jmp	temp
 2D0E  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 2D11  8A 34		     2			mov	temp_h,ds:[PC80]
 2D13  46		     2			inc	PC80
 2D14  FF E2		     2			jmp	temp

				M1	2EH				;LD	L,n
 = 002F			     1		op2	= 2EH + 1
						MVI	L
 2E00  8A 1C		     1			mov	L,ds:[PC80]
 2E02  46		     2			inc	PC80
 2E03  8A 34		     2			mov	temp_h,ds:[PC80]
 2E05  46		     2			inc	PC80
 2E06  FF E2		     2			jmp	temp

				M1	2FH				;CPL	complement A
 = 0030			     1		op2	= 2FH + 1
 2F00  F6 D0					not	A
 2F02  80 CC 12					or	ah,(h_flag or n_flag)
						fetch1
 2F05  8A 34		     1			mov	temp_h,ds:[PC80]
 2F07  46		     1			inc	PC80
 2F08  FF E2		     1			jmp	temp

				M1	30H
 = 0031			     1		op2	= 30H + 1
						JR	NC
 3000  9E		     1			sahf
 3001  73 06		     1			jNC	@f
 3003  46		     2			inc	PC80
 3004  8A 34		     2			mov	temp_h,ds:[PC80]
 3006  46		     2			inc	PC80
 3007  FF E2		     2			jmp	temp
 3009			     1	@@:
 3009  8B D0		     1			mov	temp,ax
 300B  AC		     1			lodsb
 300C  98		     1			cbw
 300D  03 F0		     1			add	PC80,ax
 300F  8B C2		     1			mov	ax,temp
 3011  B2 00		     1			mov	temp_l,0
 3013  8A 34		     2			mov	temp_h,ds:[PC80]
 3015  46		     2			inc	PC80
 3016  FF E2		     2			jmp	temp

				M1	31H				;LD	SP,nn
 = 0032			     1		op2	= 31H + 1
						LXI	SP80
 3100  8B 3C		     1			mov	SP80,ds:[PC80]
 3102  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 3105  83 C6 03		     2			add	PC80,3
 3108  FF E2		     2			jmp	temp

				M1	32H				;LD	(nn),A
 = 0033			     1		op2	= 32H + 1
 3200  8B D5					mov	temp,save_temp
 3202  8B 2C					mov	save_temp,ds:[PC80]
 3204  3E: 88 46 00				mov	ds:[save_temp],A
 3208  8B EA					mov	save_temp,temp
 320A  B2 00					mov	temp_l,0
						fetch3
 320C  8A 74 02		     1			mov	temp_h,ds:[PC80+2]
 320F  83 C6 03		     1			add	PC80,3
 3212  FF E2		     1			jmp	temp

				M1	33H				;INC	SP
 = 0034			     1		op2	= 33H + 1
						INX	SP80
 3300  47		     1			inc	SP80
 3301  8A 34		     2			mov	temp_h,ds:[PC80]
 3303  46		     2			inc	PC80
 3304  FF E2		     2			jmp	temp

				M1	34H				;INC	(HL)
 = 0035			     1		op2	= 34H + 1
						INR	M
 3400  9E		     1			sahf
 3401  FE 07		     1			inc	M
 3403  9F		     1			lahf
 3404  70 08		     1			jo	@f
 3406  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 3409  8A 34		     2			mov	temp_h,ds:[PC80]
 340B  46		     2			inc	PC80
 340C  FF E2		     2			jmp	temp
 340E  80 E4 FD		     1	@@:		and	ah,not (n_flag)
 3411  80 CC 04		     1			or	ah,v_flag
 3414  8A 34		     2			mov	temp_h,ds:[PC80]
 3416  46		     2			inc	PC80
 3417  FF E2		     2			jmp	temp

				M1	35H				;DEC	M
 = 0036			     1		op2	= 35H + 1
						DCR	M
 3500  9E		     1			sahf
 3501  FE 0F		     1			dec	M
 3503  9F		     1			lahf
 3504  70 08		     1			jo	@f
 3506  80 E4 FB		     1			and	ah,not (v_flag)
 3509  8A 34		     2			mov	temp_h,ds:[PC80]
 350B  46		     2			inc	PC80
 350C  FF E2		     2			jmp	temp
 350E  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 3511  8A 34		     2			mov	temp_h,ds:[PC80]
 3513  46		     2			inc	PC80
 3514  FF E2		     2			jmp	temp

				M1	36H				;LD	(HL),n
 = 0037			     1		op2	= 36H + 1
 3600  8A 34					mov	temp_h,ds:[PC80]
 3602  88 37					mov	ds:[HL],temp_h
						fetch2
 3604  46		     1			inc	PC80
 3605  8A 34		     1			mov	temp_h,ds:[PC80]
 3607  46		     1			inc	PC80
 3608  FF E2		     1			jmp	temp

				M1	37H				;SCF	set carry flag
 = 0038			     1		op2	= 37H + 1
 3700  80 CC 01					or	ah,c_flag
 3703  80 E4 ED					and	ah,not(h_flag or n_flag)
						fetch1
 3706  8A 34		     1			mov	temp_h,ds:[PC80]
 3708  46		     1			inc	PC80
 3709  FF E2		     1			jmp	temp

				M1	38H
 = 0039			     1		op2	= 38H + 1
						JR	C
 3800  9E		     1			sahf
 3801  72 06		     1			jC	@f
 3803  46		     2			inc	PC80
 3804  8A 34		     2			mov	temp_h,ds:[PC80]
 3806  46		     2			inc	PC80
 3807  FF E2		     2			jmp	temp
 3809			     1	@@:
 3809  8B D0		     1			mov	temp,ax
 380B  AC		     1			lodsb
 380C  98		     1			cbw
 380D  03 F0		     1			add	PC80,ax
 380F  8B C2		     1			mov	ax,temp
 3811  B2 00		     1			mov	temp_l,0
 3813  8A 34		     2			mov	temp_h,ds:[PC80]
 3815  46		     2			inc	PC80
 3816  FF E2		     2			jmp	temp

				M1	39H				;ADD	HL,SP
 = 003A			     1		op2	= 39H + 1
						ADDHL	SP80
 3900  D0 CC		     1			ror	ah,1
 3902  03 DF		     1			add	HL,SP80
 3904  D0 D4		     1			rcl	ah,1
 3906  80 E4 FD		     1			and	ah,not (n_flag)
 3909  8A 34		     2			mov	temp_h,ds:[PC80]
 390B  46		     2			inc	PC80
 390C  FF E2		     2			jmp	temp

				M1	3AH				;LD	A,(nn)
 = 003B			     1		op2	= 3AH + 1
 3A00  8B D5					mov	temp,save_temp
 3A02  8B 2C					mov	save_temp,ds:[PC80]
 3A04  3E: 8A 46 00				mov	A,ds:[save_temp]
 3A08  8B EA					mov	save_temp,temp
 3A0A  B2 00					mov	temp_l,0
						fetch3
 3A0C  8A 74 02		     1			mov	temp_h,ds:[PC80+2]
 3A0F  83 C6 03		     1			add	PC80,3
 3A12  FF E2		     1			jmp	temp

				M1	3BH				;DEC	SP
 = 003C			     1		op2	= 3BH + 1
						DCX	SP80
 3B00  4F		     1			dec	SP80
 3B01  8A 34		     2			mov	temp_h,ds:[PC80]
 3B03  46		     2			inc	PC80
 3B04  FF E2		     2			jmp	temp

				M1	3CH				;INC	A
 = 003D			     1		op2	= 3CH + 1
						INR	A
 3C00  9E		     1			sahf
 3C01  FE C0		     1			inc	A
 3C03  9F		     1			lahf
 3C04  70 08		     1			jo	@f
 3C06  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 3C09  8A 34		     2			mov	temp_h,ds:[PC80]
 3C0B  46		     2			inc	PC80
 3C0C  FF E2		     2			jmp	temp
 3C0E  80 E4 FD		     1	@@:		and	ah,not (n_flag)
 3C11  80 CC 04		     1			or	ah,v_flag
 3C14  8A 34		     2			mov	temp_h,ds:[PC80]
 3C16  46		     2			inc	PC80
 3C17  FF E2		     2			jmp	temp

				M1	3DH				;DEC	A
 = 003E			     1		op2	= 3DH + 1
						DCR	A
 3D00  9E		     1			sahf
 3D01  FE C8		     1			dec	A
 3D03  9F		     1			lahf
 3D04  70 08		     1			jo	@f
 3D06  80 E4 FB		     1			and	ah,not (v_flag)
 3D09  8A 34		     2			mov	temp_h,ds:[PC80]
 3D0B  46		     2			inc	PC80
 3D0C  FF E2		     2			jmp	temp
 3D0E  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 3D11  8A 34		     2			mov	temp_h,ds:[PC80]
 3D13  46		     2			inc	PC80
 3D14  FF E2		     2			jmp	temp

				M1	3EH				;LD	A,n
 = 003F			     1		op2	= 3EH + 1
 3E00  AC					lodsb
						fetch1
 3E01  8A 34		     1			mov	temp_h,ds:[PC80]
 3E03  46		     1			inc	PC80
 3E04  FF E2		     1			jmp	temp

				M1	3FH				;CCF	complement carry flag
 = 0040			     1		op2	= 3FH + 1
 3F00  80 F4 01					xor	ah,c_flag
 3F03  80 E4 FD					and	ah,not n_flag
						fetch1
 3F06  8A 34		     1			mov	temp_h,ds:[PC80]
 3F08  46		     1			inc	PC80
 3F09  FF E2		     1			jmp	temp
				;--------------------------------------
				M1	40H
 = 0041			     1		op2	= 40H + 1
						LD	B,B
 4000  8A 34		     2			mov	temp_h,ds:[PC80]
 4002  46		     2			inc	PC80
 4003  FF E2		     2			jmp	temp
				M1	41H
 = 0042			     1		op2	= 41H + 1
						LD	B,C_reg
 4100  8A E9		     1			mov	B,C_reg
 4102  8A 34		     2			mov	temp_h,ds:[PC80]
 4104  46		     2			inc	PC80
 4105  FF E2		     2			jmp	temp
				M1	42H
 = 0043			     1		op2	= 42H + 1
						LD	B,D
 4200  8B D5		     1			mov	temp,save_temp
 4202  8A EE		     1			mov	B,D
 4204  B2 00		     1			mov	temp_l,0
 4206  8A 34		     2			mov	temp_h,ds:[PC80]
 4208  46		     2			inc	PC80
 4209  FF E2		     2			jmp	temp
				M1	43H
 = 0044			     1		op2	= 43H + 1
						LD	B,E
 4300  8B D5		     1			mov	temp,save_temp
 4302  8A EA		     1			mov	B,E
 4304  B2 00		     1			mov	temp_l,0
 4306  8A 34		     2			mov	temp_h,ds:[PC80]
 4308  46		     2			inc	PC80
 4309  FF E2		     2			jmp	temp
				M1	44H
 = 0045			     1		op2	= 44H + 1
						LD	B,H
 4400  8A EF		     1			mov	B,H
 4402  8A 34		     2			mov	temp_h,ds:[PC80]
 4404  46		     2			inc	PC80
 4405  FF E2		     2			jmp	temp
				M1	45H
 = 0046			     1		op2	= 45H + 1
						LD	B,L
 4500  8A EB		     1			mov	B,L
 4502  8A 34		     2			mov	temp_h,ds:[PC80]
 4504  46		     2			inc	PC80
 4505  FF E2		     2			jmp	temp
				M1	46H
 = 0047			     1		op2	= 46H + 1
						LD	B,M
 4600  8A 2F		     1			mov	B,M
 4602  8A 34		     2			mov	temp_h,ds:[PC80]
 4604  46		     2			inc	PC80
 4605  FF E2		     2			jmp	temp
				M1	47H
 = 0048			     1		op2	= 47H + 1
						LD	B,A
 4700  8A E8		     1			mov	B,A
 4702  8A 34		     2			mov	temp_h,ds:[PC80]
 4704  46		     2			inc	PC80
 4705  FF E2		     2			jmp	temp

				M1	48H
 = 0049			     1		op2	= 48H + 1
						LD	C_reg,B
 4800  8A CD		     1			mov	C_reg,B
 4802  8A 34		     2			mov	temp_h,ds:[PC80]
 4804  46		     2			inc	PC80
 4805  FF E2		     2			jmp	temp
				M1	49H
 = 004A			     1		op2	= 49H + 1
						LD	C_reg,C_reg
 4900  8A 34		     2			mov	temp_h,ds:[PC80]
 4902  46		     2			inc	PC80
 4903  FF E2		     2			jmp	temp
				M1	4AH
 = 004B			     1		op2	= 4AH + 1
						LD	C_reg,D
 4A00  8B D5		     1			mov	temp,save_temp
 4A02  8A CE		     1			mov	C_reg,D
 4A04  B2 00		     1			mov	temp_l,0
 4A06  8A 34		     2			mov	temp_h,ds:[PC80]
 4A08  46		     2			inc	PC80
 4A09  FF E2		     2			jmp	temp
				M1	4BH
 = 004C			     1		op2	= 4BH + 1
						LD	C_reg,E
 4B00  8B D5		     1			mov	temp,save_temp
 4B02  8A CA		     1			mov	C_reg,E
 4B04  B2 00		     1			mov	temp_l,0
 4B06  8A 34		     2			mov	temp_h,ds:[PC80]
 4B08  46		     2			inc	PC80
 4B09  FF E2		     2			jmp	temp
				M1	4CH
 = 004D			     1		op2	= 4CH + 1
						LD	C_reg,H
 4C00  8A CF		     1			mov	C_reg,H
 4C02  8A 34		     2			mov	temp_h,ds:[PC80]
 4C04  46		     2			inc	PC80
 4C05  FF E2		     2			jmp	temp
				M1	4DH
 = 004E			     1		op2	= 4DH + 1
						LD	C_reg,L
 4D00  8A CB		     1			mov	C_reg,L
 4D02  8A 34		     2			mov	temp_h,ds:[PC80]
 4D04  46		     2			inc	PC80
 4D05  FF E2		     2			jmp	temp
				M1	4EH
 = 004F			     1		op2	= 4EH + 1
						LD	C_reg,M
 4E00  8A 0F		     1			mov	C_reg,M
 4E02  8A 34		     2			mov	temp_h,ds:[PC80]
 4E04  46		     2			inc	PC80
 4E05  FF E2		     2			jmp	temp
				M1	4FH
 = 0050			     1		op2	= 4FH + 1
						LD	C_reg,A
 4F00  8A C8		     1			mov	C_reg,A
 4F02  8A 34		     2			mov	temp_h,ds:[PC80]
 4F04  46		     2			inc	PC80
 4F05  FF E2		     2			jmp	temp

				M1	50H
 = 0051			     1		op2	= 50H + 1
						LD	D,B
 5000  8B D5		     1			mov	temp,save_temp
 5002  8A F5		     1			mov	D,B
 5004  8B EA		     1			mov	save_temp,temp
 5006  B2 00		     1			mov	temp_l,0
 5008  8A 34		     2			mov	temp_h,ds:[PC80]
 500A  46		     2			inc	PC80
 500B  FF E2		     2			jmp	temp
				M1	51H
 = 0052			     1		op2	= 51H + 1
						LD	D,C_reg
 5100  8B D5		     1			mov	temp,save_temp
 5102  8A F1		     1			mov	D,C_reg
 5104  8B EA		     1			mov	save_temp,temp
 5106  B2 00		     1			mov	temp_l,0
 5108  8A 34		     2			mov	temp_h,ds:[PC80]
 510A  46		     2			inc	PC80
 510B  FF E2		     2			jmp	temp
				M1	52H
 = 0053			     1		op2	= 52H + 1
						LD	D,D
 5200  8A 34		     2			mov	temp_h,ds:[PC80]
 5202  46		     2			inc	PC80
 5203  FF E2		     2			jmp	temp
				M1	53H
 = 0054			     1		op2	= 53H + 1
						LD	D,E
 5300  8B D5		     1			mov	temp,save_temp
 5302  8A F2		     1			mov	D,E
 5304  8B EA		     1			mov	save_temp,temp
 5306  B2 00		     1			mov	temp_l,0
 5308  8A 34		     2			mov	temp_h,ds:[PC80]
 530A  46		     2			inc	PC80
 530B  FF E2		     2			jmp	temp
				M1	54H

 = 0055			     1		op2	= 54H + 1
						LD	D,H
 5400  8B D5		     1			mov	temp,save_temp
 5402  8A F7		     1			mov	D,H
 5404  8B EA		     1			mov	save_temp,temp
 5406  B2 00		     1			mov	temp_l,0
 5408  8A 34		     2			mov	temp_h,ds:[PC80]
 540A  46		     2			inc	PC80
 540B  FF E2		     2			jmp	temp
				M1	55H
 = 0056			     1		op2	= 55H + 1
						LD	D,L
 5500  8B D5		     1			mov	temp,save_temp
 5502  8A F3		     1			mov	D,L
 5504  8B EA		     1			mov	save_temp,temp
 5506  B2 00		     1			mov	temp_l,0
 5508  8A 34		     2			mov	temp_h,ds:[PC80]
 550A  46		     2			inc	PC80
 550B  FF E2		     2			jmp	temp
				M1	56H
 = 0057			     1		op2	= 56H + 1
						LD	D,M
 5600  8B D5		     1			mov	temp,save_temp
 5602  8A 37		     1			mov	D,M
 5604  8B EA		     1			mov	save_temp,temp
 5606  B2 00		     1			mov	temp_l,0
 5608  8A 34		     2			mov	temp_h,ds:[PC80]
 560A  46		     2			inc	PC80
 560B  FF E2		     2			jmp	temp
				M1	57H
 = 0058			     1		op2	= 57H + 1
						LD	D,A
 5700  8B D5		     1			mov	temp,save_temp
 5702  8A F0		     1			mov	D,A
 5704  8B EA		     1			mov	save_temp,temp
 5706  B2 00		     1			mov	temp_l,0
 5708  8A 34		     2			mov	temp_h,ds:[PC80]
 570A  46		     2			inc	PC80
 570B  FF E2		     2			jmp	temp

				M1	58H
 = 0059			     1		op2	= 58H + 1
						LD	E,B
 5800  8B D5		     1			mov	temp,save_temp
 5802  8A D5		     1			mov	E,B
 5804  8B EA		     1			mov	save_temp,temp
 5806  B2 00		     1			mov	temp_l,0
 5808  8A 34		     2			mov	temp_h,ds:[PC80]
 580A  46		     2			inc	PC80
 580B  FF E2		     2			jmp	temp
				M1	59H
 = 005A			     1		op2	= 59H + 1
						LD	E,C_reg
 5900  8B D5		     1			mov	temp,save_temp
 5902  8A D1		     1			mov	E,C_reg
 5904  8B EA		     1			mov	save_temp,temp
 5906  B2 00		     1			mov	temp_l,0
 5908  8A 34		     2			mov	temp_h,ds:[PC80]
 590A  46		     2			inc	PC80
 590B  FF E2		     2			jmp	temp
				M1	5AH
 = 005B			     1		op2	= 5AH + 1
						LD	E,D
 5A00  8B D5		     1			mov	temp,save_temp
 5A02  8A D6		     1			mov	E,D
 5A04  8B EA		     1			mov	save_temp,temp
 5A06  B2 00		     1			mov	temp_l,0
 5A08  8A 34		     2			mov	temp_h,ds:[PC80]
 5A0A  46		     2			inc	PC80
 5A0B  FF E2		     2			jmp	temp
				M1	5BH
 = 005C			     1		op2	= 5BH + 1
						LD	E,E
 5B00  8A 34		     2			mov	temp_h,ds:[PC80]
 5B02  46		     2			inc	PC80
 5B03  FF E2		     2			jmp	temp
				M1	5CH
 = 005D			     1		op2	= 5CH + 1
						LD	E,H
 5C00  8B D5		     1			mov	temp,save_temp
 5C02  8A D7		     1			mov	E,H
 5C04  8B EA		     1			mov	save_temp,temp
 5C06  B2 00		     1			mov	temp_l,0
 5C08  8A 34		     2			mov	temp_h,ds:[PC80]
 5C0A  46		     2			inc	PC80
 5C0B  FF E2		     2			jmp	temp
				M1	5DH
 = 005E			     1		op2	= 5DH + 1
						LD	E,L
 5D00  8B D5		     1			mov	temp,save_temp
 5D02  8A D3		     1			mov	E,L
 5D04  8B EA		     1			mov	save_temp,temp
 5D06  B2 00		     1			mov	temp_l,0
 5D08  8A 34		     2			mov	temp_h,ds:[PC80]
 5D0A  46		     2			inc	PC80
 5D0B  FF E2		     2			jmp	temp
				M1	5EH
 = 005F			     1		op2	= 5EH + 1
						LD	E,M
 5E00  8B D5		     1			mov	temp,save_temp
 5E02  8A 17		     1			mov	E,M
 5E04  8B EA		     1			mov	save_temp,temp
 5E06  B2 00		     1			mov	temp_l,0
 5E08  8A 34		     2			mov	temp_h,ds:[PC80]
 5E0A  46		     2			inc	PC80
 5E0B  FF E2		     2			jmp	temp
				M1	5FH
 = 0060			     1		op2	= 5FH + 1
						LD	E,A
 5F00  8B D5		     1			mov	temp,save_temp
 5F02  8A D0		     1			mov	E,A
 5F04  8B EA		     1			mov	save_temp,temp
 5F06  B2 00		     1			mov	temp_l,0
 5F08  8A 34		     2			mov	temp_h,ds:[PC80]
 5F0A  46		     2			inc	PC80
 5F0B  FF E2		     2			jmp	temp

				M1	60H
 = 0061			     1		op2	= 60H + 1
						LD	H,B
 6000  8A FD		     1			mov	H,B
 6002  8A 34		     2			mov	temp_h,ds:[PC80]
 6004  46		     2			inc	PC80
 6005  FF E2		     2			jmp	temp
				M1	61H
 = 0062			     1		op2	= 61H + 1
						LD	H,C_reg
 6100  8A F9		     1			mov	H,C_reg
 6102  8A 34		     2			mov	temp_h,ds:[PC80]
 6104  46		     2			inc	PC80
 6105  FF E2		     2			jmp	temp
				M1	62H
 = 0063			     1		op2	= 62H + 1
						LD	H,D
 6200  8B D5		     1			mov	temp,save_temp
 6202  8A FE		     1			mov	H,D
 6204  B2 00		     1			mov	temp_l,0
 6206  8A 34		     2			mov	temp_h,ds:[PC80]
 6208  46		     2			inc	PC80
 6209  FF E2		     2			jmp	temp
				M1	63H
 = 0064			     1		op2	= 63H + 1
						LD	H,E
 6300  8B D5		     1			mov	temp,save_temp
 6302  8A FA		     1			mov	H,E
 6304  B2 00		     1			mov	temp_l,0
 6306  8A 34		     2			mov	temp_h,ds:[PC80]
 6308  46		     2			inc	PC80
 6309  FF E2		     2			jmp	temp
				M1	64H
 = 0065			     1		op2	= 64H + 1
						LD	H,H
 6400  8A 34		     2			mov	temp_h,ds:[PC80]
 6402  46		     2			inc	PC80
 6403  FF E2		     2			jmp	temp
				M1	65H
 = 0066			     1		op2	= 65H + 1
						LD	H,L
 6500  8A FB		     1			mov	H,L
 6502  8A 34		     2			mov	temp_h,ds:[PC80]
 6504  46		     2			inc	PC80
 6505  FF E2		     2			jmp	temp
				M1	66H
 = 0067			     1		op2	= 66H + 1
						LD	H,M
 6600  8A 3F		     1			mov	H,M
 6602  8A 34		     2			mov	temp_h,ds:[PC80]
 6604  46		     2			inc	PC80
 6605  FF E2		     2			jmp	temp
				M1	67H
 = 0068			     1		op2	= 67H + 1
						LD	H,A
 6700  8A F8		     1			mov	H,A
 6702  8A 34		     2			mov	temp_h,ds:[PC80]
 6704  46		     2			inc	PC80
 6705  FF E2		     2			jmp	temp

				M1	68H
 = 0069			     1		op2	= 68H + 1
						LD	L,B
 6800  8A DD		     1			mov	L,B
 6802  8A 34		     2			mov	temp_h,ds:[PC80]
 6804  46		     2			inc	PC80
 6805  FF E2		     2			jmp	temp
				M1	69H
 = 006A			     1		op2	= 69H + 1
						LD	L,C_reg
 6900  8A D9		     1			mov	L,C_reg
 6902  8A 34		     2			mov	temp_h,ds:[PC80]
 6904  46		     2			inc	PC80
 6905  FF E2		     2			jmp	temp
				M1	6AH
 = 006B			     1		op2	= 6AH + 1
						LD	L,D
 6A00  8B D5		     1			mov	temp,save_temp
 6A02  8A DE		     1			mov	L,D
 6A04  B2 00		     1			mov	temp_l,0
 6A06  8A 34		     2			mov	temp_h,ds:[PC80]
 6A08  46		     2			inc	PC80
 6A09  FF E2		     2			jmp	temp
				M1	6BH
 = 006C			     1		op2	= 6BH + 1
						LD	L,E
 6B00  8B D5		     1			mov	temp,save_temp
 6B02  8A DA		     1			mov	L,E
 6B04  B2 00		     1			mov	temp_l,0
 6B06  8A 34		     2			mov	temp_h,ds:[PC80]
 6B08  46		     2			inc	PC80
 6B09  FF E2		     2			jmp	temp
				M1	6CH
 = 006D			     1		op2	= 6CH + 1
						LD	L,H
 6C00  8A DF		     1			mov	L,H
 6C02  8A 34		     2			mov	temp_h,ds:[PC80]
 6C04  46		     2			inc	PC80
 6C05  FF E2		     2			jmp	temp
				M1	6DH
 = 006E			     1		op2	= 6DH + 1
						LD	L,L
 6D00  8A 34		     2			mov	temp_h,ds:[PC80]
 6D02  46		     2			inc	PC80
 6D03  FF E2		     2			jmp	temp
				M1	6EH
 = 006F			     1		op2	= 6EH + 1
						LD	L,M
 6E00  8A 1F		     1			mov	L,M
 6E02  8A 34		     2			mov	temp_h,ds:[PC80]
 6E04  46		     2			inc	PC80
 6E05  FF E2		     2			jmp	temp
				M1	6FH
 = 0070			     1		op2	= 6FH + 1
						LD	L,A
 6F00  8A D8		     1			mov	L,A
 6F02  8A 34		     2			mov	temp_h,ds:[PC80]
 6F04  46		     2			inc	PC80
 6F05  FF E2		     2			jmp	temp

				M1	70H
 = 0071			     1		op2	= 70H + 1
						LD	M,B
 7000  88 2F		     1			mov	M,B
 7002  8A 34		     2			mov	temp_h,ds:[PC80]
 7004  46		     2			inc	PC80
 7005  FF E2		     2			jmp	temp
				M1	71H
 = 0072			     1		op2	= 71H + 1
						LD	M,C_reg
 7100  88 0F		     1			mov	M,C_reg
 7102  8A 34		     2			mov	temp_h,ds:[PC80]
 7104  46		     2			inc	PC80
 7105  FF E2		     2			jmp	temp
				M1	72H
 = 0073			     1		op2	= 72H + 1
						LD	M,D
 7200  8B D5		     1			mov	temp,save_temp
 7202  88 37		     1			mov	M,D
 7204  B2 00		     1			mov	temp_l,0
 7206  8A 34		     2			mov	temp_h,ds:[PC80]
 7208  46		     2			inc	PC80
 7209  FF E2		     2			jmp	temp
				M1	73H
 = 0074			     1		op2	= 73H + 1
						LD	M,E
 7300  8B D5		     1			mov	temp,save_temp
 7302  88 17		     1			mov	M,E
 7304  B2 00		     1			mov	temp_l,0
 7306  8A 34		     2			mov	temp_h,ds:[PC80]
 7308  46		     2			inc	PC80
 7309  FF E2		     2			jmp	temp
				M1	74H
 = 0075			     1		op2	= 74H + 1
						LD	M,H
 7400  88 3F		     1			mov	M,H
 7402  8A 34		     2			mov	temp_h,ds:[PC80]
 7404  46		     2			inc	PC80
 7405  FF E2		     2			jmp	temp
				M1	75H
 = 0076			     1		op2	= 75H + 1
						LD	M,L
 7500  88 1F		     1			mov	M,L
 7502  8A 34		     2			mov	temp_h,ds:[PC80]
 7504  46		     2			inc	PC80
 7505  FF E2		     2			jmp	temp
				M1	76H				;HLT
 = 0077			     1		op2	= 76H + 1
 7600  8B D5					mov	temp,save_temp
 7602  8B EF					mov	entry_SP,SP80
 7604  BF 0001					mov	ret_reg,code_HLT
 7607  CB					retf
				M1	77H
 = 0078			     1		op2	= 77H + 1
						LD	M,A
 7700  88 07		     1			mov	M,A
 7702  8A 34		     2			mov	temp_h,ds:[PC80]
 7704  46		     2			inc	PC80
 7705  FF E2		     2			jmp	temp

				M1	78H
 = 0079			     1		op2	= 78H + 1
						LD	A,B
 7800  8A C5		     1			mov	A,B
 7802  8A 34		     2			mov	temp_h,ds:[PC80]
 7804  46		     2			inc	PC80
 7805  FF E2		     2			jmp	temp
				M1	79H
 = 007A			     1		op2	= 79H + 1
						LD	A,C_reg
 7900  8A C1		     1			mov	A,C_reg
 7902  8A 34		     2			mov	temp_h,ds:[PC80]
 7904  46		     2			inc	PC80
 7905  FF E2		     2			jmp	temp
				M1	7AH
 = 007B			     1		op2	= 7AH + 1
						LD	A,D
 7A00  8B D5		     1			mov	temp,save_temp
 7A02  8A C6		     1			mov	A,D
 7A04  B2 00		     1			mov	temp_l,0
 7A06  8A 34		     2			mov	temp_h,ds:[PC80]
 7A08  46		     2			inc	PC80
 7A09  FF E2		     2			jmp	temp
				M1	7BH
 = 007C			     1		op2	= 7BH + 1
						LD	A,E
 7B00  8B D5		     1			mov	temp,save_temp
 7B02  8A C2		     1			mov	A,E
 7B04  B2 00		     1			mov	temp_l,0
 7B06  8A 34		     2			mov	temp_h,ds:[PC80]
 7B08  46		     2			inc	PC80
 7B09  FF E2		     2			jmp	temp
				M1	7CH
 = 007D			     1		op2	= 7CH + 1
						LD	A,H
 7C00  8A C7		     1			mov	A,H
 7C02  8A 34		     2			mov	temp_h,ds:[PC80]
 7C04  46		     2			inc	PC80
 7C05  FF E2		     2			jmp	temp
				M1	7DH
 = 007E			     1		op2	= 7DH + 1
						LD	A,L
 7D00  8A C3		     1			mov	A,L
 7D02  8A 34		     2			mov	temp_h,ds:[PC80]
 7D04  46		     2			inc	PC80
 7D05  FF E2		     2			jmp	temp
				M1	7EH
 = 007F			     1		op2	= 7EH + 1
						LD	A,M
 7E00  8A 07		     1			mov	A,M
 7E02  8A 34		     2			mov	temp_h,ds:[PC80]
 7E04  46		     2			inc	PC80
 7E05  FF E2		     2			jmp	temp
				M1	7FH
 = 0080			     1		op2	= 7FH + 1
						LD	A,A
 7F00  8A 34		     2			mov	temp_h,ds:[PC80]
 7F02  46		     2			inc	PC80
 7F03  FF E2		     2			jmp	temp
				;--------------------------------------
				M1	80H
 = 0081			     1		op2	= 80H + 1
						ADD8	B
 8000  02 C5		     1			add	A,B
 8002  9F		     1			lahf
 8003  70 08		     1			jo	@f
 8005  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8008  8A 34		     2			mov	temp_h,ds:[PC80]
 800A  46		     2			inc	PC80
 800B  FF E2		     2			jmp	temp
 800D  80 E4 FD		     1	@@:		and	ah,not n_flag
 8010  80 CC 04		     1			or	ah,v_flag
 8013  8A 34		     2			mov	temp_h,ds:[PC80]
 8015  46		     2			inc	PC80
 8016  FF E2		     2			jmp	temp
				M1	81H
 = 0082			     1		op2	= 81H + 1
						ADD8	C_reg
 8100  02 C1		     1			add	A,C_reg
 8102  9F		     1			lahf
 8103  70 08		     1			jo	@f
 8105  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8108  8A 34		     2			mov	temp_h,ds:[PC80]
 810A  46		     2			inc	PC80
 810B  FF E2		     2			jmp	temp
 810D  80 E4 FD		     1	@@:		and	ah,not n_flag
 8110  80 CC 04		     1			or	ah,v_flag
 8113  8A 34		     2			mov	temp_h,ds:[PC80]
 8115  46		     2			inc	PC80
 8116  FF E2		     2			jmp	temp
				M1	82H
 = 0083			     1		op2	= 82H + 1
						ADD8	D
 8200  8B D5		     1			mov	temp,save_temp
 8202  02 C6		     1			add	A,D
 8204  B2 00		     1			mov	temp_l,0
 8206  9F		     1			lahf
 8207  70 08		     1			jo	@f
 8209  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 820C  8A 34		     2			mov	temp_h,ds:[PC80]
 820E  46		     2			inc	PC80
 820F  FF E2		     2			jmp	temp
 8211  80 E4 FD		     1	@@:		and	ah,not n_flag
 8214  80 CC 04		     1			or	ah,v_flag
 8217  8A 34		     2			mov	temp_h,ds:[PC80]
 8219  46		     2			inc	PC80
 821A  FF E2		     2			jmp	temp
				M1	83H
 = 0084			     1		op2	= 83H + 1
						ADD8	E
 8300  8B D5		     1			mov	temp,save_temp
 8302  02 C2		     1			add	A,E
 8304  B2 00		     1			mov	temp_l,0
 8306  9F		     1			lahf
 8307  70 08		     1			jo	@f
 8309  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 830C  8A 34		     2			mov	temp_h,ds:[PC80]
 830E  46		     2			inc	PC80
 830F  FF E2		     2			jmp	temp
 8311  80 E4 FD		     1	@@:		and	ah,not n_flag
 8314  80 CC 04		     1			or	ah,v_flag
 8317  8A 34		     2			mov	temp_h,ds:[PC80]
 8319  46		     2			inc	PC80
 831A  FF E2		     2			jmp	temp
				M1	84H
 = 0085			     1		op2	= 84H + 1
						ADD8	H
 8400  02 C7		     1			add	A,H
 8402  9F		     1			lahf
 8403  70 08		     1			jo	@f
 8405  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8408  8A 34		     2			mov	temp_h,ds:[PC80]
 840A  46		     2			inc	PC80
 840B  FF E2		     2			jmp	temp
 840D  80 E4 FD		     1	@@:		and	ah,not n_flag
 8410  80 CC 04		     1			or	ah,v_flag
 8413  8A 34		     2			mov	temp_h,ds:[PC80]
 8415  46		     2			inc	PC80
 8416  FF E2		     2			jmp	temp
				M1	85H
 = 0086			     1		op2	= 85H + 1
						ADD8	L
 8500  02 C3		     1			add	A,L
 8502  9F		     1			lahf
 8503  70 08		     1			jo	@f
 8505  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8508  8A 34		     2			mov	temp_h,ds:[PC80]
 850A  46		     2			inc	PC80
 850B  FF E2		     2			jmp	temp
 850D  80 E4 FD		     1	@@:		and	ah,not n_flag
 8510  80 CC 04		     1			or	ah,v_flag
 8513  8A 34		     2			mov	temp_h,ds:[PC80]
 8515  46		     2			inc	PC80
 8516  FF E2		     2			jmp	temp
				M1	86H
 = 0087			     1		op2	= 86H + 1
						ADD8	M
 8600  02 07		     1			add	A,M
 8602  9F		     1			lahf
 8603  70 08		     1			jo	@f
 8605  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8608  8A 34		     2			mov	temp_h,ds:[PC80]
 860A  46		     2			inc	PC80
 860B  FF E2		     2			jmp	temp
 860D  80 E4 FD		     1	@@:		and	ah,not n_flag
 8610  80 CC 04		     1			or	ah,v_flag
 8613  8A 34		     2			mov	temp_h,ds:[PC80]
 8615  46		     2			inc	PC80
 8616  FF E2		     2			jmp	temp
				M1	87H
 = 0088			     1		op2	= 87H + 1
						ADD8	A
 8700  02 C0		     1			add	A,A
 8702  9F		     1			lahf
 8703  70 08		     1			jo	@f
 8705  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8708  8A 34		     2			mov	temp_h,ds:[PC80]
 870A  46		     2			inc	PC80
 870B  FF E2		     2			jmp	temp
 870D  80 E4 FD		     1	@@:		and	ah,not n_flag
 8710  80 CC 04		     1			or	ah,v_flag
 8713  8A 34		     2			mov	temp_h,ds:[PC80]
 8715  46		     2			inc	PC80
 8716  FF E2		     2			jmp	temp

				M1	88H
 = 0089			     1		op2	= 88H + 1
						ADC8	B
 8800  9E		     1			sahf
 8801  12 C5		     1			adc	A,B
 8803  9F		     1			lahf
 8804  70 08		     1			jo	@f
 8806  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8809  8A 34		     2			mov	temp_h,ds:[PC80]
 880B  46		     2			inc	PC80
 880C  FF E2		     2			jmp	temp
 880E  80 E4 FD		     1	@@:		and	ah,not n_flag
 8811  80 CC 04		     1			or	ah,v_flag
 8814  8A 34		     2			mov	temp_h,ds:[PC80]
 8816  46		     2			inc	PC80
 8817  FF E2		     2			jmp	temp
				M1	89H
 = 008A			     1		op2	= 89H + 1
						ADC8	C_reg
 8900  9E		     1			sahf
 8901  12 C1		     1			adc	A,C_reg
 8903  9F		     1			lahf
 8904  70 08		     1			jo	@f
 8906  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8909  8A 34		     2			mov	temp_h,ds:[PC80]
 890B  46		     2			inc	PC80
 890C  FF E2		     2			jmp	temp
 890E  80 E4 FD		     1	@@:		and	ah,not n_flag
 8911  80 CC 04		     1			or	ah,v_flag
 8914  8A 34		     2			mov	temp_h,ds:[PC80]
 8916  46		     2			inc	PC80
 8917  FF E2		     2			jmp	temp
				M1	8AH
 = 008B			     1		op2	= 8AH + 1
						ADC8	D
 8A00  9E		     1			sahf
 8A01  8B D5		     1			mov	temp,save_temp
 8A03  12 C6		     1			adc	A,D
 8A05  B2 00		     1			mov	temp_l,0
 8A07  9F		     1			lahf
 8A08  70 08		     1			jo	@f
 8A0A  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8A0D  8A 34		     2			mov	temp_h,ds:[PC80]
 8A0F  46		     2			inc	PC80
 8A10  FF E2		     2			jmp	temp
 8A12  80 E4 FD		     1	@@:		and	ah,not n_flag
 8A15  80 CC 04		     1			or	ah,v_flag
 8A18  8A 34		     2			mov	temp_h,ds:[PC80]
 8A1A  46		     2			inc	PC80
 8A1B  FF E2		     2			jmp	temp
				M1	8BH
 = 008C			     1		op2	= 8BH + 1
						ADC8	E
 8B00  9E		     1			sahf
 8B01  8B D5		     1			mov	temp,save_temp
 8B03  12 C2		     1			adc	A,E
 8B05  B2 00		     1			mov	temp_l,0
 8B07  9F		     1			lahf
 8B08  70 08		     1			jo	@f
 8B0A  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8B0D  8A 34		     2			mov	temp_h,ds:[PC80]
 8B0F  46		     2			inc	PC80
 8B10  FF E2		     2			jmp	temp
 8B12  80 E4 FD		     1	@@:		and	ah,not n_flag
 8B15  80 CC 04		     1			or	ah,v_flag
 8B18  8A 34		     2			mov	temp_h,ds:[PC80]
 8B1A  46		     2			inc	PC80
 8B1B  FF E2		     2			jmp	temp
				M1	8CH
 = 008D			     1		op2	= 8CH + 1
						ADC8	H
 8C00  9E		     1			sahf
 8C01  12 C7		     1			adc	A,H
 8C03  9F		     1			lahf
 8C04  70 08		     1			jo	@f
 8C06  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8C09  8A 34		     2			mov	temp_h,ds:[PC80]
 8C0B  46		     2			inc	PC80
 8C0C  FF E2		     2			jmp	temp
 8C0E  80 E4 FD		     1	@@:		and	ah,not n_flag
 8C11  80 CC 04		     1			or	ah,v_flag
 8C14  8A 34		     2			mov	temp_h,ds:[PC80]
 8C16  46		     2			inc	PC80
 8C17  FF E2		     2			jmp	temp
				M1	8DH
 = 008E			     1		op2	= 8DH + 1
						ADC8	L
 8D00  9E		     1			sahf
 8D01  12 C3		     1			adc	A,L
 8D03  9F		     1			lahf
 8D04  70 08		     1			jo	@f
 8D06  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8D09  8A 34		     2			mov	temp_h,ds:[PC80]
 8D0B  46		     2			inc	PC80
 8D0C  FF E2		     2			jmp	temp
 8D0E  80 E4 FD		     1	@@:		and	ah,not n_flag
 8D11  80 CC 04		     1			or	ah,v_flag
 8D14  8A 34		     2			mov	temp_h,ds:[PC80]
 8D16  46		     2			inc	PC80
 8D17  FF E2		     2			jmp	temp
				M1	8EH
 = 008F			     1		op2	= 8EH + 1
						ADC8	M
 8E00  9E		     1			sahf
 8E01  12 07		     1			adc	A,M
 8E03  9F		     1			lahf
 8E04  70 08		     1			jo	@f
 8E06  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8E09  8A 34		     2			mov	temp_h,ds:[PC80]
 8E0B  46		     2			inc	PC80
 8E0C  FF E2		     2			jmp	temp
 8E0E  80 E4 FD		     1	@@:		and	ah,not n_flag
 8E11  80 CC 04		     1			or	ah,v_flag
 8E14  8A 34		     2			mov	temp_h,ds:[PC80]
 8E16  46		     2			inc	PC80
 8E17  FF E2		     2			jmp	temp
				M1	8FH
 = 0090			     1		op2	= 8FH + 1
						ADC8	A
 8F00  9E		     1			sahf
 8F01  12 C0		     1			adc	A,A
 8F03  9F		     1			lahf
 8F04  70 08		     1			jo	@f
 8F06  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8F09  8A 34		     2			mov	temp_h,ds:[PC80]
 8F0B  46		     2			inc	PC80
 8F0C  FF E2		     2			jmp	temp
 8F0E  80 E4 FD		     1	@@:		and	ah,not n_flag
 8F11  80 CC 04		     1			or	ah,v_flag
 8F14  8A 34		     2			mov	temp_h,ds:[PC80]
 8F16  46		     2			inc	PC80
 8F17  FF E2		     2			jmp	temp

				M1	90H
 = 0091			     1		op2	= 90H + 1
						SUB8	B
 9000  2A C5		     1			sub	A,B
 9002  9F		     1			lahf
 9003  70 08		     1			jo	@f
 9005  80 E4 FB		     1			and	ah,not(v_flag)
 9008  8A 34		     2			mov	temp_h,ds:[PC80]
 900A  46		     2			inc	PC80
 900B  FF E2		     2			jmp	temp
 900D  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9010  8A 34		     2			mov	temp_h,ds:[PC80]
 9012  46		     2			inc	PC80
 9013  FF E2		     2			jmp	temp
				M1	91H
 = 0092			     1		op2	= 91H + 1
						SUB8	C_reg
 9100  2A C1		     1			sub	A,C_reg
 9102  9F		     1			lahf
 9103  70 08		     1			jo	@f
 9105  80 E4 FB		     1			and	ah,not(v_flag)
 9108  8A 34		     2			mov	temp_h,ds:[PC80]
 910A  46		     2			inc	PC80
 910B  FF E2		     2			jmp	temp
 910D  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9110  8A 34		     2			mov	temp_h,ds:[PC80]
 9112  46		     2			inc	PC80
 9113  FF E2		     2			jmp	temp
				M1	92H
 = 0093			     1		op2	= 92H + 1
						SUB8	D
 9200  8B D5		     1			mov	temp,save_temp
 9202  2A C6		     1			sub	A,D
 9204  B2 00		     1			mov	temp_l,0
 9206  9F		     1			lahf
 9207  70 08		     1			jo	@f
 9209  80 E4 FB		     1			and	ah,not(v_flag)
 920C  8A 34		     2			mov	temp_h,ds:[PC80]
 920E  46		     2			inc	PC80
 920F  FF E2		     2			jmp	temp
 9211  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9214  8A 34		     2			mov	temp_h,ds:[PC80]
 9216  46		     2			inc	PC80
 9217  FF E2		     2			jmp	temp
				M1	93H
 = 0094			     1		op2	= 93H + 1
						SUB8	E
 9300  8B D5		     1			mov	temp,save_temp
 9302  2A C2		     1			sub	A,E
 9304  B2 00		     1			mov	temp_l,0
 9306  9F		     1			lahf
 9307  70 08		     1			jo	@f
 9309  80 E4 FB		     1			and	ah,not(v_flag)
 930C  8A 34		     2			mov	temp_h,ds:[PC80]
 930E  46		     2			inc	PC80
 930F  FF E2		     2			jmp	temp
 9311  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9314  8A 34		     2			mov	temp_h,ds:[PC80]
 9316  46		     2			inc	PC80
 9317  FF E2		     2			jmp	temp
				M1	94H
 = 0095			     1		op2	= 94H + 1
						SUB8	H
 9400  2A C7		     1			sub	A,H
 9402  9F		     1			lahf
 9403  70 08		     1			jo	@f
 9405  80 E4 FB		     1			and	ah,not(v_flag)
 9408  8A 34		     2			mov	temp_h,ds:[PC80]
 940A  46		     2			inc	PC80
 940B  FF E2		     2			jmp	temp
 940D  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9410  8A 34		     2			mov	temp_h,ds:[PC80]
 9412  46		     2			inc	PC80
 9413  FF E2		     2			jmp	temp
				M1	95H
 = 0096			     1		op2	= 95H + 1
						SUB8	L
 9500  2A C3		     1			sub	A,L
 9502  9F		     1			lahf
 9503  70 08		     1			jo	@f
 9505  80 E4 FB		     1			and	ah,not(v_flag)
 9508  8A 34		     2			mov	temp_h,ds:[PC80]
 950A  46		     2			inc	PC80
 950B  FF E2		     2			jmp	temp
 950D  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9510  8A 34		     2			mov	temp_h,ds:[PC80]
 9512  46		     2			inc	PC80
 9513  FF E2		     2			jmp	temp
				M1	96H
 = 0097			     1		op2	= 96H + 1
						SUB8	M
 9600  2A 07		     1			sub	A,M
 9602  9F		     1			lahf
 9603  70 08		     1			jo	@f
 9605  80 E4 FB		     1			and	ah,not(v_flag)
 9608  8A 34		     2			mov	temp_h,ds:[PC80]
 960A  46		     2			inc	PC80
 960B  FF E2		     2			jmp	temp
 960D  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9610  8A 34		     2			mov	temp_h,ds:[PC80]
 9612  46		     2			inc	PC80
 9613  FF E2		     2			jmp	temp
				M1	97H
 = 0098			     1		op2	= 97H + 1
						SUB8	A
 9700  2A C0		     1			sub	A,A
 9702  9F		     1			lahf
 9703  70 08		     1			jo	@f
 9705  80 E4 FB		     1			and	ah,not(v_flag)
 9708  8A 34		     2			mov	temp_h,ds:[PC80]
 970A  46		     2			inc	PC80
 970B  FF E2		     2			jmp	temp
 970D  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9710  8A 34		     2			mov	temp_h,ds:[PC80]
 9712  46		     2			inc	PC80
 9713  FF E2		     2			jmp	temp

				M1	98H
 = 0099			     1		op2	= 98H + 1
						SBC8	B
 9800  9E		     1			sahf
 9801  1A C5		     1			sbb	A,B
 9803  9F		     1			lahf
 9804  70 08		     1			jo	@f
 9806  80 E4 FB		     1			and	ah,not(v_flag)
 9809  8A 34		     2			mov	temp_h,ds:[PC80]
 980B  46		     2			inc	PC80
 980C  FF E2		     2			jmp	temp
 980E  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9811  8A 34		     2			mov	temp_h,ds:[PC80]
 9813  46		     2			inc	PC80
 9814  FF E2		     2			jmp	temp
				M1	99H
 = 009A			     1		op2	= 99H + 1
						SBC8	C_reg
 9900  9E		     1			sahf
 9901  1A C1		     1			sbb	A,C_reg
 9903  9F		     1			lahf
 9904  70 08		     1			jo	@f
 9906  80 E4 FB		     1			and	ah,not(v_flag)
 9909  8A 34		     2			mov	temp_h,ds:[PC80]
 990B  46		     2			inc	PC80
 990C  FF E2		     2			jmp	temp
 990E  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9911  8A 34		     2			mov	temp_h,ds:[PC80]
 9913  46		     2			inc	PC80
 9914  FF E2		     2			jmp	temp
				M1	9AH
 = 009B			     1		op2	= 9AH + 1
						SBC8	D
 9A00  9E		     1			sahf
 9A01  8B D5		     1			mov	temp,save_temp
 9A03  1A C6		     1			sbb	A,D
 9A05  B2 00		     1			mov	temp_l,0
 9A07  9F		     1			lahf
 9A08  70 08		     1			jo	@f
 9A0A  80 E4 FB		     1			and	ah,not(v_flag)
 9A0D  8A 34		     2			mov	temp_h,ds:[PC80]
 9A0F  46		     2			inc	PC80
 9A10  FF E2		     2			jmp	temp
 9A12  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9A15  8A 34		     2			mov	temp_h,ds:[PC80]
 9A17  46		     2			inc	PC80
 9A18  FF E2		     2			jmp	temp
				M1	9BH
 = 009C			     1		op2	= 9BH + 1
						SBC8	E
 9B00  9E		     1			sahf
 9B01  8B D5		     1			mov	temp,save_temp
 9B03  1A C2		     1			sbb	A,E
 9B05  B2 00		     1			mov	temp_l,0
 9B07  9F		     1			lahf
 9B08  70 08		     1			jo	@f
 9B0A  80 E4 FB		     1			and	ah,not(v_flag)
 9B0D  8A 34		     2			mov	temp_h,ds:[PC80]
 9B0F  46		     2			inc	PC80
 9B10  FF E2		     2			jmp	temp
 9B12  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9B15  8A 34		     2			mov	temp_h,ds:[PC80]
 9B17  46		     2			inc	PC80
 9B18  FF E2		     2			jmp	temp
				M1	9CH

 = 009D			     1		op2	= 9CH + 1
						SBC8	H
 9C00  9E		     1			sahf
 9C01  1A C7		     1			sbb	A,H
 9C03  9F		     1			lahf
 9C04  70 08		     1			jo	@f
 9C06  80 E4 FB		     1			and	ah,not(v_flag)
 9C09  8A 34		     2			mov	temp_h,ds:[PC80]
 9C0B  46		     2			inc	PC80
 9C0C  FF E2		     2			jmp	temp
 9C0E  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9C11  8A 34		     2			mov	temp_h,ds:[PC80]
 9C13  46		     2			inc	PC80
 9C14  FF E2		     2			jmp	temp
				M1	9DH
 = 009E			     1		op2	= 9DH + 1
						SBC8	L
 9D00  9E		     1			sahf
 9D01  1A C3		     1			sbb	A,L
 9D03  9F		     1			lahf
 9D04  70 08		     1			jo	@f
 9D06  80 E4 FB		     1			and	ah,not(v_flag)
 9D09  8A 34		     2			mov	temp_h,ds:[PC80]
 9D0B  46		     2			inc	PC80
 9D0C  FF E2		     2			jmp	temp
 9D0E  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9D11  8A 34		     2			mov	temp_h,ds:[PC80]
 9D13  46		     2			inc	PC80
 9D14  FF E2		     2			jmp	temp
				M1	9EH
 = 009F			     1		op2	= 9EH + 1
						SBC8	M
 9E00  9E		     1			sahf
 9E01  1A 07		     1			sbb	A,M
 9E03  9F		     1			lahf
 9E04  70 08		     1			jo	@f
 9E06  80 E4 FB		     1			and	ah,not(v_flag)
 9E09  8A 34		     2			mov	temp_h,ds:[PC80]
 9E0B  46		     2			inc	PC80
 9E0C  FF E2		     2			jmp	temp
 9E0E  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9E11  8A 34		     2			mov	temp_h,ds:[PC80]
 9E13  46		     2			inc	PC80
 9E14  FF E2		     2			jmp	temp
				M1	9FH
 = 00A0			     1		op2	= 9FH + 1
						SBC8	A
 9F00  9E		     1			sahf
 9F01  1A C0		     1			sbb	A,A
 9F03  9F		     1			lahf
 9F04  70 08		     1			jo	@f
 9F06  80 E4 FB		     1			and	ah,not(v_flag)
 9F09  8A 34		     2			mov	temp_h,ds:[PC80]
 9F0B  46		     2			inc	PC80
 9F0C  FF E2		     2			jmp	temp
 9F0E  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9F11  8A 34		     2			mov	temp_h,ds:[PC80]
 9F13  46		     2			inc	PC80
 9F14  FF E2		     2			jmp	temp

				M1	0A0H
 = 00A1			     1		op2	= 0A0H + 1
						ANA	B
 A000  22 C5		     1			and	A,B
 A002  9F		     1			lahf
 A003  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A006  80 CC 10		     1			or	ah,h_flag
 A009  8A 34		     2			mov	temp_h,ds:[PC80]
 A00B  46		     2			inc	PC80
 A00C  FF E2		     2			jmp	temp
				M1	0A1H
 = 00A2			     1		op2	= 0A1H + 1
						ANA	C_reg
 A100  22 C1		     1			and	A,C_reg
 A102  9F		     1			lahf
 A103  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A106  80 CC 10		     1			or	ah,h_flag
 A109  8A 34		     2			mov	temp_h,ds:[PC80]
 A10B  46		     2			inc	PC80
 A10C  FF E2		     2			jmp	temp
				M1	0A2H
 = 00A3			     1		op2	= 0A2H + 1
						ANA	D
 A200  8B D5		     1			mov	temp,save_temp
 A202  22 C6		     1			and	A,D
 A204  B2 00		     1			mov	temp_l,0
 A206  9F		     1			lahf
 A207  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A20A  80 CC 10		     1			or	ah,h_flag
 A20D  8A 34		     2			mov	temp_h,ds:[PC80]
 A20F  46		     2			inc	PC80
 A210  FF E2		     2			jmp	temp
				M1	0A3H
 = 00A4			     1		op2	= 0A3H + 1
						ANA	E
 A300  8B D5		     1			mov	temp,save_temp
 A302  22 C2		     1			and	A,E
 A304  B2 00		     1			mov	temp_l,0
 A306  9F		     1			lahf
 A307  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A30A  80 CC 10		     1			or	ah,h_flag
 A30D  8A 34		     2			mov	temp_h,ds:[PC80]
 A30F  46		     2			inc	PC80
 A310  FF E2		     2			jmp	temp
				M1	0A4H
 = 00A5			     1		op2	= 0A4H + 1
						ANA	H
 A400  22 C7		     1			and	A,H
 A402  9F		     1			lahf
 A403  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A406  80 CC 10		     1			or	ah,h_flag
 A409  8A 34		     2			mov	temp_h,ds:[PC80]
 A40B  46		     2			inc	PC80
 A40C  FF E2		     2			jmp	temp
				M1	0A5H
 = 00A6			     1		op2	= 0A5H + 1
						ANA	L
 A500  22 C3		     1			and	A,L
 A502  9F		     1			lahf
 A503  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A506  80 CC 10		     1			or	ah,h_flag
 A509  8A 34		     2			mov	temp_h,ds:[PC80]
 A50B  46		     2			inc	PC80
 A50C  FF E2		     2			jmp	temp
				M1	0A6H
 = 00A7			     1		op2	= 0A6H + 1
						ANA	M
 A600  22 07		     1			and	A,M
 A602  9F		     1			lahf
 A603  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A606  80 CC 10		     1			or	ah,h_flag
 A609  8A 34		     2			mov	temp_h,ds:[PC80]
 A60B  46		     2			inc	PC80
 A60C  FF E2		     2			jmp	temp
				M1	0A7H
 = 00A8			     1		op2	= 0A7H + 1
						ANA	A
 A700  22 C0		     1			and	A,A
 A702  9F		     1			lahf
 A703  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A706  80 CC 10		     1			or	ah,h_flag
 A709  8A 34		     2			mov	temp_h,ds:[PC80]
 A70B  46		     2			inc	PC80
 A70C  FF E2		     2			jmp	temp

				M1	0A8H
 = 00A9			     1		op2	= 0A8H + 1
						XRA	B
 A800  32 C5		     1			xor	A,B
 A802  9F		     1			lahf
 A803  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 A806  8A 34		     2			mov	temp_h,ds:[PC80]
 A808  46		     2			inc	PC80
 A809  FF E2		     2			jmp	temp
				M1	0A9H
 = 00AA			     1		op2	= 0A9H + 1
						XRA	C_reg
 A900  32 C1		     1			xor	A,C_reg
 A902  9F		     1			lahf
 A903  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 A906  8A 34		     2			mov	temp_h,ds:[PC80]
 A908  46		     2			inc	PC80
 A909  FF E2		     2			jmp	temp
				M1	0AAH
 = 00AB			     1		op2	= 0AAH + 1
						XRA	D
 AA00  8B D5		     1			mov	temp,save_temp
 AA02  32 C6		     1			xor	A,D
 AA04  B2 00		     1			mov	temp_l,0
 AA06  9F		     1			lahf
 AA07  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 AA0A  8A 34		     2			mov	temp_h,ds:[PC80]
 AA0C  46		     2			inc	PC80
 AA0D  FF E2		     2			jmp	temp
				M1	0ABH
 = 00AC			     1		op2	= 0ABH + 1
						XRA	E
 AB00  8B D5		     1			mov	temp,save_temp
 AB02  32 C2		     1			xor	A,E
 AB04  B2 00		     1			mov	temp_l,0
 AB06  9F		     1			lahf
 AB07  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 AB0A  8A 34		     2			mov	temp_h,ds:[PC80]
 AB0C  46		     2			inc	PC80
 AB0D  FF E2		     2			jmp	temp
				M1	0ACH
 = 00AD			     1		op2	= 0ACH + 1
						XRA	H
 AC00  32 C7		     1			xor	A,H
 AC02  9F		     1			lahf
 AC03  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 AC06  8A 34		     2			mov	temp_h,ds:[PC80]
 AC08  46		     2			inc	PC80
 AC09  FF E2		     2			jmp	temp
				M1	0ADH
 = 00AE			     1		op2	= 0ADH + 1
						XRA	L
 AD00  32 C3		     1			xor	A,L
 AD02  9F		     1			lahf
 AD03  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 AD06  8A 34		     2			mov	temp_h,ds:[PC80]
 AD08  46		     2			inc	PC80
 AD09  FF E2		     2			jmp	temp
				M1	0AEH
 = 00AF			     1		op2	= 0AEH + 1
						XRA	M
 AE00  32 07		     1			xor	A,M
 AE02  9F		     1			lahf
 AE03  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 AE06  8A 34		     2			mov	temp_h,ds:[PC80]
 AE08  46		     2			inc	PC80
 AE09  FF E2		     2			jmp	temp
				M1	0AFH
 = 00B0			     1		op2	= 0AFH + 1
						XRA	A
 AF00  32 C0		     1			xor	A,A
 AF02  9F		     1			lahf
 AF03  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 AF06  8A 34		     2			mov	temp_h,ds:[PC80]
 AF08  46		     2			inc	PC80
 AF09  FF E2		     2			jmp	temp

				M1	0B0H
 = 00B1			     1		op2	= 0B0H + 1
						ORA	B
 B000  0A C5		     1			or	A,B
 B002  9F		     1			lahf
 B003  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B006  8A 34		     2			mov	temp_h,ds:[PC80]
 B008  46		     2			inc	PC80
 B009  FF E2		     2			jmp	temp
				M1	0B1H
 = 00B2			     1		op2	= 0B1H + 1
						ORA	C_reg
 B100  0A C1		     1			or	A,C_reg
 B102  9F		     1			lahf
 B103  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B106  8A 34		     2			mov	temp_h,ds:[PC80]
 B108  46		     2			inc	PC80
 B109  FF E2		     2			jmp	temp
				M1	0B2H
 = 00B3			     1		op2	= 0B2H + 1
						ORA	D
 B200  8B D5		     1			mov	temp,save_temp
 B202  0A C6		     1			or	A,D
 B204  B2 00		     1			mov	temp_l,0
 B206  9F		     1			lahf
 B207  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B20A  8A 34		     2			mov	temp_h,ds:[PC80]
 B20C  46		     2			inc	PC80
 B20D  FF E2		     2			jmp	temp
				M1	0B3H
 = 00B4			     1		op2	= 0B3H + 1
						ORA	E
 B300  8B D5		     1			mov	temp,save_temp
 B302  0A C2		     1			or	A,E
 B304  B2 00		     1			mov	temp_l,0
 B306  9F		     1			lahf
 B307  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B30A  8A 34		     2			mov	temp_h,ds:[PC80]
 B30C  46		     2			inc	PC80
 B30D  FF E2		     2			jmp	temp
				M1	0B4H
 = 00B5			     1		op2	= 0B4H + 1
						ORA	H
 B400  0A C7		     1			or	A,H
 B402  9F		     1			lahf
 B403  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B406  8A 34		     2			mov	temp_h,ds:[PC80]
 B408  46		     2			inc	PC80
 B409  FF E2		     2			jmp	temp
				M1	0B5H
 = 00B6			     1		op2	= 0B5H + 1
						ORA	L
 B500  0A C3		     1			or	A,L
 B502  9F		     1			lahf
 B503  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B506  8A 34		     2			mov	temp_h,ds:[PC80]
 B508  46		     2			inc	PC80
 B509  FF E2		     2			jmp	temp
				M1	0B6H
 = 00B7			     1		op2	= 0B6H + 1
						ORA	M
 B600  0A 07		     1			or	A,M
 B602  9F		     1			lahf
 B603  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B606  8A 34		     2			mov	temp_h,ds:[PC80]
 B608  46		     2			inc	PC80
 B609  FF E2		     2			jmp	temp
				M1	0B7H
 = 00B8			     1		op2	= 0B7H + 1
						ORA	A
 B700  0A C0		     1			or	A,A
 B702  9F		     1			lahf
 B703  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B706  8A 34		     2			mov	temp_h,ds:[PC80]
 B708  46		     2			inc	PC80
 B709  FF E2		     2			jmp	temp

				M1	0B8H
 = 00B9			     1		op2	= 0B8H + 1
						CPA	B
 B800  3A C5		     1			cmp	A,B
 B802  9F		     1			lahf
 B803  70 08		     1			jo	@f
 B805  80 E4 FB		     1			and	ah,not(v_flag)
 B808  8A 34		     2			mov	temp_h,ds:[PC80]
 B80A  46		     2			inc	PC80
 B80B  FF E2		     2			jmp	temp
 B80D  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 B810  8A 34		     2			mov	temp_h,ds:[PC80]
 B812  46		     2			inc	PC80
 B813  FF E2		     2			jmp	temp
				M1	0B9H
 = 00BA			     1		op2	= 0B9H + 1
						CPA	C_reg
 B900  3A C1		     1			cmp	A,C_reg
 B902  9F		     1			lahf
 B903  70 08		     1			jo	@f
 B905  80 E4 FB		     1			and	ah,not(v_flag)
 B908  8A 34		     2			mov	temp_h,ds:[PC80]
 B90A  46		     2			inc	PC80
 B90B  FF E2		     2			jmp	temp
 B90D  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 B910  8A 34		     2			mov	temp_h,ds:[PC80]
 B912  46		     2			inc	PC80
 B913  FF E2		     2			jmp	temp
				M1	0BAH
 = 00BB			     1		op2	= 0BAH + 1
						CPA	D
 BA00  8B D5		     1			mov	temp,save_temp
 BA02  3A C6		     1			cmp	A,D
 BA04  B2 00		     1			mov	temp_l,0
 BA06  9F		     1			lahf
 BA07  70 08		     1			jo	@f
 BA09  80 E4 FB		     1			and	ah,not(v_flag)
 BA0C  8A 34		     2			mov	temp_h,ds:[PC80]
 BA0E  46		     2			inc	PC80
 BA0F  FF E2		     2			jmp	temp
 BA11  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 BA14  8A 34		     2			mov	temp_h,ds:[PC80]
 BA16  46		     2			inc	PC80
 BA17  FF E2		     2			jmp	temp
				M1	0BBH
 = 00BC			     1		op2	= 0BBH + 1
						CPA	E
 BB00  8B D5		     1			mov	temp,save_temp
 BB02  3A C2		     1			cmp	A,E
 BB04  B2 00		     1			mov	temp_l,0
 BB06  9F		     1			lahf
 BB07  70 08		     1			jo	@f
 BB09  80 E4 FB		     1			and	ah,not(v_flag)
 BB0C  8A 34		     2			mov	temp_h,ds:[PC80]
 BB0E  46		     2			inc	PC80
 BB0F  FF E2		     2			jmp	temp
 BB11  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 BB14  8A 34		     2			mov	temp_h,ds:[PC80]
 BB16  46		     2			inc	PC80
 BB17  FF E2		     2			jmp	temp
				M1	0BCH
 = 00BD			     1		op2	= 0BCH + 1
						CPA	H
 BC00  3A C7		     1			cmp	A,H
 BC02  9F		     1			lahf
 BC03  70 08		     1			jo	@f
 BC05  80 E4 FB		     1			and	ah,not(v_flag)
 BC08  8A 34		     2			mov	temp_h,ds:[PC80]
 BC0A  46		     2			inc	PC80
 BC0B  FF E2		     2			jmp	temp
 BC0D  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 BC10  8A 34		     2			mov	temp_h,ds:[PC80]
 BC12  46		     2			inc	PC80
 BC13  FF E2		     2			jmp	temp
				M1	0BDH
 = 00BE			     1		op2	= 0BDH + 1
						CPA	L
 BD00  3A C3		     1			cmp	A,L
 BD02  9F		     1			lahf
 BD03  70 08		     1			jo	@f
 BD05  80 E4 FB		     1			and	ah,not(v_flag)
 BD08  8A 34		     2			mov	temp_h,ds:[PC80]
 BD0A  46		     2			inc	PC80
 BD0B  FF E2		     2			jmp	temp
 BD0D  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 BD10  8A 34		     2			mov	temp_h,ds:[PC80]
 BD12  46		     2			inc	PC80
 BD13  FF E2		     2			jmp	temp
				M1	0BEH
 = 00BF			     1		op2	= 0BEH + 1
						CPA	M
 BE00  3A 07		     1			cmp	A,M
 BE02  9F		     1			lahf
 BE03  70 08		     1			jo	@f
 BE05  80 E4 FB		     1			and	ah,not(v_flag)
 BE08  8A 34		     2			mov	temp_h,ds:[PC80]
 BE0A  46		     2			inc	PC80
 BE0B  FF E2		     2			jmp	temp
 BE0D  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 BE10  8A 34		     2			mov	temp_h,ds:[PC80]
 BE12  46		     2			inc	PC80
 BE13  FF E2		     2			jmp	temp
				M1	0BFH
 = 00C0			     1		op2	= 0BFH + 1
						CPA	A

 BF00  3A C0		     1			cmp	A,A
 BF02  9F		     1			lahf
 BF03  70 08		     1			jo	@f
 BF05  80 E4 FB		     1			and	ah,not(v_flag)
 BF08  8A 34		     2			mov	temp_h,ds:[PC80]
 BF0A  46		     2			inc	PC80
 BF0B  FF E2		     2			jmp	temp
 BF0D  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 BF10  8A 34		     2			mov	temp_h,ds:[PC80]
 BF12  46		     2			inc	PC80
 BF13  FF E2		     2			jmp	temp
				;--------------------------
				M1	0C0H
 = 00C1			     1		op2	= 0C0H + 1
						RET80	NZ
 C000  9E		     1			sahf
 C001  75 05		     1			jNZ	@f
 C003  8A 34		     2			mov	temp_h,ds:[PC80]
 C005  46		     2			inc	PC80
 C006  FF E2		     2			jmp	temp
 C008			     1	@@:
 C008  8B 35		     1			mov	PC80,ds:[SP80]
 C00A  83 C7 02		     1			add	SP80,2
 C00D  8A 34		     2			mov	temp_h,ds:[PC80]
 C00F  46		     2			inc	PC80
 C010  FF E2		     2			jmp	temp

				M1	0C1H
 = 00C2			     1		op2	= 0C1H + 1
						POP8	BC
 C100  8B 0D		     1			mov	BC,ds:[SP80]
 C102  83 C7 02		     1			add	SP80,2
 C105  8A 34		     2			mov	temp_h,ds:[PC80]
 C107  46		     2			inc	PC80
 C108  FF E2		     2			jmp	temp

				M1	0C2H
 = 00C3			     1		op2	= 0C2H + 1
						JP80	NZ
 C200  9E		     1			sahf
 C201  75 08		     1			jNZ	@f
 C203  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 C206  83 C6 03		     2			add	PC80,3
 C209  FF E2		     2			jmp	temp
 C20B			     1	@@:
 C20B  8B 34		     1			mov	PC80,ds:[PC80]
 C20D  8A 34		     2			mov	temp_h,ds:[PC80]
 C20F  46		     2			inc	PC80
 C210  FF E2		     2			jmp	temp

				M1	0C3H
 = 00C4			     1		op2	= 0C3H + 1
						JP80
 C300  8B 34		     1			mov	PC80,ds:[PC80]
 C302  8A 34		     2			mov	temp_h,ds:[PC80]
 C304  46		     2			inc	PC80
 C305  FF E2		     2			jmp	temp

				M1	0C4H
 = 00C5			     1		op2	= 0C4H + 1
						CALL80	NZ
 C400  83 C6 02		     1			add	PC80,2
 C403  9E		     1			sahf
 C404  75 05		     1			jNZ	@f
 C406  8A 34		     2			mov	temp_h,ds:[PC80]
 C408  46		     2			inc	PC80
 C409  FF E2		     2			jmp	temp
 C40B			     1	@@:
 C40B  83 EF 02		     1			sub	SP80,2
 C40E  89 35		     1			mov	ds:[SP80],PC80
 C410  8B 74 FE		     1			mov	PC80,ds:[PC80-2]
 C413  8A 34		     2			mov	temp_h,ds:[PC80]
 C415  46		     2			inc	PC80
 C416  FF E2		     2			jmp	temp

				M1	0C5H
 = 00C6			     1		op2	= 0C5H + 1
						PUSH8	BC
 C500  83 EF 02		     1			sub	SP80,2
 C503  89 0D		     1			mov	ds:[SP80],BC
 C505  8A 34		     2			mov	temp_h,ds:[PC80]
 C507  46		     2			inc	PC80
 C508  FF E2		     2			jmp	temp

				M1	0C6H				;add	A,n
 = 00C7			     1		op2	= 0C6H + 1
 C600  02 04					add	A,ds:[PC80]
 C602  9F					lahf
 C603  70 09					jo	@f
 C605  80 E4 F9					and	ah,not (v_flag or n_flag)
						fetch2
 C608  46		     1			inc	PC80
 C609  8A 34		     1			mov	temp_h,ds:[PC80]
 C60B  46		     1			inc	PC80
 C60C  FF E2		     1			jmp	temp
 C60E  80 E4 FD			@@:		and	ah,not n_flag
 C611  80 CC 04					or	ah,v_flag
						fetch2
 C614  46		     1			inc	PC80
 C615  8A 34		     1			mov	temp_h,ds:[PC80]
 C617  46		     1			inc	PC80
 C618  FF E2		     1			jmp	temp

				M1	0C7H
 = 00C8			     1		op2	= 0C7H + 1
						RST	00h
 C700  83 EF 02		     1			sub	SP80,2
 C703  89 35		     1			mov	ds:[SP80],PC80
 C705  BE 0000		     1			mov	PC80,00h
 C708  8A 34		     2			mov	temp_h,ds:[PC80]
 C70A  46		     2			inc	PC80
 C70B  FF E2		     2			jmp	temp

				M1	0C8H
 = 00C9			     1		op2	= 0C8H + 1
						RET80	Z
 C800  9E		     1			sahf
 C801  74 05		     1			jZ	@f
 C803  8A 34		     2			mov	temp_h,ds:[PC80]
 C805  46		     2			inc	PC80
 C806  FF E2		     2			jmp	temp
 C808			     1	@@:
 C808  8B 35		     1			mov	PC80,ds:[SP80]
 C80A  83 C7 02		     1			add	SP80,2
 C80D  8A 34		     2			mov	temp_h,ds:[PC80]
 C80F  46		     2			inc	PC80
 C810  FF E2		     2			jmp	temp

				M1	0C9H
 = 00CA			     1		op2	= 0C9H + 1
						RET80
 C900  8B 35		     1			mov	PC80,ds:[SP80]
 C902  83 C7 02		     1			add	SP80,2
 C905  8A 34		     2			mov	temp_h,ds:[PC80]
 C907  46		     2			inc	PC80
 C908  FF E2		     2			jmp	temp

				M1	0CAH
 = 00CB			     1		op2	= 0CAH + 1
						JP80	Z
 CA00  9E		     1			sahf
 CA01  74 08		     1			jZ	@f
 CA03  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 CA06  83 C6 03		     2			add	PC80,3
 CA09  FF E2		     2			jmp	temp
 CA0B			     1	@@:
 CA0B  8B 34		     1			mov	PC80,ds:[PC80]
 CA0D  8A 34		     2			mov	temp_h,ds:[PC80]
 CA0F  46		     2			inc	PC80
 CA10  FF E2		     2			jmp	temp

				M1	0CBH
 = 00CC			     1		op2	= 0CBH + 1
 CB00  8A 34					mov	temp_h,ds:[PC80]
 CB02  46					inc	PC80
 CB03  B2 20					mov	temp_l,org_CB
 CB05  FF E2					jmp	temp

				M1	0CCH
 = 00CD			     1		op2	= 0CCH + 1
						CALL80	Z
 CC00  83 C6 02		     1			add	PC80,2
 CC03  9E		     1			sahf
 CC04  74 05		     1			jZ	@f
 CC06  8A 34		     2			mov	temp_h,ds:[PC80]
 CC08  46		     2			inc	PC80
 CC09  FF E2		     2			jmp	temp
 CC0B			     1	@@:
 CC0B  83 EF 02		     1			sub	SP80,2
 CC0E  89 35		     1			mov	ds:[SP80],PC80
 CC10  8B 74 FE		     1			mov	PC80,ds:[PC80-2]
 CC13  8A 34		     2			mov	temp_h,ds:[PC80]
 CC15  46		     2			inc	PC80
 CC16  FF E2		     2			jmp	temp

				M1	0CDH
 = 00CE			     1		op2	= 0CDH + 1
						CALL80
 CD00  83 C6 02		     1			add	PC80,2
 CD03  83 EF 02		     1			sub	SP80,2
 CD06  89 35		     1			mov	ds:[SP80],PC80
 CD08  8B 74 FE		     1			mov	PC80,ds:[PC80-2]
 CD0B  8A 34		     2			mov	temp_h,ds:[PC80]
 CD0D  46		     2			inc	PC80
 CD0E  FF E2		     2			jmp	temp

				M1	0CEH				;ADC	A,n
 = 00CF			     1		op2	= 0CEH + 1
 CE00  9E					sahf
 CE01  12 04					adc	A,ds:[PC80]
 CE03  9F					lahf
 CE04  70 09					jo	@f
 CE06  80 E4 F9					and	ah,not (v_flag or n_flag)
						fetch2
 CE09  46		     1			inc	PC80
 CE0A  8A 34		     1			mov	temp_h,ds:[PC80]
 CE0C  46		     1			inc	PC80
 CE0D  FF E2		     1			jmp	temp
 CE0F  80 E4 FD			@@:		and	ah,not n_flag
 CE12  80 CC 04					or	ah,v_flag
						fetch2
 CE15  46		     1			inc	PC80
 CE16  8A 34		     1			mov	temp_h,ds:[PC80]
 CE18  46		     1			inc	PC80
 CE19  FF E2		     1			jmp	temp

				M1	0CFH
 = 00D0			     1		op2	= 0CFH + 1
						RST	08h
 CF00  83 EF 02		     1			sub	SP80,2
 CF03  89 35		     1			mov	ds:[SP80],PC80
 CF05  BE 0008		     1			mov	PC80,08h
 CF08  8A 34		     2			mov	temp_h,ds:[PC80]
 CF0A  46		     2			inc	PC80
 CF0B  FF E2		     2			jmp	temp

				M1	0D0H
 = 00D1			     1		op2	= 0D0H + 1
						RET80	NC
 D000  9E		     1			sahf
 D001  73 05		     1			jNC	@f
 D003  8A 34		     2			mov	temp_h,ds:[PC80]
 D005  46		     2			inc	PC80
 D006  FF E2		     2			jmp	temp
 D008			     1	@@:
 D008  8B 35		     1			mov	PC80,ds:[SP80]
 D00A  83 C7 02		     1			add	SP80,2
 D00D  8A 34		     2			mov	temp_h,ds:[PC80]
 D00F  46		     2			inc	PC80
 D010  FF E2		     2			jmp	temp

				M1	0D1H
 = 00D2			     1		op2	= 0D1H + 1
						POP8	DE
 D100  8B 2D		     1			mov	DE,ds:[SP80]
 D102  83 C7 02		     1			add	SP80,2
 D105  8A 34		     2			mov	temp_h,ds:[PC80]
 D107  46		     2			inc	PC80
 D108  FF E2		     2			jmp	temp

				M1	0D2H
 = 00D3			     1		op2	= 0D2H + 1
						JP80	NC
 D200  9E		     1			sahf
 D201  73 08		     1			jNC	@f
 D203  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 D206  83 C6 03		     2			add	PC80,3
 D209  FF E2		     2			jmp	temp
 D20B			     1	@@:
 D20B  8B 34		     1			mov	PC80,ds:[PC80]
 D20D  8A 34		     2			mov	temp_h,ds:[PC80]
 D20F  46		     2			inc	PC80
 D210  FF E2		     2			jmp	temp

				M1	0D3H				;OUT	(n),A
 = 00D4			     1		op2	= 0D3H + 1
 D300  8B D5					mov	temp,save_temp
 D302  8B EF					mov	entry_SP,SP80
 D304  BF 0002					mov	ret_reg,code_OUT
 D307  CB					retf

				M1	0D4H
 = 00D5			     1		op2	= 0D4H + 1
						CALL80	NC
 D400  83 C6 02		     1			add	PC80,2
 D403  9E		     1			sahf
 D404  73 05		     1			jNC	@f
 D406  8A 34		     2			mov	temp_h,ds:[PC80]
 D408  46		     2			inc	PC80
 D409  FF E2		     2			jmp	temp
 D40B			     1	@@:
 D40B  83 EF 02		     1			sub	SP80,2
 D40E  89 35		     1			mov	ds:[SP80],PC80
 D410  8B 74 FE		     1			mov	PC80,ds:[PC80-2]
 D413  8A 34		     2			mov	temp_h,ds:[PC80]
 D415  46		     2			inc	PC80
 D416  FF E2		     2			jmp	temp

				M1	0D5H
 = 00D6			     1		op2	= 0D5H + 1
						PUSH8	DE
 D500  83 EF 02		     1			sub	SP80,2
 D503  89 2D		     1			mov	ds:[SP80],DE
 D505  8A 34		     2			mov	temp_h,ds:[PC80]
 D507  46		     2			inc	PC80
 D508  FF E2		     2			jmp	temp

				M1	0D6H				;SUB	n
 = 00D7			     1		op2	= 0D6H + 1
 D600  2A 04					sub	A,ds:[PC80]
 D602  9F					lahf
 D603  70 09					jo	@f
 D605  80 E4 FB					and	ah,not(v_flag)
				;		or	ah,n_flag
						fetch2
 D608  46		     1			inc	PC80
 D609  8A 34		     1			mov	temp_h,ds:[PC80]
 D60B  46		     1			inc	PC80
 D60C  FF E2		     1			jmp	temp
 D60E  80 CC 06			@@:		or	ah,(v_flag or n_flag)
						fetch2
 D611  46		     1			inc	PC80
 D612  8A 34		     1			mov	temp_h,ds:[PC80]
 D614  46		     1			inc	PC80
 D615  FF E2		     1			jmp	temp

				M1	0D7H
 = 00D8			     1		op2	= 0D7H + 1
						RST	10h
 D700  83 EF 02		     1			sub	SP80,2
 D703  89 35		     1			mov	ds:[SP80],PC80
 D705  BE 0010		     1			mov	PC80,10h
 D708  8A 34		     2			mov	temp_h,ds:[PC80]
 D70A  46		     2			inc	PC80
 D70B  FF E2		     2			jmp	temp

				M1	0D8H
 = 00D9			     1		op2	= 0D8H + 1
						RET80	C
 D800  9E		     1			sahf
 D801  72 05		     1			jC	@f
 D803  8A 34		     2			mov	temp_h,ds:[PC80]
 D805  46		     2			inc	PC80
 D806  FF E2		     2			jmp	temp
 D808			     1	@@:
 D808  8B 35		     1			mov	PC80,ds:[SP80]
 D80A  83 C7 02		     1			add	SP80,2
 D80D  8A 34		     2			mov	temp_h,ds:[PC80]
 D80F  46		     2			inc	PC80
 D810  FF E2		     2			jmp	temp

				M1	0D9H
 = 00DA			     1		op2	= 0D9H + 1
 D900  2E: 87 0E 00F0				xchg	BC,alt_BC	;EXX
 D905  2E: 87 2E 00F2				xchg	DE,alt_DE
 D90A  2E: 87 1E 00F4				xchg	HL,alt_HL
						fetch1
 D90F  8A 34		     1			mov	temp_h,ds:[PC80]
 D911  46		     1			inc	PC80
 D912  FF E2		     1			jmp	temp

				M1	0DAH
 = 00DB			     1		op2	= 0DAH + 1
						JP80	C
 DA00  9E		     1			sahf
 DA01  72 08		     1			jC	@f
 DA03  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 DA06  83 C6 03		     2			add	PC80,3
 DA09  FF E2		     2			jmp	temp
 DA0B			     1	@@:
 DA0B  8B 34		     1			mov	PC80,ds:[PC80]
 DA0D  8A 34		     2			mov	temp_h,ds:[PC80]
 DA0F  46		     2			inc	PC80
 DA10  FF E2		     2			jmp	temp

				M1	0DBH				;IN	A,(n)
 = 00DC			     1		op2	= 0DBH + 1
 DB00  8B D5					mov	temp,save_temp
 DB02  8B EF					mov	entry_SP,SP80
 DB04  BF 0003					mov	ret_reg,code_IN
 DB07  CB					retf

				M1	0DCH
 = 00DD			     1		op2	= 0DCH + 1
						CALL80	C
 DC00  83 C6 02		     1			add	PC80,2
 DC03  9E		     1			sahf
 DC04  72 05		     1			jC	@f
 DC06  8A 34		     2			mov	temp_h,ds:[PC80]
 DC08  46		     2			inc	PC80
 DC09  FF E2		     2			jmp	temp
 DC0B			     1	@@:
 DC0B  83 EF 02		     1			sub	SP80,2
 DC0E  89 35		     1			mov	ds:[SP80],PC80
 DC10  8B 74 FE		     1			mov	PC80,ds:[PC80-2]
 DC13  8A 34		     2			mov	temp_h,ds:[PC80]
 DC15  46		     2			inc	PC80
 DC16  FF E2		     2			jmp	temp

				M1	0DDH
 = 00DE			     1		op2	= 0DDH + 1
 DD00  8A 34					mov	temp_h,ds:[PC80]
 DD02  46					inc	PC80
 DD03  B2 60					mov	temp_l,org_DD
 DD05  FF E2					jmp	temp

				M1	0DEH				;SBC	A,n
 = 00DF			     1		op2	= 0DEH + 1
 DE00  9E					sahf
 DE01  1A 04					sbb	A,ds:[PC80]
 DE03  9F					lahf
 DE04  70 09					jo	@f
 DE06  80 E4 FB					and	ah,not(v_flag)
				;		or	ah,n_flag
						fetch2
 DE09  46		     1			inc	PC80
 DE0A  8A 34		     1			mov	temp_h,ds:[PC80]
 DE0C  46		     1			inc	PC80
 DE0D  FF E2		     1			jmp	temp
 DE0F  80 CC 06			@@:		or	ah,(v_flag or n_flag)
						fetch2
 DE12  46		     1			inc	PC80
 DE13  8A 34		     1			mov	temp_h,ds:[PC80]
 DE15  46		     1			inc	PC80
 DE16  FF E2		     1			jmp	temp

				M1	0DFH
 = 00E0			     1		op2	= 0DFH + 1
						RST	18h
 DF00  83 EF 02		     1			sub	SP80,2
 DF03  89 35		     1			mov	ds:[SP80],PC80
 DF05  BE 0018		     1			mov	PC80,18h
 DF08  8A 34		     2			mov	temp_h,ds:[PC80]
 DF0A  46		     2			inc	PC80
 DF0B  FF E2		     2			jmp	temp

				M1	0E0H
 = 00E1			     1		op2	= 0E0H + 1
						RET80	PO
 E000  9E		     1			sahf
 E001  7B 05		     1			jPO	@f
 E003  8A 34		     2			mov	temp_h,ds:[PC80]
 E005  46		     2			inc	PC80
 E006  FF E2		     2			jmp	temp
 E008			     1	@@:
 E008  8B 35		     1			mov	PC80,ds:[SP80]
 E00A  83 C7 02		     1			add	SP80,2
 E00D  8A 34		     2			mov	temp_h,ds:[PC80]
 E00F  46		     2			inc	PC80
 E010  FF E2		     2			jmp	temp

				M1	0E1H
 = 00E2			     1		op2	= 0E1H + 1
						POP8	HL
 E100  8B 1D		     1			mov	HL,ds:[SP80]
 E102  83 C7 02		     1			add	SP80,2
 E105  8A 34		     2			mov	temp_h,ds:[PC80]
 E107  46		     2			inc	PC80
 E108  FF E2		     2			jmp	temp

				M1	0E2H
 = 00E3			     1		op2	= 0E2H + 1
						JP80	PO
 E200  9E		     1			sahf
 E201  7B 08		     1			jPO	@f
 E203  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 E206  83 C6 03		     2			add	PC80,3
 E209  FF E2		     2			jmp	temp
 E20B			     1	@@:
 E20B  8B 34		     1			mov	PC80,ds:[PC80]
 E20D  8A 34		     2			mov	temp_h,ds:[PC80]
 E20F  46		     2			inc	PC80
 E210  FF E2		     2			jmp	temp

				M1	0E3H
 = 00E4			     1		op2	= 0E3H + 1
 E300  87 1D					xchg	HL,ds:[SP80]	;EX	(SP),HL
						fetch1
 E302  8A 34		     1			mov	temp_h,ds:[PC80]
 E304  46		     1			inc	PC80
 E305  FF E2		     1			jmp	temp

				M1	0E4H
 = 00E5			     1		op2	= 0E4H + 1
						CALL80	PO
 E400  83 C6 02		     1			add	PC80,2
 E403  9E		     1			sahf
 E404  7B 05		     1			jPO	@f
 E406  8A 34		     2			mov	temp_h,ds:[PC80]
 E408  46		     2			inc	PC80
 E409  FF E2		     2			jmp	temp
 E40B			     1	@@:
 E40B  83 EF 02		     1			sub	SP80,2
 E40E  89 35		     1			mov	ds:[SP80],PC80
 E410  8B 74 FE		     1			mov	PC80,ds:[PC80-2]
 E413  8A 34		     2			mov	temp_h,ds:[PC80]
 E415  46		     2			inc	PC80
 E416  FF E2		     2			jmp	temp

				M1	0E5H
 = 00E6			     1		op2	= 0E5H + 1
						PUSH8	HL
 E500  83 EF 02		     1			sub	SP80,2
 E503  89 1D		     1			mov	ds:[SP80],HL
 E505  8A 34		     2			mov	temp_h,ds:[PC80]
 E507  46		     2			inc	PC80
 E508  FF E2		     2			jmp	temp

				M1	0E6H				;AND	n
 = 00E7			     1		op2	= 0E6H + 1
 E600  22 04					and	A,ds:[PC80]
 E602  9F					lahf
 E603  80 E4 FC					and	ah,not(n_flag or c_flag)
 E606  80 CC 10					or	ah,h_flag
						fetch2
 E609  46		     1			inc	PC80
 E60A  8A 34		     1			mov	temp_h,ds:[PC80]
 E60C  46		     1			inc	PC80
 E60D  FF E2		     1			jmp	temp

				M1	0E7H
 = 00E8			     1		op2	= 0E7H + 1
						RST	20h
 E700  83 EF 02		     1			sub	SP80,2
 E703  89 35		     1			mov	ds:[SP80],PC80
 E705  BE 0020		     1			mov	PC80,20h
 E708  8A 34		     2			mov	temp_h,ds:[PC80]
 E70A  46		     2			inc	PC80
 E70B  FF E2		     2			jmp	temp

				M1	0E8H
 = 00E9			     1		op2	= 0E8H + 1
						RET80	PE
 E800  9E		     1			sahf
 E801  7A 05		     1			jPE	@f
 E803  8A 34		     2			mov	temp_h,ds:[PC80]
 E805  46		     2			inc	PC80
 E806  FF E2		     2			jmp	temp
 E808			     1	@@:
 E808  8B 35		     1			mov	PC80,ds:[SP80]
 E80A  83 C7 02		     1			add	SP80,2
 E80D  8A 34		     2			mov	temp_h,ds:[PC80]
 E80F  46		     2			inc	PC80
 E810  FF E2		     2			jmp	temp

				M1	0E9H
 = 00EA			     1		op2	= 0E9H + 1
 E900  8B F3					mov	PC80,HL		;JP	(HL)
						fetch1
 E902  8A 34		     1			mov	temp_h,ds:[PC80]
 E904  46		     1			inc	PC80
 E905  FF E2		     1			jmp	temp

				M1	0EAH
 = 00EB			     1		op2	= 0EAH + 1
						JP80	PE
 EA00  9E		     1			sahf
 EA01  7A 08		     1			jPE	@f
 EA03  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 EA06  83 C6 03		     2			add	PC80,3
 EA09  FF E2		     2			jmp	temp
 EA0B			     1	@@:
 EA0B  8B 34		     1			mov	PC80,ds:[PC80]
 EA0D  8A 34		     2			mov	temp_h,ds:[PC80]
 EA0F  46		     2			inc	PC80
 EA10  FF E2		     2			jmp	temp

				M1	0EBH
 = 00EC			     1		op2	= 0EBH + 1
 EB00  87 EB					xchg	DE,HL		;EX	DE,HL
						fetch1
 EB02  8A 34		     1			mov	temp_h,ds:[PC80]
 EB04  46		     1			inc	PC80
 EB05  FF E2		     1			jmp	temp

				M1	0ECH
 = 00ED			     1		op2	= 0ECH + 1
						CALL80	PE
 EC00  83 C6 02		     1			add	PC80,2
 EC03  9E		     1			sahf
 EC04  7A 05		     1			jPE	@f
 EC06  8A 34		     2			mov	temp_h,ds:[PC80]
 EC08  46		     2			inc	PC80
 EC09  FF E2		     2			jmp	temp
 EC0B			     1	@@:
 EC0B  83 EF 02		     1			sub	SP80,2
 EC0E  89 35		     1			mov	ds:[SP80],PC80
 EC10  8B 74 FE		     1			mov	PC80,ds:[PC80-2]
 EC13  8A 34		     2			mov	temp_h,ds:[PC80]
 EC15  46		     2			inc	PC80
 EC16  FF E2		     2			jmp	temp

				M1	0EDH
 = 00EE			     1		op2	= 0EDH + 1
 ED00  8A 34					mov	temp_h,ds:[PC80]
 ED02  46					inc	PC80
 ED03  B2 A0					mov	temp_l,org_ED
 ED05  FF E2					jmp	temp

				M1	0EEH				;XOR	n
 = 00EF			     1		op2	= 0EEH + 1
 EE00  32 04					xor	A,ds:[PC80]
 EE02  9F					lahf
 EE03  80 E4 EC					and	ah,not(h_flag or n_flag or c_flag)
						fetch2
 EE06  46		     1			inc	PC80
 EE07  8A 34		     1			mov	temp_h,ds:[PC80]
 EE09  46		     1			inc	PC80
 EE0A  FF E2		     1			jmp	temp

				M1	0EFH
 = 00F0			     1		op2	= 0EFH + 1
						RST	28h
 EF00  83 EF 02		     1			sub	SP80,2
 EF03  89 35		     1			mov	ds:[SP80],PC80
 EF05  BE 0028		     1			mov	PC80,28h
 EF08  8A 34		     2			mov	temp_h,ds:[PC80]
 EF0A  46		     2			inc	PC80
 EF0B  FF E2		     2			jmp	temp

				M1	0F0H
 = 00F1			     1		op2	= 0F0H + 1
						RET80	ns		;RET	P
 F000  9E		     1			sahf
 F001  79 05		     1			jns	@f
 F003  8A 34		     2			mov	temp_h,ds:[PC80]
 F005  46		     2			inc	PC80
 F006  FF E2		     2			jmp	temp
 F008			     1	@@:
 F008  8B 35		     1			mov	PC80,ds:[SP80]
 F00A  83 C7 02		     1			add	SP80,2
 F00D  8A 34		     2			mov	temp_h,ds:[PC80]
 F00F  46		     2			inc	PC80
 F010  FF E2		     2			jmp	temp

				M1	0F1H
 = 00F2			     1		op2	= 0F1H + 1
						POP8	AF
 F100  8B 05		     1			mov	AF,ds:[SP80]
 F102  86 E0		     1			xchg	ah,al
 F104  83 C7 02		     1			add	SP80,2
 F107  8A 34		     2			mov	temp_h,ds:[PC80]
 F109  46		     2			inc	PC80
 F10A  FF E2		     2			jmp	temp

				M1	0F2H
 = 00F3			     1		op2	= 0F2H + 1
						JP80	ns		;JP	P,nn
 F200  9E		     1			sahf
 F201  79 08		     1			jns	@f
 F203  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 F206  83 C6 03		     2			add	PC80,3
 F209  FF E2		     2			jmp	temp
 F20B			     1	@@:
 F20B  8B 34		     1			mov	PC80,ds:[PC80]
 F20D  8A 34		     2			mov	temp_h,ds:[PC80]
 F20F  46		     2			inc	PC80
 F210  FF E2		     2			jmp	temp

				M1	0F3H
 = 00F4			     1		op2	= 0F3H + 1
				;		cli			;DI	****
						fetch1
 F300  8A 34		     1			mov	temp_h,ds:[PC80]
 F302  46		     1			inc	PC80
 F303  FF E2		     1			jmp	temp

				M1	0F4H
 = 00F5			     1		op2	= 0F4H + 1
						call80	ns		;CALL	P,nn
 F400  83 C6 02		     1			add	PC80,2
 F403  9E		     1			sahf
 F404  79 05		     1			jns	@f
 F406  8A 34		     2			mov	temp_h,ds:[PC80]
 F408  46		     2			inc	PC80
 F409  FF E2		     2			jmp	temp
 F40B			     1	@@:
 F40B  83 EF 02		     1			sub	SP80,2
 F40E  89 35		     1			mov	ds:[SP80],PC80
 F410  8B 74 FE		     1			mov	PC80,ds:[PC80-2]
 F413  8A 34		     2			mov	temp_h,ds:[PC80]
 F415  46		     2			inc	PC80
 F416  FF E2		     2			jmp	temp

				M1	0F5H
 = 00F6			     1		op2	= 0F5H + 1
						PUSH8	AF
 F500  83 EF 02		     1			sub	SP80,2
 F503  86 E0		     1			xchg	ah,al
 F505  89 05		     1			mov	ds:[SP80],AF
 F507  86 E0		     1			xchg	ah,al
 F509  8A 34		     2			mov	temp_h,ds:[PC80]
 F50B  46		     2			inc	PC80
 F50C  FF E2		     2			jmp	temp

				M1	0F6H				;OR	n
 = 00F7			     1		op2	= 0F6H + 1
 F600  0A 04					or	A,ds:[PC80]
 F602  9F					lahf
 F603  80 E4 EC					and	ah,not(h_flag or n_flag or c_flag)
						fetch2
 F606  46		     1			inc	PC80
 F607  8A 34		     1			mov	temp_h,ds:[PC80]
 F609  46		     1			inc	PC80
 F60A  FF E2		     1			jmp	temp

				M1	0F7H
 = 00F8			     1		op2	= 0F7H + 1
						RST	30h
 F700  83 EF 02		     1			sub	SP80,2
 F703  89 35		     1			mov	ds:[SP80],PC80
 F705  BE 0030		     1			mov	PC80,30h
 F708  8A 34		     2			mov	temp_h,ds:[PC80]
 F70A  46		     2			inc	PC80
 F70B  FF E2		     2			jmp	temp

				M1	0F8H
 = 00F9			     1		op2	= 0F8H + 1
						RET80	s		;RET	M
 F800  9E		     1			sahf
 F801  78 05		     1			js	@f
 F803  8A 34		     2			mov	temp_h,ds:[PC80]
 F805  46		     2			inc	PC80
 F806  FF E2		     2			jmp	temp
 F808			     1	@@:
 F808  8B 35		     1			mov	PC80,ds:[SP80]
 F80A  83 C7 02		     1			add	SP80,2
 F80D  8A 34		     2			mov	temp_h,ds:[PC80]
 F80F  46		     2			inc	PC80
 F810  FF E2		     2			jmp	temp

				M1	0F9H
 = 00FA			     1		op2	= 0F9H + 1
						LD	SP80,HL		;LD	SP,HL
 F900  8B FB		     1			mov	SP80,HL
 F902  8A 34		     2			mov	temp_h,ds:[PC80]
 F904  46		     2			inc	PC80
 F905  FF E2		     2			jmp	temp

				M1	0FAH
 = 00FB			     1		op2	= 0FAH + 1
						JP80	s		;JP	M,nn
 FA00  9E		     1			sahf
 FA01  78 08		     1			js	@f
 FA03  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 FA06  83 C6 03		     2			add	PC80,3
 FA09  FF E2		     2			jmp	temp
 FA0B			     1	@@:
 FA0B  8B 34		     1			mov	PC80,ds:[PC80]
 FA0D  8A 34		     2			mov	temp_h,ds:[PC80]
 FA0F  46		     2			inc	PC80
 FA10  FF E2		     2			jmp	temp

				M1	0FBH				;EI	****
 = 00FC			     1		op2	= 0FBH + 1
				;		sti
						fetch1
 FB00  8A 34		     1			mov	temp_h,ds:[PC80]
 FB02  46		     1			inc	PC80
 FB03  FF E2		     1			jmp	temp

				M1	0FCH
 = 00FD			     1		op2	= 0FCH + 1
						CALL80	s		;CALL	M,nn
 FC00  83 C6 02		     1			add	PC80,2
 FC03  9E		     1			sahf
 FC04  78 05		     1			js	@f
 FC06  8A 34		     2			mov	temp_h,ds:[PC80]
 FC08  46		     2			inc	PC80
 FC09  FF E2		     2			jmp	temp
 FC0B			     1	@@:
 FC0B  83 EF 02		     1			sub	SP80,2
 FC0E  89 35		     1			mov	ds:[SP80],PC80
 FC10  8B 74 FE		     1			mov	PC80,ds:[PC80-2]
 FC13  8A 34		     2			mov	temp_h,ds:[PC80]
 FC15  46		     2			inc	PC80
 FC16  FF E2		     2			jmp	temp

				M1	0FDH
 = 00FE			     1		op2	= 0FDH + 1
 FD00  8A 34					mov	temp_h,ds:[PC80]
 FD02  46					inc	PC80
 FD03  B2 80					mov	temp_l,org_FD
 FD05  FF E2					jmp	temp

				M1	0FEH				;CP	n
 = 00FF			     1		op2	= 0FEH + 1
 FE00  3A 04					cmp	A,ds:[PC80]
 FE02  9F					lahf
 FE03  70 09					jo	@f
 FE05  80 E4 FB					and	ah,not(v_flag)
				;		or	ah,n_flag
						fetch2
 FE08  46		     1			inc	PC80
 FE09  8A 34		     1			mov	temp_h,ds:[PC80]
 FE0B  46		     1			inc	PC80
 FE0C  FF E2		     1			jmp	temp
 FE0E  80 CC 06			@@:		or	ah,(v_flag or n_flag)
						fetch2
 FE11  46		     1			inc	PC80
 FE12  8A 34		     1			mov	temp_h,ds:[PC80]
 FE14  46		     1			inc	PC80
 FE15  FF E2		     1			jmp	temp

				M1	0FFH
 = 0100			     1		op2	= 0FFH + 1
						RST	38h
 FF00  83 EF 02		     1			sub	SP80,2
 FF03  89 35		     1			mov	ds:[SP80],PC80
 FF05  BE 0038		     1			mov	PC80,38h
 FF08  8A 34		     2			mov	temp_h,ds:[PC80]
 FF0A  46		     2			inc	PC80
 FF0B  FF E2		     2			jmp	temp

				;================================================
				;================  bit operation  ===============
				;================================================
 = 0000				op2	=	0

				CB	macro	nn
					rept	nn - op2
						org	org_CB + op2 * 100h
						mov	temp,save_temp
						mov	entry_SP,SP80
						mov	ret_reg,code_undef2
						retf
						op2	= op2 + 1
					endm
					op2	= nn + 1
					org	org_CB + nn * 100h
				endm

				;--- RLC ---
				RLC		macro	src

				ifidni		src,M
						mov	temp_l,src
						rol	temp_l,1
						mov	src,temp_l
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	temp_l,temp_l
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h

				elseifidni	src,temp_h

						mov	temp,save_temp
						rol	src,1
						mov	save_temp,temp
						lahf
						mov	temp_l,ah
						and	temp_l,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_l

				elseifidni	src,temp_l

						mov	temp,save_temp
						rol	src,1
						mov	save_temp,temp
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h
				else
						rol	src,1
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h
				endif
						mov	temp_l,0
						fetch1
				endm

				;--- RRC
				RRC		macro	src
				ifidni		src,M

						mov	temp_l,src
						ror	temp_l,1
						mov	src,temp_l
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	temp_l,temp_l
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h

				elseifidni	src,temp_h

						mov	temp,save_temp
						ror	src,1
						mov	save_temp,temp
						lahf
						mov	temp_l,ah
						and	temp_l,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_l

				elseifidni	src,temp_l

						mov	temp,save_temp
						ror	src,1
						mov	save_temp,temp
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h
				else
						ror	src,1
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h
				endif
						mov	temp_l,0
						fetch1
				endm

				;-----  RL  -----
				RL		macro	src

						sahf

				ifidni		src,M

						mov	temp_l,src
						rcl	temp_l,1
						mov	src,temp_l
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	temp_l,temp_l
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h

				elseifidni	src,temp_h

						mov	temp,save_temp
						rcl	src,1
						mov	save_temp,temp
						lahf
						mov	temp_l,ah
						and	temp_l,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_l

				elseifidni	src,temp_l

						mov	temp,save_temp
						rcl	src,1
						mov	save_temp,temp
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h
				else
						rcl	src,1
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h
				endif
						mov	temp_l,0
						fetch1
				endm

				;-----  RR -----
				RR		macro	src

						sahf

				ifidni		src,M

						mov	temp_l,src
						rcr	temp_l,1
						mov	src,temp_l
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	temp_l,temp_l
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h

				elseifidni	src,temp_h

						mov	temp,save_temp
						rcr	src,1
						mov	save_temp,temp
						lahf
						mov	temp_l,ah
						and	temp_l,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_l

				elseifidni	src,temp_l

						mov	temp,save_temp
						rcr	src,1
						mov	save_temp,temp
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h
				else
						rcr	src,1
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h
				endif
						mov	temp_l,0
						fetch1
				endm

				;-----  SLA  -----
				SLA		macro	src

				ifidni		src,temp_h

						mov	temp,save_temp
						sal	src,1
						mov	save_temp,temp

				elseifidni	src,temp_l

						mov	temp,save_temp
						sal	src,1
						mov	save_temp,temp
				else
						sal	src,1
				endif
						lahf
						and	ah,not (h_flag or n_flag)
						mov	temp_l,0
						fetch1
				endm

				;-----  SRA  -----
				SRA		macro	src
				ifidni		src,temp_h

						mov	temp,save_temp
						sar	src,1
						mov	save_temp,temp

				elseifidni	src,temp_l

						mov	temp,save_temp
						sar	src,1
						mov	save_temp,temp
				else
						sar	src,1
				endif
						lahf
						and	ah,not (h_flag or n_flag)
						mov	temp_l,0
						fetch1
				endm

				;-----  SLL  -----
				SLL		macro	src

						stc

				ifidni		src,temp_h

						mov	temp,save_temp
						rcl	src,1
						mov	save_temp,temp
						lahf
						mov	temp_l,ah
						and	temp_l,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_l

				elseifidni	src,temp_l

						mov	temp,save_temp
						rcl	src,1
						mov	save_temp,temp
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h

				elseifidni	src,M

						mov	temp_l,src
						rcl	temp_l,1
						mov	src,temp_l
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	temp_l,temp_l
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h
				else
						rcl	temp_l,1
						lahf
						mov	temp_h,ah
						and	temp_h,c_flag
						and	src,src
						lahf
						and	ah,not (h_flag or n_flag or c_flag)
						or	ah,temp_h
				endif
						mov	temp_l,0
						fetch1
				endm

				;-----  SRL  -----
				SRL		macro	src
				ifidni		src,temp_h

						mov	temp,save_temp
						shr	src,1
						mov	save_temp,temp

				elseifidni	src,temp_l

						mov	temp,save_temp
						shr	src,1
						mov	save_temp,temp
				else
						shr	src,1
				endif
						lahf
						and	ah,not (h_flag or n_flag)
						mov	temp_l,0
						fetch1
				endm

				;-----  BIT  -----
				BIT		macro	n,src
				ifidni		src,temp_h

						mov	temp,save_temp
						test	src,1 shl n

				elseifidni	src,temp_l

						mov	temp,save_temp
						test	src,1 shl n
				else
						test	src,1 shl n
				endif
						mov	temp_h,ah
						lahf
						and	temp_h,(s_flag or p_flag or c_flag)
						and	ah,z_flag
						or	temp_h,h_flag
						or	ah,temp_h
						mov	temp_l,0
						fetch1
				endm

				;-----  RES  -----
				RES		macro	n,src
				ifidni		src,temp_h

						mov	temp,save_temp
						and	src,not (1 shl n)
						mov	save_temp,temp

				elseifidni	src,temp_l

						mov	temp,save_temp
						and	src,not (1 shl n)
						mov	save_temp,temp
				else
						and	src,not (1 shl n)
				endif
						mov	temp_l,0
						fetch1
				endm

				;-----  SET  -----
				SET		macro	n,src
				ifidni		src,temp_h
						mov	temp,save_temp
						or	src,1 shl n
						mov	save_temp,temp
				elseifidni	src,temp_l
						mov	temp,save_temp
						or	src,1 shl n
						mov	save_temp,temp
				else
						or	src,1 shl n
				endif
						mov	temp_l,0
						fetch1
				endm

				;--------------------------------------
				CB	00H
 = 0001			     1		op2	= 00H + 1
						RLC	B
 0020  D0 C5		     1			rol	B,1
 0022  9F		     1			lahf
 0023  8A F4		     1			mov	temp_h,ah
 0025  80 E6 01		     1			and	temp_h,c_flag
 0028  22 ED		     1			and	B,B
 002A  9F		     1			lahf
 002B  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 002E  0A E6		     1			or	ah,temp_h
 0030  B2 00		     1			mov	temp_l,0
 0032  8A 34		     2			mov	temp_h,ds:[PC80]
 0034  46		     2			inc	PC80
 0035  FF E2		     2			jmp	temp
				CB	01H
 = 0002			     1		op2	= 01H + 1
						RLC	C_reg
 0120  D0 C1		     1			rol	C_reg,1
 0122  9F		     1			lahf
 0123  8A F4		     1			mov	temp_h,ah
 0125  80 E6 01		     1			and	temp_h,c_flag
 0128  22 C9		     1			and	C_reg,C_reg
 012A  9F		     1			lahf
 012B  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 012E  0A E6		     1			or	ah,temp_h
 0130  B2 00		     1			mov	temp_l,0
 0132  8A 34		     2			mov	temp_h,ds:[PC80]
 0134  46		     2			inc	PC80
 0135  FF E2		     2			jmp	temp
				CB	02H
 = 0003			     1		op2	= 02H + 1
						RLC	D
 0220  8B D5		     1			mov	temp,save_temp
 0222  D0 C6		     1			rol	D,1
 0224  8B EA		     1			mov	save_temp,temp
 0226  9F		     1			lahf
 0227  8A D4		     1			mov	temp_l,ah
 0229  80 E2 01		     1			and	temp_l,c_flag
 022C  22 F6		     1			and	D,D
 022E  9F		     1			lahf
 022F  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 0232  0A E2		     1			or	ah,temp_l
 0234  B2 00		     1			mov	temp_l,0
 0236  8A 34		     2			mov	temp_h,ds:[PC80]
 0238  46		     2			inc	PC80
 0239  FF E2		     2			jmp	temp
				CB	03H
 = 0004			     1		op2	= 03H + 1
						RLC	E
 0320  8B D5		     1			mov	temp,save_temp
 0322  D0 C2		     1			rol	E,1
 0324  8B EA		     1			mov	save_temp,temp
 0326  9F		     1			lahf
 0327  8A F4		     1			mov	temp_h,ah
 0329  80 E6 01		     1			and	temp_h,c_flag
 032C  22 D2		     1			and	E,E
 032E  9F		     1			lahf
 032F  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 0332  0A E6		     1			or	ah,temp_h
 0334  B2 00		     1			mov	temp_l,0
 0336  8A 34		     2			mov	temp_h,ds:[PC80]
 0338  46		     2			inc	PC80
 0339  FF E2		     2			jmp	temp
				CB	04H
 = 0005			     1		op2	= 04H + 1
						RLC	H
 0420  D0 C7		     1			rol	H,1
 0422  9F		     1			lahf
 0423  8A F4		     1			mov	temp_h,ah
 0425  80 E6 01		     1			and	temp_h,c_flag
 0428  22 FF		     1			and	H,H
 042A  9F		     1			lahf
 042B  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 042E  0A E6		     1			or	ah,temp_h
 0430  B2 00		     1			mov	temp_l,0
 0432  8A 34		     2			mov	temp_h,ds:[PC80]
 0434  46		     2			inc	PC80
 0435  FF E2		     2			jmp	temp
				CB	05H
 = 0006			     1		op2	= 05H + 1
						RLC	L
 0520  D0 C3		     1			rol	L,1
 0522  9F		     1			lahf
 0523  8A F4		     1			mov	temp_h,ah
 0525  80 E6 01		     1			and	temp_h,c_flag
 0528  22 DB		     1			and	L,L
 052A  9F		     1			lahf
 052B  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 052E  0A E6		     1			or	ah,temp_h
 0530  B2 00		     1			mov	temp_l,0
 0532  8A 34		     2			mov	temp_h,ds:[PC80]
 0534  46		     2			inc	PC80
 0535  FF E2		     2			jmp	temp
				CB	06H
 = 0007			     1		op2	= 06H + 1
						RLC	M
 0620  8A 17		     1			mov	temp_l,M
 0622  D0 C2		     1			rol	temp_l,1
 0624  88 17		     1			mov	M,temp_l
 0626  9F		     1			lahf
 0627  8A F4		     1			mov	temp_h,ah
 0629  80 E6 01		     1			and	temp_h,c_flag
 062C  22 D2		     1			and	temp_l,temp_l
 062E  9F		     1			lahf
 062F  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 0632  0A E6		     1			or	ah,temp_h
 0634  B2 00		     1			mov	temp_l,0
 0636  8A 34		     2			mov	temp_h,ds:[PC80]
 0638  46		     2			inc	PC80
 0639  FF E2		     2			jmp	temp
				CB	07H
 = 0008			     1		op2	= 07H + 1
						RLC	A
 0720  D0 C0		     1			rol	A,1
 0722  9F		     1			lahf
 0723  8A F4		     1			mov	temp_h,ah
 0725  80 E6 01		     1			and	temp_h,c_flag
 0728  22 C0		     1			and	A,A
 072A  9F		     1			lahf
 072B  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 072E  0A E6		     1			or	ah,temp_h
 0730  B2 00		     1			mov	temp_l,0
 0732  8A 34		     2			mov	temp_h,ds:[PC80]
 0734  46		     2			inc	PC80
 0735  FF E2		     2			jmp	temp

				CB	08H
 = 0009			     1		op2	= 08H + 1
						RRC	B
 0820  D0 CD		     1			ror	B,1
 0822  9F		     1			lahf
 0823  8A F4		     1			mov	temp_h,ah
 0825  80 E6 01		     1			and	temp_h,c_flag
 0828  22 ED		     1			and	B,B
 082A  9F		     1			lahf
 082B  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 082E  0A E6		     1			or	ah,temp_h
 0830  B2 00		     1			mov	temp_l,0
 0832  8A 34		     2			mov	temp_h,ds:[PC80]
 0834  46		     2			inc	PC80
 0835  FF E2		     2			jmp	temp
				CB	09H
 = 000A			     1		op2	= 09H + 1
						RRC	C_reg
 0920  D0 C9		     1			ror	C_reg,1
 0922  9F		     1			lahf
 0923  8A F4		     1			mov	temp_h,ah
 0925  80 E6 01		     1			and	temp_h,c_flag
 0928  22 C9		     1			and	C_reg,C_reg
 092A  9F		     1			lahf
 092B  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 092E  0A E6		     1			or	ah,temp_h
 0930  B2 00		     1			mov	temp_l,0
 0932  8A 34		     2			mov	temp_h,ds:[PC80]
 0934  46		     2			inc	PC80
 0935  FF E2		     2			jmp	temp
				CB	0aH
 = 000B			     1		op2	= 0aH + 1
						RRC	D
 0A20  8B D5		     1			mov	temp,save_temp
 0A22  D0 CE		     1			ror	D,1
 0A24  8B EA		     1			mov	save_temp,temp
 0A26  9F		     1			lahf
 0A27  8A D4		     1			mov	temp_l,ah
 0A29  80 E2 01		     1			and	temp_l,c_flag
 0A2C  22 F6		     1			and	D,D
 0A2E  9F		     1			lahf
 0A2F  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 0A32  0A E2		     1			or	ah,temp_l
 0A34  B2 00		     1			mov	temp_l,0
 0A36  8A 34		     2			mov	temp_h,ds:[PC80]
 0A38  46		     2			inc	PC80
 0A39  FF E2		     2			jmp	temp
				CB	0bH
 = 000C			     1		op2	= 0bH + 1
						RRC	E
 0B20  8B D5		     1			mov	temp,save_temp
 0B22  D0 CA		     1			ror	E,1
 0B24  8B EA		     1			mov	save_temp,temp
 0B26  9F		     1			lahf
 0B27  8A F4		     1			mov	temp_h,ah
 0B29  80 E6 01		     1			and	temp_h,c_flag
 0B2C  22 D2		     1			and	E,E
 0B2E  9F		     1			lahf
 0B2F  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 0B32  0A E6		     1			or	ah,temp_h
 0B34  B2 00		     1			mov	temp_l,0
 0B36  8A 34		     2			mov	temp_h,ds:[PC80]
 0B38  46		     2			inc	PC80
 0B39  FF E2		     2			jmp	temp
				CB	0cH
 = 000D			     1		op2	= 0cH + 1
						RRC	H
 0C20  D0 CF		     1			ror	H,1
 0C22  9F		     1			lahf
 0C23  8A F4		     1			mov	temp_h,ah
 0C25  80 E6 01		     1			and	temp_h,c_flag
 0C28  22 FF		     1			and	H,H
 0C2A  9F		     1			lahf
 0C2B  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 0C2E  0A E6		     1			or	ah,temp_h
 0C30  B2 00		     1			mov	temp_l,0
 0C32  8A 34		     2			mov	temp_h,ds:[PC80]
 0C34  46		     2			inc	PC80
 0C35  FF E2		     2			jmp	temp
				CB	0dH
 = 000E			     1		op2	= 0dH + 1
						RRC	L
 0D20  D0 CB		     1			ror	L,1
 0D22  9F		     1			lahf
 0D23  8A F4		     1			mov	temp_h,ah
 0D25  80 E6 01		     1			and	temp_h,c_flag
 0D28  22 DB		     1			and	L,L
 0D2A  9F		     1			lahf
 0D2B  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 0D2E  0A E6		     1			or	ah,temp_h
 0D30  B2 00		     1			mov	temp_l,0
 0D32  8A 34		     2			mov	temp_h,ds:[PC80]
 0D34  46		     2			inc	PC80
 0D35  FF E2		     2			jmp	temp
				CB	0eH
 = 000F			     1		op2	= 0eH + 1
						RRC	M
 0E20  8A 17		     1			mov	temp_l,M
 0E22  D0 CA		     1			ror	temp_l,1
 0E24  88 17		     1			mov	M,temp_l
 0E26  9F		     1			lahf
 0E27  8A F4		     1			mov	temp_h,ah
 0E29  80 E6 01		     1			and	temp_h,c_flag
 0E2C  22 D2		     1			and	temp_l,temp_l
 0E2E  9F		     1			lahf
 0E2F  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 0E32  0A E6		     1			or	ah,temp_h
 0E34  B2 00		     1			mov	temp_l,0
 0E36  8A 34		     2			mov	temp_h,ds:[PC80]
 0E38  46		     2			inc	PC80
 0E39  FF E2		     2			jmp	temp
				CB	0fH
 = 0010			     1		op2	= 0fH + 1
						RRC	A
 0F20  D0 C8		     1			ror	A,1
 0F22  9F		     1			lahf
 0F23  8A F4		     1			mov	temp_h,ah
 0F25  80 E6 01		     1			and	temp_h,c_flag
 0F28  22 C0		     1			and	A,A
 0F2A  9F		     1			lahf
 0F2B  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 0F2E  0A E6		     1			or	ah,temp_h
 0F30  B2 00		     1			mov	temp_l,0
 0F32  8A 34		     2			mov	temp_h,ds:[PC80]
 0F34  46		     2			inc	PC80
 0F35  FF E2		     2			jmp	temp

				CB	10H
 = 0011			     1		op2	= 10H + 1
						RL	B
 1020  9E		     1			sahf
 1021  D0 D5		     1			rcl	B,1
 1023  9F		     1			lahf
 1024  8A F4		     1			mov	temp_h,ah
 1026  80 E6 01		     1			and	temp_h,c_flag
 1029  22 ED		     1			and	B,B
 102B  9F		     1			lahf
 102C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 102F  0A E6		     1			or	ah,temp_h
 1031  B2 00		     1			mov	temp_l,0
 1033  8A 34		     2			mov	temp_h,ds:[PC80]
 1035  46		     2			inc	PC80
 1036  FF E2		     2			jmp	temp
				CB	11H
 = 0012			     1		op2	= 11H + 1
						RL	C_reg
 1120  9E		     1			sahf
 1121  D0 D1		     1			rcl	C_reg,1
 1123  9F		     1			lahf
 1124  8A F4		     1			mov	temp_h,ah
 1126  80 E6 01		     1			and	temp_h,c_flag
 1129  22 C9		     1			and	C_reg,C_reg
 112B  9F		     1			lahf
 112C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 112F  0A E6		     1			or	ah,temp_h
 1131  B2 00		     1			mov	temp_l,0
 1133  8A 34		     2			mov	temp_h,ds:[PC80]
 1135  46		     2			inc	PC80
 1136  FF E2		     2			jmp	temp
				CB	12H
 = 0013			     1		op2	= 12H + 1
						RL	D
 1220  9E		     1			sahf
 1221  8B D5		     1			mov	temp,save_temp
 1223  D0 D6		     1			rcl	D,1
 1225  8B EA		     1			mov	save_temp,temp
 1227  9F		     1			lahf
 1228  8A D4		     1			mov	temp_l,ah
 122A  80 E2 01		     1			and	temp_l,c_flag
 122D  22 F6		     1			and	D,D
 122F  9F		     1			lahf
 1230  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 1233  0A E2		     1			or	ah,temp_l
 1235  B2 00		     1			mov	temp_l,0
 1237  8A 34		     2			mov	temp_h,ds:[PC80]
 1239  46		     2			inc	PC80
 123A  FF E2		     2			jmp	temp
				CB	13H
 = 0014			     1		op2	= 13H + 1
						RL	E
 1320  9E		     1			sahf
 1321  8B D5		     1			mov	temp,save_temp
 1323  D0 D2		     1			rcl	E,1
 1325  8B EA		     1			mov	save_temp,temp
 1327  9F		     1			lahf
 1328  8A F4		     1			mov	temp_h,ah
 132A  80 E6 01		     1			and	temp_h,c_flag
 132D  22 D2		     1			and	E,E
 132F  9F		     1			lahf
 1330  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 1333  0A E6		     1			or	ah,temp_h
 1335  B2 00		     1			mov	temp_l,0
 1337  8A 34		     2			mov	temp_h,ds:[PC80]
 1339  46		     2			inc	PC80
 133A  FF E2		     2			jmp	temp
				CB	14H
 = 0015			     1		op2	= 14H + 1
						RL	H
 1420  9E		     1			sahf
 1421  D0 D7		     1			rcl	H,1
 1423  9F		     1			lahf
 1424  8A F4		     1			mov	temp_h,ah
 1426  80 E6 01		     1			and	temp_h,c_flag
 1429  22 FF		     1			and	H,H
 142B  9F		     1			lahf
 142C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 142F  0A E6		     1			or	ah,temp_h
 1431  B2 00		     1			mov	temp_l,0
 1433  8A 34		     2			mov	temp_h,ds:[PC80]
 1435  46		     2			inc	PC80
 1436  FF E2		     2			jmp	temp
				CB	15H
 = 0016			     1		op2	= 15H + 1
						RL	L
 1520  9E		     1			sahf
 1521  D0 D3		     1			rcl	L,1
 1523  9F		     1			lahf
 1524  8A F4		     1			mov	temp_h,ah
 1526  80 E6 01		     1			and	temp_h,c_flag
 1529  22 DB		     1			and	L,L
 152B  9F		     1			lahf
 152C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 152F  0A E6		     1			or	ah,temp_h
 1531  B2 00		     1			mov	temp_l,0
 1533  8A 34		     2			mov	temp_h,ds:[PC80]
 1535  46		     2			inc	PC80
 1536  FF E2		     2			jmp	temp
				CB	16H
 = 0017			     1		op2	= 16H + 1
						RL	M
 1620  9E		     1			sahf
 1621  8A 17		     1			mov	temp_l,M
 1623  D0 D2		     1			rcl	temp_l,1
 1625  88 17		     1			mov	M,temp_l
 1627  9F		     1			lahf
 1628  8A F4		     1			mov	temp_h,ah
 162A  80 E6 01		     1			and	temp_h,c_flag
 162D  22 D2		     1			and	temp_l,temp_l
 162F  9F		     1			lahf
 1630  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 1633  0A E6		     1			or	ah,temp_h
 1635  B2 00		     1			mov	temp_l,0
 1637  8A 34		     2			mov	temp_h,ds:[PC80]
 1639  46		     2			inc	PC80
 163A  FF E2		     2			jmp	temp
				CB	17H
 = 0018			     1		op2	= 17H + 1
						RL	A
 1720  9E		     1			sahf
 1721  D0 D0		     1			rcl	A,1
 1723  9F		     1			lahf
 1724  8A F4		     1			mov	temp_h,ah
 1726  80 E6 01		     1			and	temp_h,c_flag
 1729  22 C0		     1			and	A,A
 172B  9F		     1			lahf
 172C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 172F  0A E6		     1			or	ah,temp_h
 1731  B2 00		     1			mov	temp_l,0
 1733  8A 34		     2			mov	temp_h,ds:[PC80]
 1735  46		     2			inc	PC80
 1736  FF E2		     2			jmp	temp

				CB	18H
 = 0019			     1		op2	= 18H + 1
						RR	B
 1820  9E		     1			sahf
 1821  D0 DD		     1			rcr	B,1
 1823  9F		     1			lahf
 1824  8A F4		     1			mov	temp_h,ah
 1826  80 E6 01		     1			and	temp_h,c_flag
 1829  22 ED		     1			and	B,B
 182B  9F		     1			lahf
 182C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 182F  0A E6		     1			or	ah,temp_h
 1831  B2 00		     1			mov	temp_l,0
 1833  8A 34		     2			mov	temp_h,ds:[PC80]
 1835  46		     2			inc	PC80
 1836  FF E2		     2			jmp	temp
				CB	19H
 = 001A			     1		op2	= 19H + 1
						RR	C_reg
 1920  9E		     1			sahf
 1921  D0 D9		     1			rcr	C_reg,1
 1923  9F		     1			lahf
 1924  8A F4		     1			mov	temp_h,ah
 1926  80 E6 01		     1			and	temp_h,c_flag
 1929  22 C9		     1			and	C_reg,C_reg
 192B  9F		     1			lahf
 192C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 192F  0A E6		     1			or	ah,temp_h
 1931  B2 00		     1			mov	temp_l,0
 1933  8A 34		     2			mov	temp_h,ds:[PC80]
 1935  46		     2			inc	PC80
 1936  FF E2		     2			jmp	temp
				CB	1aH
 = 001B			     1		op2	= 1aH + 1
						RR	D
 1A20  9E		     1			sahf
 1A21  8B D5		     1			mov	temp,save_temp
 1A23  D0 DE		     1			rcr	D,1
 1A25  8B EA		     1			mov	save_temp,temp
 1A27  9F		     1			lahf
 1A28  8A D4		     1			mov	temp_l,ah
 1A2A  80 E2 01		     1			and	temp_l,c_flag
 1A2D  22 F6		     1			and	D,D
 1A2F  9F		     1			lahf
 1A30  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 1A33  0A E2		     1			or	ah,temp_l
 1A35  B2 00		     1			mov	temp_l,0
 1A37  8A 34		     2			mov	temp_h,ds:[PC80]
 1A39  46		     2			inc	PC80
 1A3A  FF E2		     2			jmp	temp
				CB	1bH
 = 001C			     1		op2	= 1bH + 1
						RR	E
 1B20  9E		     1			sahf
 1B21  8B D5		     1			mov	temp,save_temp
 1B23  D0 DA		     1			rcr	E,1
 1B25  8B EA		     1			mov	save_temp,temp
 1B27  9F		     1			lahf
 1B28  8A F4		     1			mov	temp_h,ah
 1B2A  80 E6 01		     1			and	temp_h,c_flag
 1B2D  22 D2		     1			and	E,E
 1B2F  9F		     1			lahf
 1B30  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 1B33  0A E6		     1			or	ah,temp_h
 1B35  B2 00		     1			mov	temp_l,0
 1B37  8A 34		     2			mov	temp_h,ds:[PC80]
 1B39  46		     2			inc	PC80
 1B3A  FF E2		     2			jmp	temp
				CB	1cH
 = 001D			     1		op2	= 1cH + 1
						RR	H
 1C20  9E		     1			sahf
 1C21  D0 DF		     1			rcr	H,1
 1C23  9F		     1			lahf
 1C24  8A F4		     1			mov	temp_h,ah
 1C26  80 E6 01		     1			and	temp_h,c_flag
 1C29  22 FF		     1			and	H,H
 1C2B  9F		     1			lahf
 1C2C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 1C2F  0A E6		     1			or	ah,temp_h
 1C31  B2 00		     1			mov	temp_l,0
 1C33  8A 34		     2			mov	temp_h,ds:[PC80]
 1C35  46		     2			inc	PC80
 1C36  FF E2		     2			jmp	temp
				CB	1dH
 = 001E			     1		op2	= 1dH + 1
						RR	L
 1D20  9E		     1			sahf
 1D21  D0 DB		     1			rcr	L,1
 1D23  9F		     1			lahf
 1D24  8A F4		     1			mov	temp_h,ah
 1D26  80 E6 01		     1			and	temp_h,c_flag
 1D29  22 DB		     1			and	L,L
 1D2B  9F		     1			lahf
 1D2C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 1D2F  0A E6		     1			or	ah,temp_h
 1D31  B2 00		     1			mov	temp_l,0
 1D33  8A 34		     2			mov	temp_h,ds:[PC80]
 1D35  46		     2			inc	PC80
 1D36  FF E2		     2			jmp	temp
				CB	1eH
 = 001F			     1		op2	= 1eH + 1
						RR	M
 1E20  9E		     1			sahf
 1E21  8A 17		     1			mov	temp_l,M
 1E23  D0 DA		     1			rcr	temp_l,1
 1E25  88 17		     1			mov	M,temp_l
 1E27  9F		     1			lahf
 1E28  8A F4		     1			mov	temp_h,ah
 1E2A  80 E6 01		     1			and	temp_h,c_flag
 1E2D  22 D2		     1			and	temp_l,temp_l
 1E2F  9F		     1			lahf
 1E30  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 1E33  0A E6		     1			or	ah,temp_h
 1E35  B2 00		     1			mov	temp_l,0
 1E37  8A 34		     2			mov	temp_h,ds:[PC80]
 1E39  46		     2			inc	PC80
 1E3A  FF E2		     2			jmp	temp
				CB	1fH
 = 0020			     1		op2	= 1fH + 1
						RR	A
 1F20  9E		     1			sahf
 1F21  D0 D8		     1			rcr	A,1
 1F23  9F		     1			lahf
 1F24  8A F4		     1			mov	temp_h,ah
 1F26  80 E6 01		     1			and	temp_h,c_flag
 1F29  22 C0		     1			and	A,A
 1F2B  9F		     1			lahf
 1F2C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 1F2F  0A E6		     1			or	ah,temp_h
 1F31  B2 00		     1			mov	temp_l,0
 1F33  8A 34		     2			mov	temp_h,ds:[PC80]
 1F35  46		     2			inc	PC80
 1F36  FF E2		     2			jmp	temp

				CB	20H
 = 0021			     1		op2	= 20H + 1
						SLA	B
 2020  D0 E5		     1			sal	B,1
 2022  9F		     1			lahf
 2023  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2026  B2 00		     1			mov	temp_l,0
 2028  8A 34		     2			mov	temp_h,ds:[PC80]
 202A  46		     2			inc	PC80
 202B  FF E2		     2			jmp	temp
				CB	21H
 = 0022			     1		op2	= 21H + 1
						SLA	C_reg
 2120  D0 E1		     1			sal	C_reg,1
 2122  9F		     1			lahf
 2123  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2126  B2 00		     1			mov	temp_l,0
 2128  8A 34		     2			mov	temp_h,ds:[PC80]
 212A  46		     2			inc	PC80
 212B  FF E2		     2			jmp	temp
				CB	22H
 = 0023			     1		op2	= 22H + 1
						SLA	D
 2220  8B D5		     1			mov	temp,save_temp
 2222  D0 E6		     1			sal	D,1
 2224  8B EA		     1			mov	save_temp,temp
 2226  9F		     1			lahf
 2227  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 222A  B2 00		     1			mov	temp_l,0
 222C  8A 34		     2			mov	temp_h,ds:[PC80]
 222E  46		     2			inc	PC80
 222F  FF E2		     2			jmp	temp
				CB	23H
 = 0024			     1		op2	= 23H + 1
						SLA	E
 2320  8B D5		     1			mov	temp,save_temp
 2322  D0 E2		     1			sal	E,1
 2324  8B EA		     1			mov	save_temp,temp
 2326  9F		     1			lahf
 2327  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 232A  B2 00		     1			mov	temp_l,0
 232C  8A 34		     2			mov	temp_h,ds:[PC80]
 232E  46		     2			inc	PC80
 232F  FF E2		     2			jmp	temp
				CB	24H
 = 0025			     1		op2	= 24H + 1
						SLA	H
 2420  D0 E7		     1			sal	H,1
 2422  9F		     1			lahf
 2423  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2426  B2 00		     1			mov	temp_l,0
 2428  8A 34		     2			mov	temp_h,ds:[PC80]
 242A  46		     2			inc	PC80
 242B  FF E2		     2			jmp	temp
				CB	25H
 = 0026			     1		op2	= 25H + 1
						SLA	L
 2520  D0 E3		     1			sal	L,1
 2522  9F		     1			lahf
 2523  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2526  B2 00		     1			mov	temp_l,0
 2528  8A 34		     2			mov	temp_h,ds:[PC80]
 252A  46		     2			inc	PC80
 252B  FF E2		     2			jmp	temp
				CB	26H
 = 0027			     1		op2	= 26H + 1
						SLA	M
 2620  D0 27		     1			sal	M,1
 2622  9F		     1			lahf
 2623  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2626  B2 00		     1			mov	temp_l,0
 2628  8A 34		     2			mov	temp_h,ds:[PC80]
 262A  46		     2			inc	PC80
 262B  FF E2		     2			jmp	temp
				CB	27H
 = 0028			     1		op2	= 27H + 1
						SLA	A
 2720  D0 E0		     1			sal	A,1
 2722  9F		     1			lahf
 2723  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2726  B2 00		     1			mov	temp_l,0
 2728  8A 34		     2			mov	temp_h,ds:[PC80]
 272A  46		     2			inc	PC80
 272B  FF E2		     2			jmp	temp

				CB	28H
 = 0029			     1		op2	= 28H + 1
						SRA	B
 2820  D0 FD		     1			sar	B,1
 2822  9F		     1			lahf
 2823  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2826  B2 00		     1			mov	temp_l,0
 2828  8A 34		     2			mov	temp_h,ds:[PC80]
 282A  46		     2			inc	PC80
 282B  FF E2		     2			jmp	temp
				CB	29H
 = 002A			     1		op2	= 29H + 1
						SRA	C_reg
 2920  D0 F9		     1			sar	C_reg,1
 2922  9F		     1			lahf
 2923  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2926  B2 00		     1			mov	temp_l,0
 2928  8A 34		     2			mov	temp_h,ds:[PC80]
 292A  46		     2			inc	PC80
 292B  FF E2		     2			jmp	temp
				CB	2aH
 = 002B			     1		op2	= 2aH + 1
						SRA	D
 2A20  8B D5		     1			mov	temp,save_temp
 2A22  D0 FE		     1			sar	D,1
 2A24  8B EA		     1			mov	save_temp,temp
 2A26  9F		     1			lahf
 2A27  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2A2A  B2 00		     1			mov	temp_l,0
 2A2C  8A 34		     2			mov	temp_h,ds:[PC80]
 2A2E  46		     2			inc	PC80
 2A2F  FF E2		     2			jmp	temp
				CB	2bH
 = 002C			     1		op2	= 2bH + 1
						SRA	E
 2B20  8B D5		     1			mov	temp,save_temp
 2B22  D0 FA		     1			sar	E,1
 2B24  8B EA		     1			mov	save_temp,temp
 2B26  9F		     1			lahf
 2B27  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2B2A  B2 00		     1			mov	temp_l,0
 2B2C  8A 34		     2			mov	temp_h,ds:[PC80]
 2B2E  46		     2			inc	PC80
 2B2F  FF E2		     2			jmp	temp
				CB	2cH
 = 002D			     1		op2	= 2cH + 1
						SRA	H
 2C20  D0 FF		     1			sar	H,1
 2C22  9F		     1			lahf
 2C23  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2C26  B2 00		     1			mov	temp_l,0
 2C28  8A 34		     2			mov	temp_h,ds:[PC80]
 2C2A  46		     2			inc	PC80
 2C2B  FF E2		     2			jmp	temp
				CB	2dH
 = 002E			     1		op2	= 2dH + 1
						SRA	L
 2D20  D0 FB		     1			sar	L,1
 2D22  9F		     1			lahf
 2D23  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2D26  B2 00		     1			mov	temp_l,0
 2D28  8A 34		     2			mov	temp_h,ds:[PC80]
 2D2A  46		     2			inc	PC80
 2D2B  FF E2		     2			jmp	temp
				CB	2eH
 = 002F			     1		op2	= 2eH + 1
						SRA	M
 2E20  D0 3F		     1			sar	M,1
 2E22  9F		     1			lahf
 2E23  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2E26  B2 00		     1			mov	temp_l,0
 2E28  8A 34		     2			mov	temp_h,ds:[PC80]
 2E2A  46		     2			inc	PC80
 2E2B  FF E2		     2			jmp	temp
				CB	2fH
 = 0030			     1		op2	= 2fH + 1
						SRA	A
 2F20  D0 F8		     1			sar	A,1
 2F22  9F		     1			lahf
 2F23  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 2F26  B2 00		     1			mov	temp_l,0
 2F28  8A 34		     2			mov	temp_h,ds:[PC80]
 2F2A  46		     2			inc	PC80
 2F2B  FF E2		     2			jmp	temp

				CB	30H
 = 0031			     1		op2	= 30H + 1
						SLL	B
 3020  F9		     1			stc
 3021  D0 D2		     1			rcl	temp_l,1
 3023  9F		     1			lahf
 3024  8A F4		     1			mov	temp_h,ah
 3026  80 E6 01		     1			and	temp_h,c_flag
 3029  22 ED		     1			and	B,B
 302B  9F		     1			lahf
 302C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 302F  0A E6		     1			or	ah,temp_h
 3031  B2 00		     1			mov	temp_l,0
 3033  8A 34		     2			mov	temp_h,ds:[PC80]
 3035  46		     2			inc	PC80
 3036  FF E2		     2			jmp	temp
				CB	31H
 = 0032			     1		op2	= 31H + 1
						SLL	C_reg
 3120  F9		     1			stc
 3121  D0 D2		     1			rcl	temp_l,1
 3123  9F		     1			lahf
 3124  8A F4		     1			mov	temp_h,ah
 3126  80 E6 01		     1			and	temp_h,c_flag
 3129  22 C9		     1			and	C_reg,C_reg
 312B  9F		     1			lahf
 312C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 312F  0A E6		     1			or	ah,temp_h
 3131  B2 00		     1			mov	temp_l,0
 3133  8A 34		     2			mov	temp_h,ds:[PC80]
 3135  46		     2			inc	PC80
 3136  FF E2		     2			jmp	temp
				CB	32H
 = 0033			     1		op2	= 32H + 1
						SLL	D
 3220  F9		     1			stc
 3221  8B D5		     1			mov	temp,save_temp
 3223  D0 D6		     1			rcl	D,1
 3225  8B EA		     1			mov	save_temp,temp
 3227  9F		     1			lahf
 3228  8A D4		     1			mov	temp_l,ah
 322A  80 E2 01		     1			and	temp_l,c_flag
 322D  22 F6		     1			and	D,D
 322F  9F		     1			lahf
 3230  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 3233  0A E2		     1			or	ah,temp_l
 3235  B2 00		     1			mov	temp_l,0
 3237  8A 34		     2			mov	temp_h,ds:[PC80]
 3239  46		     2			inc	PC80
 323A  FF E2		     2			jmp	temp
				CB	33H
 = 0034			     1		op2	= 33H + 1
						SLL	E
 3320  F9		     1			stc
 3321  8B D5		     1			mov	temp,save_temp
 3323  D0 D2		     1			rcl	E,1
 3325  8B EA		     1			mov	save_temp,temp
 3327  9F		     1			lahf
 3328  8A F4		     1			mov	temp_h,ah
 332A  80 E6 01		     1			and	temp_h,c_flag
 332D  22 D2		     1			and	E,E
 332F  9F		     1			lahf
 3330  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 3333  0A E6		     1			or	ah,temp_h
 3335  B2 00		     1			mov	temp_l,0
 3337  8A 34		     2			mov	temp_h,ds:[PC80]
 3339  46		     2			inc	PC80
 333A  FF E2		     2			jmp	temp
				CB	34H
 = 0035			     1		op2	= 34H + 1
						SLL	H
 3420  F9		     1			stc
 3421  D0 D2		     1			rcl	temp_l,1
 3423  9F		     1			lahf
 3424  8A F4		     1			mov	temp_h,ah
 3426  80 E6 01		     1			and	temp_h,c_flag
 3429  22 FF		     1			and	H,H
 342B  9F		     1			lahf
 342C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 342F  0A E6		     1			or	ah,temp_h
 3431  B2 00		     1			mov	temp_l,0
 3433  8A 34		     2			mov	temp_h,ds:[PC80]
 3435  46		     2			inc	PC80
 3436  FF E2		     2			jmp	temp
				CB	35H
 = 0036			     1		op2	= 35H + 1
						SLL	L
 3520  F9		     1			stc
 3521  D0 D2		     1			rcl	temp_l,1
 3523  9F		     1			lahf
 3524  8A F4		     1			mov	temp_h,ah
 3526  80 E6 01		     1			and	temp_h,c_flag
 3529  22 DB		     1			and	L,L
 352B  9F		     1			lahf
 352C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 352F  0A E6		     1			or	ah,temp_h
 3531  B2 00		     1			mov	temp_l,0
 3533  8A 34		     2			mov	temp_h,ds:[PC80]
 3535  46		     2			inc	PC80
 3536  FF E2		     2			jmp	temp
				CB	36H
 = 0037			     1		op2	= 36H + 1
						SLL	M
 3620  F9		     1			stc
 3621  8A 17		     1			mov	temp_l,M
 3623  D0 D2		     1			rcl	temp_l,1
 3625  88 17		     1			mov	M,temp_l
 3627  9F		     1			lahf
 3628  8A F4		     1			mov	temp_h,ah
 362A  80 E6 01		     1			and	temp_h,c_flag
 362D  22 D2		     1			and	temp_l,temp_l
 362F  9F		     1			lahf
 3630  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 3633  0A E6		     1			or	ah,temp_h
 3635  B2 00		     1			mov	temp_l,0
 3637  8A 34		     2			mov	temp_h,ds:[PC80]
 3639  46		     2			inc	PC80
 363A  FF E2		     2			jmp	temp
				CB	37H
 = 0038			     1		op2	= 37H + 1
						SLL	A
 3720  F9		     1			stc
 3721  D0 D2		     1			rcl	temp_l,1
 3723  9F		     1			lahf
 3724  8A F4		     1			mov	temp_h,ah
 3726  80 E6 01		     1			and	temp_h,c_flag
 3729  22 C0		     1			and	A,A
 372B  9F		     1			lahf
 372C  80 E4 EC		     1			and	ah,not (h_flag or n_flag or c_flag)
 372F  0A E6		     1			or	ah,temp_h
 3731  B2 00		     1			mov	temp_l,0
 3733  8A 34		     2			mov	temp_h,ds:[PC80]
 3735  46		     2			inc	PC80
 3736  FF E2		     2			jmp	temp

				CB	38H
 = 0039			     1		op2	= 38H + 1
						SRL	B
 3820  D0 ED		     1			shr	B,1
 3822  9F		     1			lahf
 3823  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 3826  B2 00		     1			mov	temp_l,0
 3828  8A 34		     2			mov	temp_h,ds:[PC80]
 382A  46		     2			inc	PC80
 382B  FF E2		     2			jmp	temp
				CB	39H
 = 003A			     1		op2	= 39H + 1
						SRL	C_reg
 3920  D0 E9		     1			shr	C_reg,1
 3922  9F		     1			lahf
 3923  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 3926  B2 00		     1			mov	temp_l,0
 3928  8A 34		     2			mov	temp_h,ds:[PC80]
 392A  46		     2			inc	PC80
 392B  FF E2		     2			jmp	temp
				CB	3aH
 = 003B			     1		op2	= 3aH + 1
						SRL	D
 3A20  8B D5		     1			mov	temp,save_temp
 3A22  D0 EE		     1			shr	D,1
 3A24  8B EA		     1			mov	save_temp,temp
 3A26  9F		     1			lahf
 3A27  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 3A2A  B2 00		     1			mov	temp_l,0
 3A2C  8A 34		     2			mov	temp_h,ds:[PC80]
 3A2E  46		     2			inc	PC80
 3A2F  FF E2		     2			jmp	temp
				CB	3bH
 = 003C			     1		op2	= 3bH + 1
						SRL	E
 3B20  8B D5		     1			mov	temp,save_temp
 3B22  D0 EA		     1			shr	E,1
 3B24  8B EA		     1			mov	save_temp,temp
 3B26  9F		     1			lahf
 3B27  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 3B2A  B2 00		     1			mov	temp_l,0
 3B2C  8A 34		     2			mov	temp_h,ds:[PC80]
 3B2E  46		     2			inc	PC80
 3B2F  FF E2		     2			jmp	temp
				CB	3cH
 = 003D			     1		op2	= 3cH + 1
						SRL	H
 3C20  D0 EF		     1			shr	H,1
 3C22  9F		     1			lahf
 3C23  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 3C26  B2 00		     1			mov	temp_l,0
 3C28  8A 34		     2			mov	temp_h,ds:[PC80]
 3C2A  46		     2			inc	PC80
 3C2B  FF E2		     2			jmp	temp
				CB	3dH
 = 003E			     1		op2	= 3dH + 1
						SRL	L
 3D20  D0 EB		     1			shr	L,1
 3D22  9F		     1			lahf
 3D23  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 3D26  B2 00		     1			mov	temp_l,0
 3D28  8A 34		     2			mov	temp_h,ds:[PC80]
 3D2A  46		     2			inc	PC80
 3D2B  FF E2		     2			jmp	temp
				CB	3eH
 = 003F			     1		op2	= 3eH + 1
						SRL	M
 3E20  D0 2F		     1			shr	M,1
 3E22  9F		     1			lahf
 3E23  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 3E26  B2 00		     1			mov	temp_l,0
 3E28  8A 34		     2			mov	temp_h,ds:[PC80]
 3E2A  46		     2			inc	PC80
 3E2B  FF E2		     2			jmp	temp
				CB	3fH
 = 0040			     1		op2	= 3fH + 1
						SRL	A
 3F20  D0 E8		     1			shr	A,1
 3F22  9F		     1			lahf
 3F23  80 E4 ED		     1			and	ah,not (h_flag or n_flag)
 3F26  B2 00		     1			mov	temp_l,0
 3F28  8A 34		     2			mov	temp_h,ds:[PC80]
 3F2A  46		     2			inc	PC80
 3F2B  FF E2		     2			jmp	temp
				;--------------------------------------
				CB	40H
 = 0041			     1		op2	= 40H + 1
						BIT	0,B
 4020  F6 C5 01		     1			test	B,1 shl 0
 4023  8A F4		     1			mov	temp_h,ah
 4025  9F		     1			lahf
 4026  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4029  80 E4 40		     1			and	ah,z_flag
 402C  80 CE 10		     1			or	temp_h,h_flag
 402F  0A E6		     1			or	ah,temp_h
 4031  B2 00		     1			mov	temp_l,0
 4033  8A 34		     2			mov	temp_h,ds:[PC80]
 4035  46		     2			inc	PC80
 4036  FF E2		     2			jmp	temp
				CB	41H
 = 0042			     1		op2	= 41H + 1
						BIT	0,C_reg
 4120  F6 C1 01		     1			test	C_reg,1 shl 0
 4123  8A F4		     1			mov	temp_h,ah
 4125  9F		     1			lahf
 4126  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4129  80 E4 40		     1			and	ah,z_flag
 412C  80 CE 10		     1			or	temp_h,h_flag
 412F  0A E6		     1			or	ah,temp_h
 4131  B2 00		     1			mov	temp_l,0
 4133  8A 34		     2			mov	temp_h,ds:[PC80]
 4135  46		     2			inc	PC80
 4136  FF E2		     2			jmp	temp
				CB	42H
 = 0043			     1		op2	= 42H + 1
						BIT	0,D
 4220  8B D5		     1			mov	temp,save_temp
 4222  F6 C6 01		     1			test	D,1 shl 0
 4225  8A F4		     1			mov	temp_h,ah
 4227  9F		     1			lahf
 4228  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 422B  80 E4 40		     1			and	ah,z_flag
 422E  80 CE 10		     1			or	temp_h,h_flag
 4231  0A E6		     1			or	ah,temp_h
 4233  B2 00		     1			mov	temp_l,0
 4235  8A 34		     2			mov	temp_h,ds:[PC80]
 4237  46		     2			inc	PC80
 4238  FF E2		     2			jmp	temp
				CB	43H
 = 0044			     1		op2	= 43H + 1
						BIT	0,E
 4320  8B D5		     1			mov	temp,save_temp
 4322  F6 C2 01		     1			test	E,1 shl 0
 4325  8A F4		     1			mov	temp_h,ah
 4327  9F		     1			lahf
 4328  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 432B  80 E4 40		     1			and	ah,z_flag
 432E  80 CE 10		     1			or	temp_h,h_flag
 4331  0A E6		     1			or	ah,temp_h
 4333  B2 00		     1			mov	temp_l,0
 4335  8A 34		     2			mov	temp_h,ds:[PC80]
 4337  46		     2			inc	PC80
 4338  FF E2		     2			jmp	temp
				CB	44H
 = 0045			     1		op2	= 44H + 1
						BIT	0,H
 4420  F6 C7 01		     1			test	H,1 shl 0
 4423  8A F4		     1			mov	temp_h,ah
 4425  9F		     1			lahf
 4426  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4429  80 E4 40		     1			and	ah,z_flag
 442C  80 CE 10		     1			or	temp_h,h_flag
 442F  0A E6		     1			or	ah,temp_h
 4431  B2 00		     1			mov	temp_l,0
 4433  8A 34		     2			mov	temp_h,ds:[PC80]
 4435  46		     2			inc	PC80
 4436  FF E2		     2			jmp	temp
				CB	45H
 = 0046			     1		op2	= 45H + 1
						BIT	0,L
 4520  F6 C3 01		     1			test	L,1 shl 0
 4523  8A F4		     1			mov	temp_h,ah
 4525  9F		     1			lahf
 4526  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4529  80 E4 40		     1			and	ah,z_flag
 452C  80 CE 10		     1			or	temp_h,h_flag
 452F  0A E6		     1			or	ah,temp_h
 4531  B2 00		     1			mov	temp_l,0
 4533  8A 34		     2			mov	temp_h,ds:[PC80]
 4535  46		     2			inc	PC80
 4536  FF E2		     2			jmp	temp
				CB	46H
 = 0047			     1		op2	= 46H + 1
						BIT	0,M
 4620  F6 07 01		     1			test	M,1 shl 0
 4623  8A F4		     1			mov	temp_h,ah
 4625  9F		     1			lahf
 4626  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4629  80 E4 40		     1			and	ah,z_flag
 462C  80 CE 10		     1			or	temp_h,h_flag
 462F  0A E6		     1			or	ah,temp_h
 4631  B2 00		     1			mov	temp_l,0
 4633  8A 34		     2			mov	temp_h,ds:[PC80]
 4635  46		     2			inc	PC80
 4636  FF E2		     2			jmp	temp
				CB	47H
 = 0048			     1		op2	= 47H + 1
						BIT	0,A
 4720  A8 01		     1			test	A,1 shl 0
 4722  8A F4		     1			mov	temp_h,ah
 4724  9F		     1			lahf
 4725  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4728  80 E4 40		     1			and	ah,z_flag
 472B  80 CE 10		     1			or	temp_h,h_flag
 472E  0A E6		     1			or	ah,temp_h
 4730  B2 00		     1			mov	temp_l,0
 4732  8A 34		     2			mov	temp_h,ds:[PC80]
 4734  46		     2			inc	PC80
 4735  FF E2		     2			jmp	temp

				CB	48H
 = 0049			     1		op2	= 48H + 1
						BIT	1,B
 4820  F6 C5 02		     1			test	B,1 shl 1
 4823  8A F4		     1			mov	temp_h,ah
 4825  9F		     1			lahf
 4826  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4829  80 E4 40		     1			and	ah,z_flag
 482C  80 CE 10		     1			or	temp_h,h_flag
 482F  0A E6		     1			or	ah,temp_h
 4831  B2 00		     1			mov	temp_l,0
 4833  8A 34		     2			mov	temp_h,ds:[PC80]
 4835  46		     2			inc	PC80
 4836  FF E2		     2			jmp	temp
				CB	49H
 = 004A			     1		op2	= 49H + 1
						BIT	1,C_reg
 4920  F6 C1 02		     1			test	C_reg,1 shl 1
 4923  8A F4		     1			mov	temp_h,ah
 4925  9F		     1			lahf
 4926  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4929  80 E4 40		     1			and	ah,z_flag
 492C  80 CE 10		     1			or	temp_h,h_flag
 492F  0A E6		     1			or	ah,temp_h
 4931  B2 00		     1			mov	temp_l,0
 4933  8A 34		     2			mov	temp_h,ds:[PC80]
 4935  46		     2			inc	PC80
 4936  FF E2		     2			jmp	temp
				CB	4aH
 = 004B			     1		op2	= 4aH + 1
						BIT	1,D
 4A20  8B D5		     1			mov	temp,save_temp
 4A22  F6 C6 02		     1			test	D,1 shl 1
 4A25  8A F4		     1			mov	temp_h,ah
 4A27  9F		     1			lahf
 4A28  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4A2B  80 E4 40		     1			and	ah,z_flag
 4A2E  80 CE 10		     1			or	temp_h,h_flag
 4A31  0A E6		     1			or	ah,temp_h
 4A33  B2 00		     1			mov	temp_l,0
 4A35  8A 34		     2			mov	temp_h,ds:[PC80]
 4A37  46		     2			inc	PC80
 4A38  FF E2		     2			jmp	temp
				CB	4bH
 = 004C			     1		op2	= 4bH + 1
						BIT	1,E
 4B20  8B D5		     1			mov	temp,save_temp
 4B22  F6 C2 02		     1			test	E,1 shl 1
 4B25  8A F4		     1			mov	temp_h,ah
 4B27  9F		     1			lahf
 4B28  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4B2B  80 E4 40		     1			and	ah,z_flag
 4B2E  80 CE 10		     1			or	temp_h,h_flag
 4B31  0A E6		     1			or	ah,temp_h
 4B33  B2 00		     1			mov	temp_l,0
 4B35  8A 34		     2			mov	temp_h,ds:[PC80]
 4B37  46		     2			inc	PC80
 4B38  FF E2		     2			jmp	temp
				CB	4cH
 = 004D			     1		op2	= 4cH + 1
						BIT	1,H
 4C20  F6 C7 02		     1			test	H,1 shl 1
 4C23  8A F4		     1			mov	temp_h,ah
 4C25  9F		     1			lahf
 4C26  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4C29  80 E4 40		     1			and	ah,z_flag
 4C2C  80 CE 10		     1			or	temp_h,h_flag
 4C2F  0A E6		     1			or	ah,temp_h
 4C31  B2 00		     1			mov	temp_l,0
 4C33  8A 34		     2			mov	temp_h,ds:[PC80]
 4C35  46		     2			inc	PC80
 4C36  FF E2		     2			jmp	temp
				CB	4dH
 = 004E			     1		op2	= 4dH + 1
						BIT	1,L
 4D20  F6 C3 02		     1			test	L,1 shl 1
 4D23  8A F4		     1			mov	temp_h,ah
 4D25  9F		     1			lahf
 4D26  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4D29  80 E4 40		     1			and	ah,z_flag
 4D2C  80 CE 10		     1			or	temp_h,h_flag
 4D2F  0A E6		     1			or	ah,temp_h
 4D31  B2 00		     1			mov	temp_l,0
 4D33  8A 34		     2			mov	temp_h,ds:[PC80]
 4D35  46		     2			inc	PC80
 4D36  FF E2		     2			jmp	temp
				CB	4eH
 = 004F			     1		op2	= 4eH + 1
						BIT	1,M
 4E20  F6 07 02		     1			test	M,1 shl 1
 4E23  8A F4		     1			mov	temp_h,ah
 4E25  9F		     1			lahf
 4E26  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4E29  80 E4 40		     1			and	ah,z_flag
 4E2C  80 CE 10		     1			or	temp_h,h_flag
 4E2F  0A E6		     1			or	ah,temp_h
 4E31  B2 00		     1			mov	temp_l,0
 4E33  8A 34		     2			mov	temp_h,ds:[PC80]
 4E35  46		     2			inc	PC80
 4E36  FF E2		     2			jmp	temp
				CB	4fH
 = 0050			     1		op2	= 4fH + 1
						BIT	1,A
 4F20  A8 02		     1			test	A,1 shl 1
 4F22  8A F4		     1			mov	temp_h,ah
 4F24  9F		     1			lahf
 4F25  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4F28  80 E4 40		     1			and	ah,z_flag
 4F2B  80 CE 10		     1			or	temp_h,h_flag
 4F2E  0A E6		     1			or	ah,temp_h
 4F30  B2 00		     1			mov	temp_l,0
 4F32  8A 34		     2			mov	temp_h,ds:[PC80]
 4F34  46		     2			inc	PC80
 4F35  FF E2		     2			jmp	temp

				CB	50H
 = 0051			     1		op2	= 50H + 1
						BIT	2,B
 5020  F6 C5 04		     1			test	B,1 shl 2
 5023  8A F4		     1			mov	temp_h,ah
 5025  9F		     1			lahf
 5026  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5029  80 E4 40		     1			and	ah,z_flag
 502C  80 CE 10		     1			or	temp_h,h_flag
 502F  0A E6		     1			or	ah,temp_h
 5031  B2 00		     1			mov	temp_l,0
 5033  8A 34		     2			mov	temp_h,ds:[PC80]
 5035  46		     2			inc	PC80
 5036  FF E2		     2			jmp	temp
				CB	51H
 = 0052			     1		op2	= 51H + 1
						BIT	2,C_reg
 5120  F6 C1 04		     1			test	C_reg,1 shl 2
 5123  8A F4		     1			mov	temp_h,ah
 5125  9F		     1			lahf
 5126  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5129  80 E4 40		     1			and	ah,z_flag
 512C  80 CE 10		     1			or	temp_h,h_flag
 512F  0A E6		     1			or	ah,temp_h
 5131  B2 00		     1			mov	temp_l,0
 5133  8A 34		     2			mov	temp_h,ds:[PC80]
 5135  46		     2			inc	PC80
 5136  FF E2		     2			jmp	temp
				CB	52H
 = 0053			     1		op2	= 52H + 1
						BIT	2,D
 5220  8B D5		     1			mov	temp,save_temp
 5222  F6 C6 04		     1			test	D,1 shl 2
 5225  8A F4		     1			mov	temp_h,ah
 5227  9F		     1			lahf
 5228  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 522B  80 E4 40		     1			and	ah,z_flag
 522E  80 CE 10		     1			or	temp_h,h_flag
 5231  0A E6		     1			or	ah,temp_h
 5233  B2 00		     1			mov	temp_l,0
 5235  8A 34		     2			mov	temp_h,ds:[PC80]
 5237  46		     2			inc	PC80
 5238  FF E2		     2			jmp	temp
				CB	53H
 = 0054			     1		op2	= 53H + 1
						BIT	2,E
 5320  8B D5		     1			mov	temp,save_temp
 5322  F6 C2 04		     1			test	E,1 shl 2
 5325  8A F4		     1			mov	temp_h,ah
 5327  9F		     1			lahf
 5328  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 532B  80 E4 40		     1			and	ah,z_flag
 532E  80 CE 10		     1			or	temp_h,h_flag
 5331  0A E6		     1			or	ah,temp_h
 5333  B2 00		     1			mov	temp_l,0
 5335  8A 34		     2			mov	temp_h,ds:[PC80]
 5337  46		     2			inc	PC80
 5338  FF E2		     2			jmp	temp
				CB	54H
 = 0055			     1		op2	= 54H + 1
						BIT	2,H
 5420  F6 C7 04		     1			test	H,1 shl 2
 5423  8A F4		     1			mov	temp_h,ah
 5425  9F		     1			lahf
 5426  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5429  80 E4 40		     1			and	ah,z_flag
 542C  80 CE 10		     1			or	temp_h,h_flag
 542F  0A E6		     1			or	ah,temp_h
 5431  B2 00		     1			mov	temp_l,0
 5433  8A 34		     2			mov	temp_h,ds:[PC80]
 5435  46		     2			inc	PC80
 5436  FF E2		     2			jmp	temp
				CB	55H
 = 0056			     1		op2	= 55H + 1
						BIT	2,L
 5520  F6 C3 04		     1			test	L,1 shl 2
 5523  8A F4		     1			mov	temp_h,ah
 5525  9F		     1			lahf
 5526  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5529  80 E4 40		     1			and	ah,z_flag
 552C  80 CE 10		     1			or	temp_h,h_flag
 552F  0A E6		     1			or	ah,temp_h
 5531  B2 00		     1			mov	temp_l,0
 5533  8A 34		     2			mov	temp_h,ds:[PC80]
 5535  46		     2			inc	PC80
 5536  FF E2		     2			jmp	temp
				CB	56H
 = 0057			     1		op2	= 56H + 1
						BIT	2,M
 5620  F6 07 04		     1			test	M,1 shl 2
 5623  8A F4		     1			mov	temp_h,ah
 5625  9F		     1			lahf
 5626  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5629  80 E4 40		     1			and	ah,z_flag
 562C  80 CE 10		     1			or	temp_h,h_flag
 562F  0A E6		     1			or	ah,temp_h
 5631  B2 00		     1			mov	temp_l,0
 5633  8A 34		     2			mov	temp_h,ds:[PC80]
 5635  46		     2			inc	PC80
 5636  FF E2		     2			jmp	temp
				CB	57H
 = 0058			     1		op2	= 57H + 1
						BIT	2,A
 5720  A8 04		     1			test	A,1 shl 2
 5722  8A F4		     1			mov	temp_h,ah
 5724  9F		     1			lahf
 5725  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5728  80 E4 40		     1			and	ah,z_flag
 572B  80 CE 10		     1			or	temp_h,h_flag
 572E  0A E6		     1			or	ah,temp_h
 5730  B2 00		     1			mov	temp_l,0
 5732  8A 34		     2			mov	temp_h,ds:[PC80]
 5734  46		     2			inc	PC80
 5735  FF E2		     2			jmp	temp

				CB	58H
 = 0059			     1		op2	= 58H + 1
						BIT	3,B
 5820  F6 C5 08		     1			test	B,1 shl 3
 5823  8A F4		     1			mov	temp_h,ah
 5825  9F		     1			lahf
 5826  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5829  80 E4 40		     1			and	ah,z_flag
 582C  80 CE 10		     1			or	temp_h,h_flag
 582F  0A E6		     1			or	ah,temp_h
 5831  B2 00		     1			mov	temp_l,0
 5833  8A 34		     2			mov	temp_h,ds:[PC80]
 5835  46		     2			inc	PC80
 5836  FF E2		     2			jmp	temp
				CB	59H
 = 005A			     1		op2	= 59H + 1
						BIT	3,C_reg
 5920  F6 C1 08		     1			test	C_reg,1 shl 3
 5923  8A F4		     1			mov	temp_h,ah
 5925  9F		     1			lahf
 5926  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5929  80 E4 40		     1			and	ah,z_flag
 592C  80 CE 10		     1			or	temp_h,h_flag
 592F  0A E6		     1			or	ah,temp_h
 5931  B2 00		     1			mov	temp_l,0
 5933  8A 34		     2			mov	temp_h,ds:[PC80]
 5935  46		     2			inc	PC80
 5936  FF E2		     2			jmp	temp
				CB	5aH
 = 005B			     1		op2	= 5aH + 1
						BIT	3,D
 5A20  8B D5		     1			mov	temp,save_temp
 5A22  F6 C6 08		     1			test	D,1 shl 3
 5A25  8A F4		     1			mov	temp_h,ah
 5A27  9F		     1			lahf
 5A28  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5A2B  80 E4 40		     1			and	ah,z_flag
 5A2E  80 CE 10		     1			or	temp_h,h_flag
 5A31  0A E6		     1			or	ah,temp_h
 5A33  B2 00		     1			mov	temp_l,0
 5A35  8A 34		     2			mov	temp_h,ds:[PC80]
 5A37  46		     2			inc	PC80
 5A38  FF E2		     2			jmp	temp
				CB	5bH
 = 005C			     1		op2	= 5bH + 1
						BIT	3,E
 5B20  8B D5		     1			mov	temp,save_temp
 5B22  F6 C2 08		     1			test	E,1 shl 3
 5B25  8A F4		     1			mov	temp_h,ah
 5B27  9F		     1			lahf
 5B28  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5B2B  80 E4 40		     1			and	ah,z_flag
 5B2E  80 CE 10		     1			or	temp_h,h_flag
 5B31  0A E6		     1			or	ah,temp_h
 5B33  B2 00		     1			mov	temp_l,0
 5B35  8A 34		     2			mov	temp_h,ds:[PC80]
 5B37  46		     2			inc	PC80
 5B38  FF E2		     2			jmp	temp
				CB	5cH
 = 005D			     1		op2	= 5cH + 1
						BIT	3,H
 5C20  F6 C7 08		     1			test	H,1 shl 3
 5C23  8A F4		     1			mov	temp_h,ah
 5C25  9F		     1			lahf
 5C26  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5C29  80 E4 40		     1			and	ah,z_flag
 5C2C  80 CE 10		     1			or	temp_h,h_flag
 5C2F  0A E6		     1			or	ah,temp_h
 5C31  B2 00		     1			mov	temp_l,0
 5C33  8A 34		     2			mov	temp_h,ds:[PC80]
 5C35  46		     2			inc	PC80
 5C36  FF E2		     2			jmp	temp
				CB	5dH
 = 005E			     1		op2	= 5dH + 1
						BIT	3,L
 5D20  F6 C3 08		     1			test	L,1 shl 3
 5D23  8A F4		     1			mov	temp_h,ah
 5D25  9F		     1			lahf
 5D26  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5D29  80 E4 40		     1			and	ah,z_flag
 5D2C  80 CE 10		     1			or	temp_h,h_flag
 5D2F  0A E6		     1			or	ah,temp_h
 5D31  B2 00		     1			mov	temp_l,0
 5D33  8A 34		     2			mov	temp_h,ds:[PC80]
 5D35  46		     2			inc	PC80
 5D36  FF E2		     2			jmp	temp
				CB	5eH
 = 005F			     1		op2	= 5eH + 1
						BIT	3,M
 5E20  F6 07 08		     1			test	M,1 shl 3
 5E23  8A F4		     1			mov	temp_h,ah
 5E25  9F		     1			lahf
 5E26  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5E29  80 E4 40		     1			and	ah,z_flag
 5E2C  80 CE 10		     1			or	temp_h,h_flag
 5E2F  0A E6		     1			or	ah,temp_h
 5E31  B2 00		     1			mov	temp_l,0
 5E33  8A 34		     2			mov	temp_h,ds:[PC80]
 5E35  46		     2			inc	PC80
 5E36  FF E2		     2			jmp	temp
				CB	5fH
 = 0060			     1		op2	= 5fH + 1
						BIT	3,A
 5F20  A8 08		     1			test	A,1 shl 3
 5F22  8A F4		     1			mov	temp_h,ah
 5F24  9F		     1			lahf
 5F25  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5F28  80 E4 40		     1			and	ah,z_flag
 5F2B  80 CE 10		     1			or	temp_h,h_flag
 5F2E  0A E6		     1			or	ah,temp_h
 5F30  B2 00		     1			mov	temp_l,0
 5F32  8A 34		     2			mov	temp_h,ds:[PC80]
 5F34  46		     2			inc	PC80
 5F35  FF E2		     2			jmp	temp

				CB	60H
 = 0061			     1		op2	= 60H + 1
						BIT	4,B
 6020  F6 C5 10		     1			test	B,1 shl 4
 6023  8A F4		     1			mov	temp_h,ah
 6025  9F		     1			lahf
 6026  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6029  80 E4 40		     1			and	ah,z_flag
 602C  80 CE 10		     1			or	temp_h,h_flag
 602F  0A E6		     1			or	ah,temp_h
 6031  B2 00		     1			mov	temp_l,0
 6033  8A 34		     2			mov	temp_h,ds:[PC80]
 6035  46		     2			inc	PC80
 6036  FF E2		     2			jmp	temp
				CB	61H
 = 0062			     1		op2	= 61H + 1
						BIT	4,C_reg
 6120  F6 C1 10		     1			test	C_reg,1 shl 4
 6123  8A F4		     1			mov	temp_h,ah
 6125  9F		     1			lahf
 6126  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6129  80 E4 40		     1			and	ah,z_flag
 612C  80 CE 10		     1			or	temp_h,h_flag
 612F  0A E6		     1			or	ah,temp_h
 6131  B2 00		     1			mov	temp_l,0
 6133  8A 34		     2			mov	temp_h,ds:[PC80]
 6135  46		     2			inc	PC80
 6136  FF E2		     2			jmp	temp
				CB	62H
 = 0063			     1		op2	= 62H + 1
						BIT	4,D
 6220  8B D5		     1			mov	temp,save_temp
 6222  F6 C6 10		     1			test	D,1 shl 4
 6225  8A F4		     1			mov	temp_h,ah
 6227  9F		     1			lahf
 6228  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 622B  80 E4 40		     1			and	ah,z_flag
 622E  80 CE 10		     1			or	temp_h,h_flag
 6231  0A E6		     1			or	ah,temp_h
 6233  B2 00		     1			mov	temp_l,0
 6235  8A 34		     2			mov	temp_h,ds:[PC80]
 6237  46		     2			inc	PC80
 6238  FF E2		     2			jmp	temp
				CB	63H
 = 0064			     1		op2	= 63H + 1
						BIT	4,E
 6320  8B D5		     1			mov	temp,save_temp
 6322  F6 C2 10		     1			test	E,1 shl 4
 6325  8A F4		     1			mov	temp_h,ah
 6327  9F		     1			lahf
 6328  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 632B  80 E4 40		     1			and	ah,z_flag
 632E  80 CE 10		     1			or	temp_h,h_flag
 6331  0A E6		     1			or	ah,temp_h
 6333  B2 00		     1			mov	temp_l,0
 6335  8A 34		     2			mov	temp_h,ds:[PC80]
 6337  46		     2			inc	PC80
 6338  FF E2		     2			jmp	temp
				CB	64H
 = 0065			     1		op2	= 64H + 1
						BIT	4,H
 6420  F6 C7 10		     1			test	H,1 shl 4
 6423  8A F4		     1			mov	temp_h,ah
 6425  9F		     1			lahf
 6426  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6429  80 E4 40		     1			and	ah,z_flag
 642C  80 CE 10		     1			or	temp_h,h_flag
 642F  0A E6		     1			or	ah,temp_h
 6431  B2 00		     1			mov	temp_l,0
 6433  8A 34		     2			mov	temp_h,ds:[PC80]
 6435  46		     2			inc	PC80
 6436  FF E2		     2			jmp	temp
				CB	65H
 = 0066			     1		op2	= 65H + 1
						BIT	4,L
 6520  F6 C3 10		     1			test	L,1 shl 4
 6523  8A F4		     1			mov	temp_h,ah
 6525  9F		     1			lahf
 6526  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6529  80 E4 40		     1			and	ah,z_flag
 652C  80 CE 10		     1			or	temp_h,h_flag
 652F  0A E6		     1			or	ah,temp_h
 6531  B2 00		     1			mov	temp_l,0
 6533  8A 34		     2			mov	temp_h,ds:[PC80]
 6535  46		     2			inc	PC80
 6536  FF E2		     2			jmp	temp
				CB	66H
 = 0067			     1		op2	= 66H + 1
						BIT	4,M
 6620  F6 07 10		     1			test	M,1 shl 4
 6623  8A F4		     1			mov	temp_h,ah
 6625  9F		     1			lahf
 6626  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6629  80 E4 40		     1			and	ah,z_flag
 662C  80 CE 10		     1			or	temp_h,h_flag
 662F  0A E6		     1			or	ah,temp_h
 6631  B2 00		     1			mov	temp_l,0
 6633  8A 34		     2			mov	temp_h,ds:[PC80]
 6635  46		     2			inc	PC80
 6636  FF E2		     2			jmp	temp
				CB	67H
 = 0068			     1		op2	= 67H + 1
						BIT	4,A
 6720  A8 10		     1			test	A,1 shl 4
 6722  8A F4		     1			mov	temp_h,ah
 6724  9F		     1			lahf
 6725  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6728  80 E4 40		     1			and	ah,z_flag
 672B  80 CE 10		     1			or	temp_h,h_flag
 672E  0A E6		     1			or	ah,temp_h
 6730  B2 00		     1			mov	temp_l,0
 6732  8A 34		     2			mov	temp_h,ds:[PC80]
 6734  46		     2			inc	PC80
 6735  FF E2		     2			jmp	temp

				CB	68H
 = 0069			     1		op2	= 68H + 1
						BIT	5,B
 6820  F6 C5 20		     1			test	B,1 shl 5
 6823  8A F4		     1			mov	temp_h,ah
 6825  9F		     1			lahf
 6826  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6829  80 E4 40		     1			and	ah,z_flag
 682C  80 CE 10		     1			or	temp_h,h_flag
 682F  0A E6		     1			or	ah,temp_h
 6831  B2 00		     1			mov	temp_l,0
 6833  8A 34		     2			mov	temp_h,ds:[PC80]
 6835  46		     2			inc	PC80
 6836  FF E2		     2			jmp	temp
				CB	69H
 = 006A			     1		op2	= 69H + 1
						BIT	5,C_reg
 6920  F6 C1 20		     1			test	C_reg,1 shl 5
 6923  8A F4		     1			mov	temp_h,ah
 6925  9F		     1			lahf
 6926  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6929  80 E4 40		     1			and	ah,z_flag
 692C  80 CE 10		     1			or	temp_h,h_flag
 692F  0A E6		     1			or	ah,temp_h
 6931  B2 00		     1			mov	temp_l,0
 6933  8A 34		     2			mov	temp_h,ds:[PC80]
 6935  46		     2			inc	PC80
 6936  FF E2		     2			jmp	temp
				CB	6aH
 = 006B			     1		op2	= 6aH + 1
						BIT	5,D
 6A20  8B D5		     1			mov	temp,save_temp
 6A22  F6 C6 20		     1			test	D,1 shl 5
 6A25  8A F4		     1			mov	temp_h,ah
 6A27  9F		     1			lahf
 6A28  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6A2B  80 E4 40		     1			and	ah,z_flag
 6A2E  80 CE 10		     1			or	temp_h,h_flag
 6A31  0A E6		     1			or	ah,temp_h
 6A33  B2 00		     1			mov	temp_l,0
 6A35  8A 34		     2			mov	temp_h,ds:[PC80]
 6A37  46		     2			inc	PC80
 6A38  FF E2		     2			jmp	temp
				CB	6bH
 = 006C			     1		op2	= 6bH + 1
						BIT	5,E
 6B20  8B D5		     1			mov	temp,save_temp
 6B22  F6 C2 20		     1			test	E,1 shl 5
 6B25  8A F4		     1			mov	temp_h,ah
 6B27  9F		     1			lahf
 6B28  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6B2B  80 E4 40		     1			and	ah,z_flag
 6B2E  80 CE 10		     1			or	temp_h,h_flag
 6B31  0A E6		     1			or	ah,temp_h
 6B33  B2 00		     1			mov	temp_l,0
 6B35  8A 34		     2			mov	temp_h,ds:[PC80]
 6B37  46		     2			inc	PC80
 6B38  FF E2		     2			jmp	temp
				CB	6cH
 = 006D			     1		op2	= 6cH + 1
						BIT	5,H
 6C20  F6 C7 20		     1			test	H,1 shl 5
 6C23  8A F4		     1			mov	temp_h,ah
 6C25  9F		     1			lahf
 6C26  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6C29  80 E4 40		     1			and	ah,z_flag
 6C2C  80 CE 10		     1			or	temp_h,h_flag
 6C2F  0A E6		     1			or	ah,temp_h
 6C31  B2 00		     1			mov	temp_l,0
 6C33  8A 34		     2			mov	temp_h,ds:[PC80]
 6C35  46		     2			inc	PC80
 6C36  FF E2		     2			jmp	temp
				CB	6dH
 = 006E			     1		op2	= 6dH + 1
						BIT	5,L
 6D20  F6 C3 20		     1			test	L,1 shl 5
 6D23  8A F4		     1			mov	temp_h,ah
 6D25  9F		     1			lahf
 6D26  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6D29  80 E4 40		     1			and	ah,z_flag
 6D2C  80 CE 10		     1			or	temp_h,h_flag
 6D2F  0A E6		     1			or	ah,temp_h
 6D31  B2 00		     1			mov	temp_l,0
 6D33  8A 34		     2			mov	temp_h,ds:[PC80]
 6D35  46		     2			inc	PC80
 6D36  FF E2		     2			jmp	temp
				CB	6eH
 = 006F			     1		op2	= 6eH + 1
						BIT	5,M
 6E20  F6 07 20		     1			test	M,1 shl 5
 6E23  8A F4		     1			mov	temp_h,ah
 6E25  9F		     1			lahf
 6E26  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6E29  80 E4 40		     1			and	ah,z_flag
 6E2C  80 CE 10		     1			or	temp_h,h_flag
 6E2F  0A E6		     1			or	ah,temp_h
 6E31  B2 00		     1			mov	temp_l,0
 6E33  8A 34		     2			mov	temp_h,ds:[PC80]
 6E35  46		     2			inc	PC80
 6E36  FF E2		     2			jmp	temp
				CB	6fH
 = 0070			     1		op2	= 6fH + 1
						BIT	5,A
 6F20  A8 20		     1			test	A,1 shl 5
 6F22  8A F4		     1			mov	temp_h,ah
 6F24  9F		     1			lahf
 6F25  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6F28  80 E4 40		     1			and	ah,z_flag
 6F2B  80 CE 10		     1			or	temp_h,h_flag
 6F2E  0A E6		     1			or	ah,temp_h
 6F30  B2 00		     1			mov	temp_l,0
 6F32  8A 34		     2			mov	temp_h,ds:[PC80]
 6F34  46		     2			inc	PC80
 6F35  FF E2		     2			jmp	temp

				CB	70H
 = 0071			     1		op2	= 70H + 1
						BIT	6,B
 7020  F6 C5 40		     1			test	B,1 shl 6
 7023  8A F4		     1			mov	temp_h,ah
 7025  9F		     1			lahf
 7026  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7029  80 E4 40		     1			and	ah,z_flag
 702C  80 CE 10		     1			or	temp_h,h_flag
 702F  0A E6		     1			or	ah,temp_h
 7031  B2 00		     1			mov	temp_l,0
 7033  8A 34		     2			mov	temp_h,ds:[PC80]
 7035  46		     2			inc	PC80
 7036  FF E2		     2			jmp	temp
				CB	71H
 = 0072			     1		op2	= 71H + 1
						BIT	6,C_reg
 7120  F6 C1 40		     1			test	C_reg,1 shl 6
 7123  8A F4		     1			mov	temp_h,ah
 7125  9F		     1			lahf
 7126  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7129  80 E4 40		     1			and	ah,z_flag
 712C  80 CE 10		     1			or	temp_h,h_flag
 712F  0A E6		     1			or	ah,temp_h
 7131  B2 00		     1			mov	temp_l,0
 7133  8A 34		     2			mov	temp_h,ds:[PC80]
 7135  46		     2			inc	PC80
 7136  FF E2		     2			jmp	temp
				CB	72H
 = 0073			     1		op2	= 72H + 1
						BIT	6,D
 7220  8B D5		     1			mov	temp,save_temp
 7222  F6 C6 40		     1			test	D,1 shl 6
 7225  8A F4		     1			mov	temp_h,ah
 7227  9F		     1			lahf
 7228  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 722B  80 E4 40		     1			and	ah,z_flag
 722E  80 CE 10		     1			or	temp_h,h_flag
 7231  0A E6		     1			or	ah,temp_h
 7233  B2 00		     1			mov	temp_l,0
 7235  8A 34		     2			mov	temp_h,ds:[PC80]
 7237  46		     2			inc	PC80
 7238  FF E2		     2			jmp	temp
				CB	73H
 = 0074			     1		op2	= 73H + 1
						BIT	6,E
 7320  8B D5		     1			mov	temp,save_temp
 7322  F6 C2 40		     1			test	E,1 shl 6
 7325  8A F4		     1			mov	temp_h,ah
 7327  9F		     1			lahf
 7328  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 732B  80 E4 40		     1			and	ah,z_flag
 732E  80 CE 10		     1			or	temp_h,h_flag
 7331  0A E6		     1			or	ah,temp_h
 7333  B2 00		     1			mov	temp_l,0
 7335  8A 34		     2			mov	temp_h,ds:[PC80]
 7337  46		     2			inc	PC80
 7338  FF E2		     2			jmp	temp
				CB	74H
 = 0075			     1		op2	= 74H + 1
						BIT	6,H
 7420  F6 C7 40		     1			test	H,1 shl 6
 7423  8A F4		     1			mov	temp_h,ah
 7425  9F		     1			lahf
 7426  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7429  80 E4 40		     1			and	ah,z_flag
 742C  80 CE 10		     1			or	temp_h,h_flag
 742F  0A E6		     1			or	ah,temp_h
 7431  B2 00		     1			mov	temp_l,0
 7433  8A 34		     2			mov	temp_h,ds:[PC80]
 7435  46		     2			inc	PC80
 7436  FF E2		     2			jmp	temp
				CB	75H
 = 0076			     1		op2	= 75H + 1
						BIT	6,L
 7520  F6 C3 40		     1			test	L,1 shl 6
 7523  8A F4		     1			mov	temp_h,ah
 7525  9F		     1			lahf
 7526  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7529  80 E4 40		     1			and	ah,z_flag
 752C  80 CE 10		     1			or	temp_h,h_flag
 752F  0A E6		     1			or	ah,temp_h
 7531  B2 00		     1			mov	temp_l,0
 7533  8A 34		     2			mov	temp_h,ds:[PC80]
 7535  46		     2			inc	PC80
 7536  FF E2		     2			jmp	temp
				CB	76H
 = 0077			     1		op2	= 76H + 1
						BIT	6,M
 7620  F6 07 40		     1			test	M,1 shl 6
 7623  8A F4		     1			mov	temp_h,ah
 7625  9F		     1			lahf
 7626  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7629  80 E4 40		     1			and	ah,z_flag
 762C  80 CE 10		     1			or	temp_h,h_flag
 762F  0A E6		     1			or	ah,temp_h
 7631  B2 00		     1			mov	temp_l,0
 7633  8A 34		     2			mov	temp_h,ds:[PC80]
 7635  46		     2			inc	PC80
 7636  FF E2		     2			jmp	temp
				CB	77H
 = 0078			     1		op2	= 77H + 1
						BIT	6,A
 7720  A8 40		     1			test	A,1 shl 6
 7722  8A F4		     1			mov	temp_h,ah
 7724  9F		     1			lahf
 7725  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7728  80 E4 40		     1			and	ah,z_flag
 772B  80 CE 10		     1			or	temp_h,h_flag
 772E  0A E6		     1			or	ah,temp_h
 7730  B2 00		     1			mov	temp_l,0
 7732  8A 34		     2			mov	temp_h,ds:[PC80]
 7734  46		     2			inc	PC80
 7735  FF E2		     2			jmp	temp

				CB	78H
 = 0079			     1		op2	= 78H + 1
						BIT	7,B
 7820  F6 C5 80		     1			test	B,1 shl 7
 7823  8A F4		     1			mov	temp_h,ah
 7825  9F		     1			lahf
 7826  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7829  80 E4 40		     1			and	ah,z_flag
 782C  80 CE 10		     1			or	temp_h,h_flag
 782F  0A E6		     1			or	ah,temp_h
 7831  B2 00		     1			mov	temp_l,0
 7833  8A 34		     2			mov	temp_h,ds:[PC80]
 7835  46		     2			inc	PC80
 7836  FF E2		     2			jmp	temp
				CB	79H
 = 007A			     1		op2	= 79H + 1
						BIT	7,C_reg
 7920  F6 C1 80		     1			test	C_reg,1 shl 7
 7923  8A F4		     1			mov	temp_h,ah
 7925  9F		     1			lahf
 7926  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7929  80 E4 40		     1			and	ah,z_flag
 792C  80 CE 10		     1			or	temp_h,h_flag
 792F  0A E6		     1			or	ah,temp_h
 7931  B2 00		     1			mov	temp_l,0
 7933  8A 34		     2			mov	temp_h,ds:[PC80]
 7935  46		     2			inc	PC80
 7936  FF E2		     2			jmp	temp
				CB	7aH
 = 007B			     1		op2	= 7aH + 1
						BIT	7,D
 7A20  8B D5		     1			mov	temp,save_temp
 7A22  F6 C6 80		     1			test	D,1 shl 7
 7A25  8A F4		     1			mov	temp_h,ah
 7A27  9F		     1			lahf
 7A28  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7A2B  80 E4 40		     1			and	ah,z_flag
 7A2E  80 CE 10		     1			or	temp_h,h_flag
 7A31  0A E6		     1			or	ah,temp_h
 7A33  B2 00		     1			mov	temp_l,0
 7A35  8A 34		     2			mov	temp_h,ds:[PC80]
 7A37  46		     2			inc	PC80
 7A38  FF E2		     2			jmp	temp
				CB	7bH
 = 007C			     1		op2	= 7bH + 1
						BIT	7,E
 7B20  8B D5		     1			mov	temp,save_temp
 7B22  F6 C2 80		     1			test	E,1 shl 7
 7B25  8A F4		     1			mov	temp_h,ah
 7B27  9F		     1			lahf
 7B28  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7B2B  80 E4 40		     1			and	ah,z_flag
 7B2E  80 CE 10		     1			or	temp_h,h_flag
 7B31  0A E6		     1			or	ah,temp_h
 7B33  B2 00		     1			mov	temp_l,0
 7B35  8A 34		     2			mov	temp_h,ds:[PC80]
 7B37  46		     2			inc	PC80
 7B38  FF E2		     2			jmp	temp
				CB	7cH
 = 007D			     1		op2	= 7cH + 1
						BIT	7,H
 7C20  F6 C7 80		     1			test	H,1 shl 7
 7C23  8A F4		     1			mov	temp_h,ah
 7C25  9F		     1			lahf
 7C26  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7C29  80 E4 40		     1			and	ah,z_flag
 7C2C  80 CE 10		     1			or	temp_h,h_flag
 7C2F  0A E6		     1			or	ah,temp_h
 7C31  B2 00		     1			mov	temp_l,0
 7C33  8A 34		     2			mov	temp_h,ds:[PC80]
 7C35  46		     2			inc	PC80
 7C36  FF E2		     2			jmp	temp
				CB	7dH
 = 007E			     1		op2	= 7dH + 1
						BIT	7,L
 7D20  F6 C3 80		     1			test	L,1 shl 7
 7D23  8A F4		     1			mov	temp_h,ah
 7D25  9F		     1			lahf
 7D26  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7D29  80 E4 40		     1			and	ah,z_flag
 7D2C  80 CE 10		     1			or	temp_h,h_flag
 7D2F  0A E6		     1			or	ah,temp_h
 7D31  B2 00		     1			mov	temp_l,0
 7D33  8A 34		     2			mov	temp_h,ds:[PC80]
 7D35  46		     2			inc	PC80
 7D36  FF E2		     2			jmp	temp
				CB	7eH
 = 007F			     1		op2	= 7eH + 1
						BIT	7,M
 7E20  F6 07 80		     1			test	M,1 shl 7
 7E23  8A F4		     1			mov	temp_h,ah
 7E25  9F		     1			lahf
 7E26  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7E29  80 E4 40		     1			and	ah,z_flag
 7E2C  80 CE 10		     1			or	temp_h,h_flag
 7E2F  0A E6		     1			or	ah,temp_h
 7E31  B2 00		     1			mov	temp_l,0
 7E33  8A 34		     2			mov	temp_h,ds:[PC80]
 7E35  46		     2			inc	PC80
 7E36  FF E2		     2			jmp	temp
				CB	7fH
 = 0080			     1		op2	= 7fH + 1
						BIT	7,A
 7F20  A8 80		     1			test	A,1 shl 7
 7F22  8A F4		     1			mov	temp_h,ah
 7F24  9F		     1			lahf
 7F25  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7F28  80 E4 40		     1			and	ah,z_flag
 7F2B  80 CE 10		     1			or	temp_h,h_flag
 7F2E  0A E6		     1			or	ah,temp_h
 7F30  B2 00		     1			mov	temp_l,0
 7F32  8A 34		     2			mov	temp_h,ds:[PC80]
 7F34  46		     2			inc	PC80
 7F35  FF E2		     2			jmp	temp
				;--------------------------------------
				CB	80H
 = 0081			     1		op2	= 80H + 1
						RES	0,B
 8020  80 E5 FE		     1			and	B,not (1 shl 0)
 8023  B2 00		     1			mov	temp_l,0
 8025  8A 34		     2			mov	temp_h,ds:[PC80]
 8027  46		     2			inc	PC80
 8028  FF E2		     2			jmp	temp
				CB	81H
 = 0082			     1		op2	= 81H + 1
						RES	0,C_reg
 8120  80 E1 FE		     1			and	C_reg,not (1 shl 0)
 8123  B2 00		     1			mov	temp_l,0
 8125  8A 34		     2			mov	temp_h,ds:[PC80]
 8127  46		     2			inc	PC80
 8128  FF E2		     2			jmp	temp
				CB	82H
 = 0083			     1		op2	= 82H + 1
						RES	0,D
 8220  8B D5		     1			mov	temp,save_temp
 8222  80 E6 FE		     1			and	D,not (1 shl 0)
 8225  8B EA		     1			mov	save_temp,temp
 8227  B2 00		     1			mov	temp_l,0
 8229  8A 34		     2			mov	temp_h,ds:[PC80]
 822B  46		     2			inc	PC80
 822C  FF E2		     2			jmp	temp
				CB	83H
 = 0084			     1		op2	= 83H + 1
						RES	0,E
 8320  8B D5		     1			mov	temp,save_temp
 8322  80 E2 FE		     1			and	E,not (1 shl 0)
 8325  8B EA		     1			mov	save_temp,temp
 8327  B2 00		     1			mov	temp_l,0
 8329  8A 34		     2			mov	temp_h,ds:[PC80]
 832B  46		     2			inc	PC80
 832C  FF E2		     2			jmp	temp
CB	84H
 = 0085			     1		op2	= 84H + 1
						RES	0,H
 8420  80 E7 FE		     1			and	H,not (1 shl 0)
 8423  B2 00		     1			mov	temp_l,0
 8425  8A 34		     2			mov	temp_h,ds:[PC80]
 8427  46		     2			inc	PC80
 8428  FF E2		     2			jmp	temp
				CB	85H
 = 0086			     1		op2	= 85H + 1
						RES	0,L
 8520  80 E3 FE		     1			and	L,not (1 shl 0)
 8523  B2 00		     1			mov	temp_l,0
 8525  8A 34		     2			mov	temp_h,ds:[PC80]
 8527  46		     2			inc	PC80
 8528  FF E2		     2			jmp	temp
				CB	86H
 = 0087			     1		op2	= 86H + 1
						RES	0,M
 8620  80 27 FE		     1			and	M,not (1 shl 0)
 8623  B2 00		     1			mov	temp_l,0
 8625  8A 34		     2			mov	temp_h,ds:[PC80]
 8627  46		     2			inc	PC80
 8628  FF E2		     2			jmp	temp
				CB	87H
 = 0088			     1		op2	= 87H + 1
						RES	0,A
 8720  24 FE		     1			and	A,not (1 shl 0)
 8722  B2 00		     1			mov	temp_l,0
 8724  8A 34		     2			mov	temp_h,ds:[PC80]
 8726  46		     2			inc	PC80
 8727  FF E2		     2			jmp	temp

				CB	88H
 = 0089			     1		op2	= 88H + 1
						RES	1,B
 8820  80 E5 FD		     1			and	B,not (1 shl 1)
 8823  B2 00		     1			mov	temp_l,0
 8825  8A 34		     2			mov	temp_h,ds:[PC80]
 8827  46		     2			inc	PC80
 8828  FF E2		     2			jmp	temp
				CB	89H
 = 008A			     1		op2	= 89H + 1
						RES	1,C_reg
 8920  80 E1 FD		     1			and	C_reg,not (1 shl 1)
 8923  B2 00		     1			mov	temp_l,0
 8925  8A 34		     2			mov	temp_h,ds:[PC80]
 8927  46		     2			inc	PC80
 8928  FF E2		     2			jmp	temp
				CB	8aH
 = 008B			     1		op2	= 8aH + 1
						RES	1,D
 8A20  8B D5		     1			mov	temp,save_temp
 8A22  80 E6 FD		     1			and	D,not (1 shl 1)
 8A25  8B EA		     1			mov	save_temp,temp
 8A27  B2 00		     1			mov	temp_l,0
 8A29  8A 34		     2			mov	temp_h,ds:[PC80]
 8A2B  46		     2			inc	PC80
 8A2C  FF E2		     2			jmp	temp
				CB	8bH
 = 008C			     1		op2	= 8bH + 1
						RES	1,E
 8B20  8B D5		     1			mov	temp,save_temp
 8B22  80 E2 FD		     1			and	E,not (1 shl 1)
 8B25  8B EA		     1			mov	save_temp,temp
 8B27  B2 00		     1			mov	temp_l,0
 8B29  8A 34		     2			mov	temp_h,ds:[PC80]
 8B2B  46		     2			inc	PC80
 8B2C  FF E2		     2			jmp	temp
				CB	8cH
 = 008D			     1		op2	= 8cH + 1
						RES	1,H
 8C20  80 E7 FD		     1			and	H,not (1 shl 1)
 8C23  B2 00		     1			mov	temp_l,0
 8C25  8A 34		     2			mov	temp_h,ds:[PC80]
 8C27  46		     2			inc	PC80
 8C28  FF E2		     2			jmp	temp
				CB	8dH
 = 008E			     1		op2	= 8dH + 1
						RES	1,L
 8D20  80 E3 FD		     1			and	L,not (1 shl 1)
 8D23  B2 00		     1			mov	temp_l,0
 8D25  8A 34		     2			mov	temp_h,ds:[PC80]
 8D27  46		     2			inc	PC80
 8D28  FF E2		     2			jmp	temp
				CB	8eH
 = 008F			     1		op2	= 8eH + 1
						RES	1,M
 8E20  80 27 FD		     1			and	M,not (1 shl 1)
 8E23  B2 00		     1			mov	temp_l,0
 8E25  8A 34		     2			mov	temp_h,ds:[PC80]
 8E27  46		     2			inc	PC80
 8E28  FF E2		     2			jmp	temp
				CB	8fH
 = 0090			     1		op2	= 8fH + 1
						RES	1,A
 8F20  24 FD		     1			and	A,not (1 shl 1)
 8F22  B2 00		     1			mov	temp_l,0
 8F24  8A 34		     2			mov	temp_h,ds:[PC80]
 8F26  46		     2			inc	PC80
 8F27  FF E2		     2			jmp	temp

				CB	90H
 = 0091			     1		op2	= 90H + 1
						RES	2,B
 9020  80 E5 FB		     1			and	B,not (1 shl 2)
 9023  B2 00		     1			mov	temp_l,0
 9025  8A 34		     2			mov	temp_h,ds:[PC80]
 9027  46		     2			inc	PC80
 9028  FF E2		     2			jmp	temp
				CB	91H
 = 0092			     1		op2	= 91H + 1
						RES	2,C_reg
 9120  80 E1 FB		     1			and	C_reg,not (1 shl 2)
 9123  B2 00		     1			mov	temp_l,0
 9125  8A 34		     2			mov	temp_h,ds:[PC80]
 9127  46		     2			inc	PC80
 9128  FF E2		     2			jmp	temp
				CB	92H
 = 0093			     1		op2	= 92H + 1
						RES	2,D
 9220  8B D5		     1			mov	temp,save_temp
 9222  80 E6 FB		     1			and	D,not (1 shl 2)
 9225  8B EA		     1			mov	save_temp,temp
 9227  B2 00		     1			mov	temp_l,0
 9229  8A 34		     2			mov	temp_h,ds:[PC80]
 922B  46		     2			inc	PC80
 922C  FF E2		     2			jmp	temp
				CB	93H
 = 0094			     1		op2	= 93H + 1
						RES	2,E
 9320  8B D5		     1			mov	temp,save_temp
 9322  80 E2 FB		     1			and	E,not (1 shl 2)
 9325  8B EA		     1			mov	save_temp,temp
 9327  B2 00		     1			mov	temp_l,0
 9329  8A 34		     2			mov	temp_h,ds:[PC80]
 932B  46		     2			inc	PC80
 932C  FF E2		     2			jmp	temp
				CB	94H
 = 0095			     1		op2	= 94H + 1
						RES	2,H
 9420  80 E7 FB		     1			and	H,not (1 shl 2)
 9423  B2 00		     1			mov	temp_l,0
 9425  8A 34		     2			mov	temp_h,ds:[PC80]
 9427  46		     2			inc	PC80
 9428  FF E2		     2			jmp	temp
				CB	95H
 = 0096			     1		op2	= 95H + 1
						RES	2,L
 9520  80 E3 FB		     1			and	L,not (1 shl 2)
 9523  B2 00		     1			mov	temp_l,0
 9525  8A 34		     2			mov	temp_h,ds:[PC80]
 9527  46		     2			inc	PC80
 9528  FF E2		     2			jmp	temp
				CB	96H
 = 0097			     1		op2	= 96H + 1
						RES	2,M
 9620  80 27 FB		     1			and	M,not (1 shl 2)
 9623  B2 00		     1			mov	temp_l,0
 9625  8A 34		     2			mov	temp_h,ds:[PC80]
 9627  46		     2			inc	PC80
 9628  FF E2		     2			jmp	temp
				CB	97H
 = 0098			     1		op2	= 97H + 1
						RES	2,A
 9720  24 FB		     1			and	A,not (1 shl 2)
 9722  B2 00		     1			mov	temp_l,0
 9724  8A 34		     2			mov	temp_h,ds:[PC80]
 9726  46		     2			inc	PC80
 9727  FF E2		     2			jmp	temp

				CB	98H
 = 0099			     1		op2	= 98H + 1
						RES	3,B
 9820  80 E5 F7		     1			and	B,not (1 shl 3)
 9823  B2 00		     1			mov	temp_l,0
 9825  8A 34		     2			mov	temp_h,ds:[PC80]
 9827  46		     2			inc	PC80
 9828  FF E2		     2			jmp	temp
				CB	99H
 = 009A			     1		op2	= 99H + 1
						RES	3,C_reg
 9920  80 E1 F7		     1			and	C_reg,not (1 shl 3)
 9923  B2 00		     1			mov	temp_l,0
 9925  8A 34		     2			mov	temp_h,ds:[PC80]
 9927  46		     2			inc	PC80
 9928  FF E2		     2			jmp	temp
				CB	9aH
 = 009B			     1		op2	= 9aH + 1
						RES	3,D
 9A20  8B D5		     1			mov	temp,save_temp
 9A22  80 E6 F7		     1			and	D,not (1 shl 3)
 9A25  8B EA		     1			mov	save_temp,temp
 9A27  B2 00		     1			mov	temp_l,0
 9A29  8A 34		     2			mov	temp_h,ds:[PC80]
 9A2B  46		     2			inc	PC80
 9A2C  FF E2		     2			jmp	temp
				CB	9bH
 = 009C			     1		op2	= 9bH + 1
						RES	3,E
 9B20  8B D5		     1			mov	temp,save_temp
 9B22  80 E2 F7		     1			and	E,not (1 shl 3)
 9B25  8B EA		     1			mov	save_temp,temp
 9B27  B2 00		     1			mov	temp_l,0
 9B29  8A 34		     2			mov	temp_h,ds:[PC80]
 9B2B  46		     2			inc	PC80
 9B2C  FF E2		     2			jmp	temp
				CB	9cH
 = 009D			     1		op2	= 9cH + 1
						RES	3,H
 9C20  80 E7 F7		     1			and	H,not (1 shl 3)
 9C23  B2 00		     1			mov	temp_l,0
 9C25  8A 34		     2			mov	temp_h,ds:[PC80]
 9C27  46		     2			inc	PC80
 9C28  FF E2		     2			jmp	temp
				CB	9dH
 = 009E			     1		op2	= 9dH + 1
						RES	3,L
 9D20  80 E3 F7		     1			and	L,not (1 shl 3)
 9D23  B2 00		     1			mov	temp_l,0
 9D25  8A 34		     2			mov	temp_h,ds:[PC80]
 9D27  46		     2			inc	PC80
 9D28  FF E2		     2			jmp	temp
				CB	9eH
 = 009F			     1		op2	= 9eH + 1
						RES	3,M
 9E20  80 27 F7		     1			and	M,not (1 shl 3)
 9E23  B2 00		     1			mov	temp_l,0
 9E25  8A 34		     2			mov	temp_h,ds:[PC80]
 9E27  46		     2			inc	PC80
 9E28  FF E2		     2			jmp	temp
				CB	9fH
 = 00A0			     1		op2	= 9fH + 1
						RES	3,A
 9F20  24 F7		     1			and	A,not (1 shl 3)
 9F22  B2 00		     1			mov	temp_l,0
 9F24  8A 34		     2			mov	temp_h,ds:[PC80]
 9F26  46		     2			inc	PC80
 9F27  FF E2		     2			jmp	temp

				CB	0a0H
 = 00A1			     1		op2	= 0a0H + 1
						RES	4,B
 A020  80 E5 EF		     1			and	B,not (1 shl 4)
 A023  B2 00		     1			mov	temp_l,0
 A025  8A 34		     2			mov	temp_h,ds:[PC80]
 A027  46		     2			inc	PC80
 A028  FF E2		     2			jmp	temp
				CB	0a1H
 = 00A2			     1		op2	= 0a1H + 1
						RES	4,C_reg
 A120  80 E1 EF		     1			and	C_reg,not (1 shl 4)
 A123  B2 00		     1			mov	temp_l,0
 A125  8A 34		     2			mov	temp_h,ds:[PC80]
 A127  46		     2			inc	PC80
 A128  FF E2		     2			jmp	temp
				CB	0a2H
 = 00A3			     1		op2	= 0a2H + 1
						RES	4,D
 A220  8B D5		     1			mov	temp,save_temp
 A222  80 E6 EF		     1			and	D,not (1 shl 4)
 A225  8B EA		     1			mov	save_temp,temp
 A227  B2 00		     1			mov	temp_l,0
 A229  8A 34		     2			mov	temp_h,ds:[PC80]
 A22B  46		     2			inc	PC80
 A22C  FF E2		     2			jmp	temp
				CB	0a3H
 = 00A4			     1		op2	= 0a3H + 1
						RES	4,E
 A320  8B D5		     1			mov	temp,save_temp
 A322  80 E2 EF		     1			and	E,not (1 shl 4)
 A325  8B EA		     1			mov	save_temp,temp
 A327  B2 00		     1			mov	temp_l,0
 A329  8A 34		     2			mov	temp_h,ds:[PC80]
 A32B  46		     2			inc	PC80
 A32C  FF E2		     2			jmp	temp
				CB	0a4H
 = 00A5			     1		op2	= 0a4H + 1
						RES	4,H
 A420  80 E7 EF		     1			and	H,not (1 shl 4)
 A423  B2 00		     1			mov	temp_l,0
 A425  8A 34		     2			mov	temp_h,ds:[PC80]
 A427  46		     2			inc	PC80
 A428  FF E2		     2			jmp	temp
				CB	0a5H
 = 00A6			     1		op2	= 0a5H + 1
						RES	4,L
 A520  80 E3 EF		     1			and	L,not (1 shl 4)
 A523  B2 00		     1			mov	temp_l,0
 A525  8A 34		     2			mov	temp_h,ds:[PC80]
 A527  46		     2			inc	PC80
 A528  FF E2		     2			jmp	temp
				CB	0a6H
 = 00A7			     1		op2	= 0a6H + 1
						RES	4,M
 A620  80 27 EF		     1			and	M,not (1 shl 4)
 A623  B2 00		     1			mov	temp_l,0
 A625  8A 34		     2			mov	temp_h,ds:[PC80]
 A627  46		     2			inc	PC80
 A628  FF E2		     2			jmp	temp
				CB	0a7H
 = 00A8			     1		op2	= 0a7H + 1
						RES	4,A
 A720  24 EF		     1			and	A,not (1 shl 4)
 A722  B2 00		     1			mov	temp_l,0
 A724  8A 34		     2			mov	temp_h,ds:[PC80]
 A726  46		     2			inc	PC80
 A727  FF E2		     2			jmp	temp

				CB	0a8H
 = 00A9			     1		op2	= 0a8H + 1
						RES	5,B
 A820  80 E5 DF		     1			and	B,not (1 shl 5)
 A823  B2 00		     1			mov	temp_l,0
 A825  8A 34		     2			mov	temp_h,ds:[PC80]
 A827  46		     2			inc	PC80
 A828  FF E2		     2			jmp	temp
				CB	0a9H
 = 00AA			     1		op2	= 0a9H + 1
						RES	5,C_reg
 A920  80 E1 DF		     1			and	C_reg,not (1 shl 5)
 A923  B2 00		     1			mov	temp_l,0
 A925  8A 34		     2			mov	temp_h,ds:[PC80]
 A927  46		     2			inc	PC80
 A928  FF E2		     2			jmp	temp
				CB	0aaH
 = 00AB			     1		op2	= 0aaH + 1
						RES	5,D
 AA20  8B D5		     1			mov	temp,save_temp
 AA22  80 E6 DF		     1			and	D,not (1 shl 5)
 AA25  8B EA		     1			mov	save_temp,temp
 AA27  B2 00		     1			mov	temp_l,0
 AA29  8A 34		     2			mov	temp_h,ds:[PC80]
 AA2B  46		     2			inc	PC80
 AA2C  FF E2		     2			jmp	temp
				CB	0abH
 = 00AC			     1		op2	= 0abH + 1
						RES	5,E
 AB20  8B D5		     1			mov	temp,save_temp
 AB22  80 E2 DF		     1			and	E,not (1 shl 5)
 AB25  8B EA		     1			mov	save_temp,temp
 AB27  B2 00		     1			mov	temp_l,0
 AB29  8A 34		     2			mov	temp_h,ds:[PC80]
 AB2B  46		     2			inc	PC80
 AB2C  FF E2		     2			jmp	temp
				CB	0acH
 = 00AD			     1		op2	= 0acH + 1
						RES	5,H
 AC20  80 E7 DF		     1			and	H,not (1 shl 5)
 AC23  B2 00		     1			mov	temp_l,0
 AC25  8A 34		     2			mov	temp_h,ds:[PC80]
 AC27  46		     2			inc	PC80
 AC28  FF E2		     2			jmp	temp
				CB	0adH
 = 00AE			     1		op2	= 0adH + 1
						RES	5,L
 AD20  80 E3 DF		     1			and	L,not (1 shl 5)
 AD23  B2 00		     1			mov	temp_l,0
 AD25  8A 34		     2			mov	temp_h,ds:[PC80]
 AD27  46		     2			inc	PC80
 AD28  FF E2		     2			jmp	temp
				CB	0aeH
 = 00AF			     1		op2	= 0aeH + 1
						RES	5,M
 AE20  80 27 DF		     1			and	M,not (1 shl 5)
 AE23  B2 00		     1			mov	temp_l,0
 AE25  8A 34		     2			mov	temp_h,ds:[PC80]
 AE27  46		     2			inc	PC80
 AE28  FF E2		     2			jmp	temp
				CB	0afH
 = 00B0			     1		op2	= 0afH + 1
						RES	5,A
 AF20  24 DF		     1			and	A,not (1 shl 5)
 AF22  B2 00		     1			mov	temp_l,0
 AF24  8A 34		     2			mov	temp_h,ds:[PC80]
 AF26  46		     2			inc	PC80
 AF27  FF E2		     2			jmp	temp

				CB	0b0H
 = 00B1			     1		op2	= 0b0H + 1
						RES	6,B
 B020  80 E5 BF		     1			and	B,not (1 shl 6)
 B023  B2 00		     1			mov	temp_l,0
 B025  8A 34		     2			mov	temp_h,ds:[PC80]
 B027  46		     2			inc	PC80
 B028  FF E2		     2			jmp	temp
				CB	0b1H
 = 00B2			     1		op2	= 0b1H + 1
						RES	6,C_reg
 B120  80 E1 BF		     1			and	C_reg,not (1 shl 6)
 B123  B2 00		     1			mov	temp_l,0
 B125  8A 34		     2			mov	temp_h,ds:[PC80]
 B127  46		     2			inc	PC80
 B128  FF E2		     2			jmp	temp
				CB	0b2H
 = 00B3			     1		op2	= 0b2H + 1
						RES	6,D
 B220  8B D5		     1			mov	temp,save_temp
 B222  80 E6 BF		     1			and	D,not (1 shl 6)
 B225  8B EA		     1			mov	save_temp,temp
 B227  B2 00		     1			mov	temp_l,0
 B229  8A 34		     2			mov	temp_h,ds:[PC80]
 B22B  46		     2			inc	PC80
 B22C  FF E2		     2			jmp	temp
				CB	0b3H
 = 00B4			     1		op2	= 0b3H + 1
						RES	6,E
 B320  8B D5		     1			mov	temp,save_temp
 B322  80 E2 BF		     1			and	E,not (1 shl 6)
 B325  8B EA		     1			mov	save_temp,temp
 B327  B2 00		     1			mov	temp_l,0
 B329  8A 34		     2			mov	temp_h,ds:[PC80]
 B32B  46		     2			inc	PC80
 B32C  FF E2		     2			jmp	temp
				CB	0b4H
 = 00B5			     1		op2	= 0b4H + 1
						RES	6,H
 B420  80 E7 BF		     1			and	H,not (1 shl 6)
 B423  B2 00		     1			mov	temp_l,0
 B425  8A 34		     2			mov	temp_h,ds:[PC80]
 B427  46		     2			inc	PC80
 B428  FF E2		     2			jmp	temp
				CB	0b5H
 = 00B6			     1		op2	= 0b5H + 1
						RES	6,L
 B520  80 E3 BF		     1			and	L,not (1 shl 6)
 B523  B2 00		     1			mov	temp_l,0
 B525  8A 34		     2			mov	temp_h,ds:[PC80]
 B527  46		     2			inc	PC80
 B528  FF E2		     2			jmp	temp
				CB	0b6H
 = 00B7			     1		op2	= 0b6H + 1
						RES	6,M
 B620  80 27 BF		     1			and	M,not (1 shl 6)
 B623  B2 00		     1			mov	temp_l,0
 B625  8A 34		     2			mov	temp_h,ds:[PC80]
 B627  46		     2			inc	PC80
 B628  FF E2		     2			jmp	temp
				CB	0b7H
 = 00B8			     1		op2	= 0b7H + 1
						RES	6,A
 B720  24 BF		     1			and	A,not (1 shl 6)
 B722  B2 00		     1			mov	temp_l,0
 B724  8A 34		     2			mov	temp_h,ds:[PC80]
 B726  46		     2			inc	PC80
 B727  FF E2		     2			jmp	temp

				CB	0b8H
 = 00B9			     1		op2	= 0b8H + 1
						RES	7,B
 B820  80 E5 7F		     1			and	B,not (1 shl 7)
 B823  B2 00		     1			mov	temp_l,0
 B825  8A 34		     2			mov	temp_h,ds:[PC80]
 B827  46		     2			inc	PC80
 B828  FF E2		     2			jmp	temp
				CB	0b9H
 = 00BA			     1		op2	= 0b9H + 1
						RES	7,C_reg
 B920  80 E1 7F		     1			and	C_reg,not (1 shl 7)
 B923  B2 00		     1			mov	temp_l,0
 B925  8A 34		     2			mov	temp_h,ds:[PC80]
 B927  46		     2			inc	PC80
 B928  FF E2		     2			jmp	temp
				CB	0baH
 = 00BB			     1		op2	= 0baH + 1
						RES	7,D
 BA20  8B D5		     1			mov	temp,save_temp
 BA22  80 E6 7F		     1			and	D,not (1 shl 7)
 BA25  8B EA		     1			mov	save_temp,temp
 BA27  B2 00		     1			mov	temp_l,0
 BA29  8A 34		     2			mov	temp_h,ds:[PC80]
 BA2B  46		     2			inc	PC80
 BA2C  FF E2		     2			jmp	temp
				CB	0bbH
 = 00BC			     1		op2	= 0bbH + 1
						RES	7,E
 BB20  8B D5		     1			mov	temp,save_temp
 BB22  80 E2 7F		     1			and	E,not (1 shl 7)
 BB25  8B EA		     1			mov	save_temp,temp
 BB27  B2 00		     1			mov	temp_l,0
 BB29  8A 34		     2			mov	temp_h,ds:[PC80]
 BB2B  46		     2			inc	PC80
 BB2C  FF E2		     2			jmp	temp
				CB	0bcH
 = 00BD			     1		op2	= 0bcH + 1
						RES	7,H
 BC20  80 E7 7F		     1			and	H,not (1 shl 7)
 BC23  B2 00		     1			mov	temp_l,0
 BC25  8A 34		     2			mov	temp_h,ds:[PC80]
 BC27  46		     2			inc	PC80
 BC28  FF E2		     2			jmp	temp
				CB	0bdH
 = 00BE			     1		op2	= 0bdH + 1
						RES	7,L
 BD20  80 E3 7F		     1			and	L,not (1 shl 7)
 BD23  B2 00		     1			mov	temp_l,0
 BD25  8A 34		     2			mov	temp_h,ds:[PC80]
 BD27  46		     2			inc	PC80
 BD28  FF E2		     2			jmp	temp
				CB	0beH
 = 00BF			     1		op2	= 0beH + 1
						RES	7,M
 BE20  80 27 7F		     1			and	M,not (1 shl 7)
 BE23  B2 00		     1			mov	temp_l,0
 BE25  8A 34		     2			mov	temp_h,ds:[PC80]
 BE27  46		     2			inc	PC80
 BE28  FF E2		     2			jmp	temp
				CB	0bfH
 = 00C0			     1		op2	= 0bfH + 1
						RES	7,A
 BF20  24 7F		     1			and	A,not (1 shl 7)
 BF22  B2 00		     1			mov	temp_l,0
 BF24  8A 34		     2			mov	temp_h,ds:[PC80]
 BF26  46		     2			inc	PC80
 BF27  FF E2		     2			jmp	temp
				;--------------------------------------
				CB	0c0H
 = 00C1			     1		op2	= 0c0H + 1
						SET	0,B
 C020  80 CD 01		     1			or	B,1 shl 0
 C023  B2 00		     1			mov	temp_l,0
 C025  8A 34		     2			mov	temp_h,ds:[PC80]
 C027  46		     2			inc	PC80
 C028  FF E2		     2			jmp	temp
				CB	0c1H
 = 00C2			     1		op2	= 0c1H + 1
						SET	0,C_reg
 C120  80 C9 01		     1			or	C_reg,1 shl 0
 C123  B2 00		     1			mov	temp_l,0
 C125  8A 34		     2			mov	temp_h,ds:[PC80]
 C127  46		     2			inc	PC80
 C128  FF E2		     2			jmp	temp
				CB	0c2H
 = 00C3			     1		op2	= 0c2H + 1
						SET	0,D
 C220  8B D5		     1			mov	temp,save_temp
 C222  80 CE 01		     1			or	D,1 shl 0
 C225  8B EA		     1			mov	save_temp,temp
 C227  B2 00		     1			mov	temp_l,0
 C229  8A 34		     2			mov	temp_h,ds:[PC80]
 C22B  46		     2			inc	PC80
 C22C  FF E2		     2			jmp	temp
				CB	0c3H
 = 00C4			     1		op2	= 0c3H + 1
						SET	0,E
 C320  8B D5		     1			mov	temp,save_temp
 C322  80 CA 01		     1			or	E,1 shl 0
 C325  8B EA		     1			mov	save_temp,temp
 C327  B2 00		     1			mov	temp_l,0
 C329  8A 34		     2			mov	temp_h,ds:[PC80]
 C32B  46		     2			inc	PC80
 C32C  FF E2		     2			jmp	temp
				CB	0c4H
 = 00C5			     1		op2	= 0c4H + 1
						SET	0,H
 C420  80 CF 01		     1			or	H,1 shl 0
 C423  B2 00		     1			mov	temp_l,0
 C425  8A 34		     2			mov	temp_h,ds:[PC80]
 C427  46		     2			inc	PC80
 C428  FF E2		     2			jmp	temp
				CB	0c5H
 = 00C6			     1		op2	= 0c5H + 1
						SET	0,L
 C520  80 CB 01		     1			or	L,1 shl 0
 C523  B2 00		     1			mov	temp_l,0
 C525  8A 34		     2			mov	temp_h,ds:[PC80]
 C527  46		     2			inc	PC80
 C528  FF E2		     2			jmp	temp
				CB	0c6H
 = 00C7			     1		op2	= 0c6H + 1
						SET	0,M
 C620  80 0F 01		     1			or	M,1 shl 0
 C623  B2 00		     1			mov	temp_l,0
 C625  8A 34		     2			mov	temp_h,ds:[PC80]
 C627  46		     2			inc	PC80
 C628  FF E2		     2			jmp	temp
				CB	0c7H
 = 00C8			     1		op2	= 0c7H + 1
						SET	0,A
 C720  0C 01		     1			or	A,1 shl 0
 C722  B2 00		     1			mov	temp_l,0
 C724  8A 34		     2			mov	temp_h,ds:[PC80]
 C726  46		     2			inc	PC80
 C727  FF E2		     2			jmp	temp

				CB	0c8H
 = 00C9			     1		op2	= 0c8H + 1
						SET	1,B
 C820  80 CD 02		     1			or	B,1 shl 1
 C823  B2 00		     1			mov	temp_l,0
 C825  8A 34		     2			mov	temp_h,ds:[PC80]
 C827  46		     2			inc	PC80
 C828  FF E2		     2			jmp	temp
				CB	0c9H
 = 00CA			     1		op2	= 0c9H + 1
						SET	1,C_reg
 C920  80 C9 02		     1			or	C_reg,1 shl 1
 C923  B2 00		     1			mov	temp_l,0
 C925  8A 34		     2			mov	temp_h,ds:[PC80]
 C927  46		     2			inc	PC80
 C928  FF E2		     2			jmp	temp
				CB	0caH
 = 00CB			     1		op2	= 0caH + 1
						SET	1,D
 CA20  8B D5		     1			mov	temp,save_temp
 CA22  80 CE 02		     1			or	D,1 shl 1
 CA25  8B EA		     1			mov	save_temp,temp
 CA27  B2 00		     1			mov	temp_l,0
 CA29  8A 34		     2			mov	temp_h,ds:[PC80]
 CA2B  46		     2			inc	PC80
 CA2C  FF E2		     2			jmp	temp
				CB	0CBH
 = 00CC			     1		op2	= 0CBH + 1
						SET	1,E
 CB20  8B D5		     1			mov	temp,save_temp
 CB22  80 CA 02		     1			or	E,1 shl 1
 CB25  8B EA		     1			mov	save_temp,temp
 CB27  B2 00		     1			mov	temp_l,0
 CB29  8A 34		     2			mov	temp_h,ds:[PC80]
 CB2B  46		     2			inc	PC80
 CB2C  FF E2		     2			jmp	temp
				CB	0ccH
 = 00CD			     1		op2	= 0ccH + 1
						SET	1,H
 CC20  80 CF 02		     1			or	H,1 shl 1
 CC23  B2 00		     1			mov	temp_l,0
 CC25  8A 34		     2			mov	temp_h,ds:[PC80]
 CC27  46		     2			inc	PC80
 CC28  FF E2		     2			jmp	temp
				CB	0cdH
 = 00CE			     1		op2	= 0cdH + 1
						SET	1,L
 CD20  80 CB 02		     1			or	L,1 shl 1
 CD23  B2 00		     1			mov	temp_l,0
 CD25  8A 34		     2			mov	temp_h,ds:[PC80]
 CD27  46		     2			inc	PC80
 CD28  FF E2		     2			jmp	temp
				CB	0ceH
 = 00CF			     1		op2	= 0ceH + 1
						SET	1,M
 CE20  80 0F 02		     1			or	M,1 shl 1
 CE23  B2 00		     1			mov	temp_l,0
 CE25  8A 34		     2			mov	temp_h,ds:[PC80]
 CE27  46		     2			inc	PC80
 CE28  FF E2		     2			jmp	temp
				CB	0cfH
 = 00D0			     1		op2	= 0cfH + 1
						SET	1,A
 CF20  0C 02		     1			or	A,1 shl 1
 CF22  B2 00		     1			mov	temp_l,0
 CF24  8A 34		     2			mov	temp_h,ds:[PC80]
 CF26  46		     2			inc	PC80
 CF27  FF E2		     2			jmp	temp

				CB	0d0H
 = 00D1			     1		op2	= 0d0H + 1
						SET	2,B
 D020  80 CD 04		     1			or	B,1 shl 2
 D023  B2 00		     1			mov	temp_l,0
 D025  8A 34		     2			mov	temp_h,ds:[PC80]
 D027  46		     2			inc	PC80
 D028  FF E2		     2			jmp	temp
				CB	0d1H
 = 00D2			     1		op2	= 0d1H + 1
						SET	2,C_reg
 D120  80 C9 04		     1			or	C_reg,1 shl 2
 D123  B2 00		     1			mov	temp_l,0
 D125  8A 34		     2			mov	temp_h,ds:[PC80]
 D127  46		     2			inc	PC80
 D128  FF E2		     2			jmp	temp
				CB	0d2H
 = 00D3			     1		op2	= 0d2H + 1
						SET	2,D
 D220  8B D5		     1			mov	temp,save_temp
 D222  80 CE 04		     1			or	D,1 shl 2
 D225  8B EA		     1			mov	save_temp,temp
 D227  B2 00		     1			mov	temp_l,0
 D229  8A 34		     2			mov	temp_h,ds:[PC80]
 D22B  46		     2			inc	PC80
 D22C  FF E2		     2			jmp	temp
				CB	0d3H
 = 00D4			     1		op2	= 0d3H + 1
						SET	2,E
 D320  8B D5		     1			mov	temp,save_temp
 D322  80 CA 04		     1			or	E,1 shl 2
 D325  8B EA		     1			mov	save_temp,temp
 D327  B2 00		     1			mov	temp_l,0
 D329  8A 34		     2			mov	temp_h,ds:[PC80]
 D32B  46		     2			inc	PC80
 D32C  FF E2		     2			jmp	temp
				CB	0d4H
 = 00D5			     1		op2	= 0d4H + 1
						SET	2,H
 D420  80 CF 04		     1			or	H,1 shl 2
 D423  B2 00		     1			mov	temp_l,0
 D425  8A 34		     2			mov	temp_h,ds:[PC80]
 D427  46		     2			inc	PC80
 D428  FF E2		     2			jmp	temp
				CB	0d5H
 = 00D6			     1		op2	= 0d5H + 1
						SET	2,L
 D520  80 CB 04		     1			or	L,1 shl 2
 D523  B2 00		     1			mov	temp_l,0
 D525  8A 34		     2			mov	temp_h,ds:[PC80]
 D527  46		     2			inc	PC80
 D528  FF E2		     2			jmp	temp
				CB	0d6H
 = 00D7			     1		op2	= 0d6H + 1
						SET	2,M
 D620  80 0F 04		     1			or	M,1 shl 2
 D623  B2 00		     1			mov	temp_l,0
 D625  8A 34		     2			mov	temp_h,ds:[PC80]
 D627  46		     2			inc	PC80
 D628  FF E2		     2			jmp	temp
				CB	0d7H
 = 00D8			     1		op2	= 0d7H + 1
						SET	2,A
 D720  0C 04		     1			or	A,1 shl 2
 D722  B2 00		     1			mov	temp_l,0
 D724  8A 34		     2			mov	temp_h,ds:[PC80]
 D726  46		     2			inc	PC80
 D727  FF E2		     2			jmp	temp

				CB	0d8H
 = 00D9			     1		op2	= 0d8H + 1
						SET	3,B
 D820  80 CD 08		     1			or	B,1 shl 3
 D823  B2 00		     1			mov	temp_l,0
 D825  8A 34		     2			mov	temp_h,ds:[PC80]
 D827  46		     2			inc	PC80
 D828  FF E2		     2			jmp	temp
				CB	0d9H
 = 00DA			     1		op2	= 0d9H + 1
						SET	3,C_reg
 D920  80 C9 08		     1			or	C_reg,1 shl 3
 D923  B2 00		     1			mov	temp_l,0
 D925  8A 34		     2			mov	temp_h,ds:[PC80]
 D927  46		     2			inc	PC80
 D928  FF E2		     2			jmp	temp
				CB	0daH
 = 00DB			     1		op2	= 0daH + 1
						SET	3,D
 DA20  8B D5		     1			mov	temp,save_temp
 DA22  80 CE 08		     1			or	D,1 shl 3
 DA25  8B EA		     1			mov	save_temp,temp
 DA27  B2 00		     1			mov	temp_l,0
 DA29  8A 34		     2			mov	temp_h,ds:[PC80]
 DA2B  46		     2			inc	PC80
 DA2C  FF E2		     2			jmp	temp
				CB	0dbH
 = 00DC			     1		op2	= 0dbH + 1
						SET	3,E
 DB20  8B D5		     1			mov	temp,save_temp
 DB22  80 CA 08		     1			or	E,1 shl 3
 DB25  8B EA		     1			mov	save_temp,temp
 DB27  B2 00		     1			mov	temp_l,0
 DB29  8A 34		     2			mov	temp_h,ds:[PC80]
 DB2B  46		     2			inc	PC80
 DB2C  FF E2		     2			jmp	temp
				CB	0dcH
 = 00DD			     1		op2	= 0dcH + 1
						SET	3,H
 DC20  80 CF 08		     1			or	H,1 shl 3
 DC23  B2 00		     1			mov	temp_l,0
 DC25  8A 34		     2			mov	temp_h,ds:[PC80]
 DC27  46		     2			inc	PC80
 DC28  FF E2		     2			jmp	temp
				CB	0ddH
 = 00DE			     1		op2	= 0ddH + 1
						SET	3,L
 DD20  80 CB 08		     1			or	L,1 shl 3
 DD23  B2 00		     1			mov	temp_l,0
 DD25  8A 34		     2			mov	temp_h,ds:[PC80]
 DD27  46		     2			inc	PC80
 DD28  FF E2		     2			jmp	temp
				CB	0deH
 = 00DF			     1		op2	= 0deH + 1
						SET	3,M
 DE20  80 0F 08		     1			or	M,1 shl 3
 DE23  B2 00		     1			mov	temp_l,0
 DE25  8A 34		     2			mov	temp_h,ds:[PC80]
 DE27  46		     2			inc	PC80
 DE28  FF E2		     2			jmp	temp
				CB	0dfH
 = 00E0			     1		op2	= 0dfH + 1
						SET	3,A
 DF20  0C 08		     1			or	A,1 shl 3
 DF22  B2 00		     1			mov	temp_l,0
 DF24  8A 34		     2			mov	temp_h,ds:[PC80]
 DF26  46		     2			inc	PC80
 DF27  FF E2		     2			jmp	temp

				CB	0e0H
 = 00E1			     1		op2	= 0e0H + 1
						SET	4,B
 E020  80 CD 10		     1			or	B,1 shl 4
 E023  B2 00		     1			mov	temp_l,0
 E025  8A 34		     2			mov	temp_h,ds:[PC80]
 E027  46		     2			inc	PC80
 E028  FF E2		     2			jmp	temp
				CB	0e1H
 = 00E2			     1		op2	= 0e1H + 1
						SET	4,C_reg
 E120  80 C9 10		     1			or	C_reg,1 shl 4
 E123  B2 00		     1			mov	temp_l,0
 E125  8A 34		     2			mov	temp_h,ds:[PC80]
 E127  46		     2			inc	PC80
 E128  FF E2		     2			jmp	temp
				CB	0e2H
 = 00E3			     1		op2	= 0e2H + 1
						SET	4,D
 E220  8B D5		     1			mov	temp,save_temp
 E222  80 CE 10		     1			or	D,1 shl 4
 E225  8B EA		     1			mov	save_temp,temp
 E227  B2 00		     1			mov	temp_l,0
 E229  8A 34		     2			mov	temp_h,ds:[PC80]
 E22B  46		     2			inc	PC80
 E22C  FF E2		     2			jmp	temp
				CB	0e3H
 = 00E4			     1		op2	= 0e3H + 1
						SET	4,E
 E320  8B D5		     1			mov	temp,save_temp
 E322  80 CA 10		     1			or	E,1 shl 4
 E325  8B EA		     1			mov	save_temp,temp
 E327  B2 00		     1			mov	temp_l,0
 E329  8A 34		     2			mov	temp_h,ds:[PC80]
 E32B  46		     2			inc	PC80
 E32C  FF E2		     2			jmp	temp
				CB	0e4H
 = 00E5			     1		op2	= 0e4H + 1
						SET	4,H
 E420  80 CF 10		     1			or	H,1 shl 4
 E423  B2 00		     1			mov	temp_l,0
 E425  8A 34		     2			mov	temp_h,ds:[PC80]
 E427  46		     2			inc	PC80
 E428  FF E2		     2			jmp	temp
				CB	0e5H
 = 00E6			     1		op2	= 0e5H + 1
						SET	4,L
 E520  80 CB 10		     1			or	L,1 shl 4
 E523  B2 00		     1			mov	temp_l,0
 E525  8A 34		     2			mov	temp_h,ds:[PC80]
 E527  46		     2			inc	PC80
 E528  FF E2		     2			jmp	temp
				CB	0e6H
 = 00E7			     1		op2	= 0e6H + 1
						SET	4,M
 E620  80 0F 10		     1			or	M,1 shl 4
 E623  B2 00		     1			mov	temp_l,0
 E625  8A 34		     2			mov	temp_h,ds:[PC80]
 E627  46		     2			inc	PC80
 E628  FF E2		     2			jmp	temp
				CB	0e7H
 = 00E8			     1		op2	= 0e7H + 1
						SET	4,A
 E720  0C 10		     1			or	A,1 shl 4
 E722  B2 00		     1			mov	temp_l,0
 E724  8A 34		     2			mov	temp_h,ds:[PC80]
 E726  46		     2			inc	PC80
 E727  FF E2		     2			jmp	temp

				CB	0e8H
 = 00E9			     1		op2	= 0e8H + 1
						SET	5,B
 E820  80 CD 20		     1			or	B,1 shl 5
 E823  B2 00		     1			mov	temp_l,0
 E825  8A 34		     2			mov	temp_h,ds:[PC80]
 E827  46		     2			inc	PC80
 E828  FF E2		     2			jmp	temp
				CB	0e9H
 = 00EA			     1		op2	= 0e9H + 1
						SET	5,C_reg
 E920  80 C9 20		     1			or	C_reg,1 shl 5
 E923  B2 00		     1			mov	temp_l,0
 E925  8A 34		     2			mov	temp_h,ds:[PC80]
 E927  46		     2			inc	PC80
 E928  FF E2		     2			jmp	temp
				CB	0eaH
 = 00EB			     1		op2	= 0eaH + 1
						SET	5,D
 EA20  8B D5		     1			mov	temp,save_temp
 EA22  80 CE 20		     1			or	D,1 shl 5
 EA25  8B EA		     1			mov	save_temp,temp
 EA27  B2 00		     1			mov	temp_l,0
 EA29  8A 34		     2			mov	temp_h,ds:[PC80]
 EA2B  46		     2			inc	PC80
 EA2C  FF E2		     2			jmp	temp
				CB	0ebH
 = 00EC			     1		op2	= 0ebH + 1
						SET	5,E
 EB20  8B D5		     1			mov	temp,save_temp
 EB22  80 CA 20		     1			or	E,1 shl 5
 EB25  8B EA		     1			mov	save_temp,temp
 EB27  B2 00		     1			mov	temp_l,0
 EB29  8A 34		     2			mov	temp_h,ds:[PC80]
 EB2B  46		     2			inc	PC80
 EB2C  FF E2		     2			jmp	temp
				CB	0ecH
 = 00ED			     1		op2	= 0ecH + 1
						SET	5,H
 EC20  80 CF 20		     1			or	H,1 shl 5
 EC23  B2 00		     1			mov	temp_l,0
 EC25  8A 34		     2			mov	temp_h,ds:[PC80]
 EC27  46		     2			inc	PC80
 EC28  FF E2		     2			jmp	temp
				CB	0edH
 = 00EE			     1		op2	= 0edH + 1
						SET	5,L
 ED20  80 CB 20		     1			or	L,1 shl 5
 ED23  B2 00		     1			mov	temp_l,0
 ED25  8A 34		     2			mov	temp_h,ds:[PC80]
 ED27  46		     2			inc	PC80
 ED28  FF E2		     2			jmp	temp
				CB	0eeH
 = 00EF			     1		op2	= 0eeH + 1
						SET	5,M
 EE20  80 0F 20		     1			or	M,1 shl 5
 EE23  B2 00		     1			mov	temp_l,0
 EE25  8A 34		     2			mov	temp_h,ds:[PC80]
 EE27  46		     2			inc	PC80
 EE28  FF E2		     2			jmp	temp
				CB	0efH
 = 00F0			     1		op2	= 0efH + 1
						SET	5,A
 EF20  0C 20		     1			or	A,1 shl 5
 EF22  B2 00		     1			mov	temp_l,0
 EF24  8A 34		     2			mov	temp_h,ds:[PC80]
 EF26  46		     2			inc	PC80
 EF27  FF E2		     2			jmp	temp

				CB	0f0H
 = 00F1			     1		op2	= 0f0H + 1
						SET	6,B
 F020  80 CD 40		     1			or	B,1 shl 6
 F023  B2 00		     1			mov	temp_l,0
 F025  8A 34		     2			mov	temp_h,ds:[PC80]
 F027  46		     2			inc	PC80
 F028  FF E2		     2			jmp	temp
				CB	0f1H
 = 00F2			     1		op2	= 0f1H + 1
						SET	6,C_reg
 F120  80 C9 40		     1			or	C_reg,1 shl 6
 F123  B2 00		     1			mov	temp_l,0
 F125  8A 34		     2			mov	temp_h,ds:[PC80]
 F127  46		     2			inc	PC80
 F128  FF E2		     2			jmp	temp
				CB	0f2H
 = 00F3			     1		op2	= 0f2H + 1
						SET	6,D
 F220  8B D5		     1			mov	temp,save_temp
 F222  80 CE 40		     1			or	D,1 shl 6
 F225  8B EA		     1			mov	save_temp,temp
 F227  B2 00		     1			mov	temp_l,0
 F229  8A 34		     2			mov	temp_h,ds:[PC80]
 F22B  46		     2			inc	PC80
 F22C  FF E2		     2			jmp	temp
				CB	0f3H
 = 00F4			     1		op2	= 0f3H + 1
						SET	6,E
 F320  8B D5		     1			mov	temp,save_temp
 F322  80 CA 40		     1			or	E,1 shl 6
 F325  8B EA		     1			mov	save_temp,temp
 F327  B2 00		     1			mov	temp_l,0
 F329  8A 34		     2			mov	temp_h,ds:[PC80]
 F32B  46		     2			inc	PC80
 F32C  FF E2		     2			jmp	temp
				CB	0f4H
 = 00F5			     1		op2	= 0f4H + 1
						SET	6,H
 F420  80 CF 40		     1			or	H,1 shl 6
 F423  B2 00		     1			mov	temp_l,0
 F425  8A 34		     2			mov	temp_h,ds:[PC80]
 F427  46		     2			inc	PC80
 F428  FF E2		     2			jmp	temp
				CB	0f5H
 = 00F6			     1		op2	= 0f5H + 1
						SET	6,L
 F520  80 CB 40		     1			or	L,1 shl 6
 F523  B2 00		     1			mov	temp_l,0
 F525  8A 34		     2			mov	temp_h,ds:[PC80]
 F527  46		     2			inc	PC80
 F528  FF E2		     2			jmp	temp
				CB	0f6H
 = 00F7			     1		op2	= 0f6H + 1
						SET	6,M
 F620  80 0F 40		     1			or	M,1 shl 6
 F623  B2 00		     1			mov	temp_l,0
 F625  8A 34		     2			mov	temp_h,ds:[PC80]
 F627  46		     2			inc	PC80
 F628  FF E2		     2			jmp	temp
				CB	0f7H
 = 00F8			     1		op2	= 0f7H + 1
						SET	6,A
 F720  0C 40		     1			or	A,1 shl 6
 F722  B2 00		     1			mov	temp_l,0
 F724  8A 34		     2			mov	temp_h,ds:[PC80]
 F726  46		     2			inc	PC80
 F727  FF E2		     2			jmp	temp

				CB	0f8H
 = 00F9			     1		op2	= 0f8H + 1
						SET	7,B
 F820  80 CD 80		     1			or	B,1 shl 7
 F823  B2 00		     1			mov	temp_l,0
 F825  8A 34		     2			mov	temp_h,ds:[PC80]
 F827  46		     2			inc	PC80
 F828  FF E2		     2			jmp	temp
				CB	0f9H
 = 00FA			     1		op2	= 0f9H + 1
						SET	7,C_reg
 F920  80 C9 80		     1			or	C_reg,1 shl 7
 F923  B2 00		     1			mov	temp_l,0
 F925  8A 34		     2			mov	temp_h,ds:[PC80]
 F927  46		     2			inc	PC80
 F928  FF E2		     2			jmp	temp
				CB	0faH
 = 00FB			     1		op2	= 0faH + 1
						SET	7,D
 FA20  8B D5		     1			mov	temp,save_temp
 FA22  80 CE 80		     1			or	D,1 shl 7
 FA25  8B EA		     1			mov	save_temp,temp
 FA27  B2 00		     1			mov	temp_l,0
 FA29  8A 34		     2			mov	temp_h,ds:[PC80]
 FA2B  46		     2			inc	PC80
 FA2C  FF E2		     2			jmp	temp
				CB	0fbH
 = 00FC			     1		op2	= 0fbH + 1
						SET	7,E
 FB20  8B D5		     1			mov	temp,save_temp
 FB22  80 CA 80		     1			or	E,1 shl 7
 FB25  8B EA		     1			mov	save_temp,temp
 FB27  B2 00		     1			mov	temp_l,0
 FB29  8A 34		     2			mov	temp_h,ds:[PC80]
 FB2B  46		     2			inc	PC80
 FB2C  FF E2		     2			jmp	temp
				CB	0fcH
 = 00FD			     1		op2	= 0fcH + 1
						SET	7,H
 FC20  80 CF 80		     1			or	H,1 shl 7
 FC23  B2 00		     1			mov	temp_l,0
 FC25  8A 34		     2			mov	temp_h,ds:[PC80]
 FC27  46		     2			inc	PC80
 FC28  FF E2		     2			jmp	temp
				CB	0fdH
 = 00FE			     1		op2	= 0fdH + 1
						SET	7,L
 FD20  80 CB 80		     1			or	L,1 shl 7
 FD23  B2 00		     1			mov	temp_l,0
 FD25  8A 34		     2			mov	temp_h,ds:[PC80]
 FD27  46		     2			inc	PC80
 FD28  FF E2		     2			jmp	temp
				CB	0feH
 = 00FF			     1		op2	= 0feH + 1
						SET	7,M
 FE20  80 0F 80		     1			or	M,1 shl 7
 FE23  B2 00		     1			mov	temp_l,0
 FE25  8A 34		     2			mov	temp_h,ds:[PC80]
 FE27  46		     2			inc	PC80
 FE28  FF E2		     2			jmp	temp
				CB	0ffH
 = 0100			     1		op2	= 0ffH + 1
						SET	7,A
 FF20  0C 80		     1			or	A,1 shl 7
 FF22  B2 00		     1			mov	temp_l,0
 FF24  8A 34		     2			mov	temp_h,ds:[PC80]
 FF26  46		     2			inc	PC80
 FF27  FF E2		     2			jmp	temp

				;================================================
				;=============  bit op width (X+d)  =============
				;================================================

 = 0000				op2	=	0

				CBX	macro	nn
					rept	nn - op2
						org	org_CBX + op2 * 100h
						add	sp,2
						mov	temp,save_temp
						mov	entry_SP,SP80
						mov	ret_reg,code_undef4
						retf
					op2	= op2 + 1
					endm
					op2	= nn + 1
						org	org_CBX + nn * 100h
				endm

				CBX	06H			;RLC (IX+d)
 0040  83 C4 02		     2			add	sp,2
 0043  8B D5		     2			mov	temp,save_temp
 0045  8B EF		     2			mov	entry_SP,SP80
 0047  BF 0006		     2			mov	ret_reg,code_undef4
 004A  CB		     2			retf
 = 0001			     2		op2	= op2 + 1
 0140  83 C4 02		     2			add	sp,2
 0143  8B D5		     2			mov	temp,save_temp
 0145  8B EF		     2			mov	entry_SP,SP80
 0147  BF 0006		     2			mov	ret_reg,code_undef4
 014A  CB		     2			retf
 = 0002			     2		op2	= op2 + 1
 0240  83 C4 02		     2			add	sp,2
 0243  8B D5		     2			mov	temp,save_temp
 0245  8B EF		     2			mov	entry_SP,SP80
 0247  BF 0006		     2			mov	ret_reg,code_undef4
 024A  CB		     2			retf
 = 0003			     2		op2	= op2 + 1
 0340  83 C4 02		     2			add	sp,2
 0343  8B D5		     2			mov	temp,save_temp
 0345  8B EF		     2			mov	entry_SP,SP80
 0347  BF 0006		     2			mov	ret_reg,code_undef4
 034A  CB		     2			retf
 = 0004			     2		op2	= op2 + 1
 0440  83 C4 02		     2			add	sp,2
 0443  8B D5		     2			mov	temp,save_temp
 0445  8B EF		     2			mov	entry_SP,SP80
 0447  BF 0006		     2			mov	ret_reg,code_undef4
 044A  CB		     2			retf
 = 0005			     2		op2	= op2 + 1
 0540  83 C4 02		     2			add	sp,2
 0543  8B D5		     2			mov	temp,save_temp
 0545  8B EF		     2			mov	entry_SP,SP80
 0547  BF 0006		     2			mov	ret_reg,code_undef4
 054A  CB		     2			retf
 = 0006			     2		op2	= op2 + 1
 = 0007			     1		op2	= 06H + 1
 0640  8B D3					mov	temp,bx
 0642  5B					pop	bx
 0643  D0 07					rol	byte ptr ds:[bx],1
 0645  9F					lahf
 0646  8A 1F					mov	bl,byte ptr ds:[bx]
 0648  8A FC					mov	bh,ah
 064A  80 E7 01					and	bh,c_flag
 064D  22 DB					and	bl,bl
 064F  9F					lahf
 0650  80 E4 EC					and	ah,not (h_flag or n_flag or c_flag)
 0653  0A E7					or	ah,bh
 0655  8B DA					mov	bx,temp
 0657  B2 00					mov	temp_l,0
						fetch1
 0659  8A 34		     1			mov	temp_h,ds:[PC80]
 065B  46		     1			inc	PC80
 065C  FF E2		     1			jmp	temp

				CBX	0eH			;RRC (IX+d)
 0740  83 C4 02		     2			add	sp,2
 0743  8B D5		     2			mov	temp,save_temp
 0745  8B EF		     2			mov	entry_SP,SP80
 0747  BF 0006		     2			mov	ret_reg,code_undef4
 074A  CB		     2			retf
 = 0008			     2		op2	= op2 + 1
 0840  83 C4 02		     2			add	sp,2
 0843  8B D5		     2			mov	temp,save_temp
 0845  8B EF		     2			mov	entry_SP,SP80
 0847  BF 0006		     2			mov	ret_reg,code_undef4
 084A  CB		     2			retf
 = 0009			     2		op2	= op2 + 1
 0940  83 C4 02		     2			add	sp,2
 0943  8B D5		     2			mov	temp,save_temp
 0945  8B EF		     2			mov	entry_SP,SP80
 0947  BF 0006		     2			mov	ret_reg,code_undef4
 094A  CB		     2			retf
 = 000A			     2		op2	= op2 + 1
 0A40  83 C4 02		     2			add	sp,2
 0A43  8B D5		     2			mov	temp,save_temp
 0A45  8B EF		     2			mov	entry_SP,SP80
 0A47  BF 0006		     2			mov	ret_reg,code_undef4
 0A4A  CB		     2			retf
 = 000B			     2		op2	= op2 + 1
 0B40  83 C4 02		     2			add	sp,2
 0B43  8B D5		     2			mov	temp,save_temp
 0B45  8B EF		     2			mov	entry_SP,SP80
 0B47  BF 0006		     2			mov	ret_reg,code_undef4
 0B4A  CB		     2			retf
 = 000C			     2		op2	= op2 + 1
 0C40  83 C4 02		     2			add	sp,2
 0C43  8B D5		     2			mov	temp,save_temp
 0C45  8B EF		     2			mov	entry_SP,SP80
 0C47  BF 0006		     2			mov	ret_reg,code_undef4
 0C4A  CB		     2			retf
 = 000D			     2		op2	= op2 + 1
 0D40  83 C4 02		     2			add	sp,2
 0D43  8B D5		     2			mov	temp,save_temp
 0D45  8B EF		     2			mov	entry_SP,SP80
 0D47  BF 0006		     2			mov	ret_reg,code_undef4
 0D4A  CB		     2			retf
 = 000E			     2		op2	= op2 + 1
 = 000F			     1		op2	= 0eH + 1
 0E40  8B D3					mov	temp,bx
 0E42  5B					pop	bx
 0E43  D0 0F					ror	byte ptr ds:[bx],1
 0E45  9F					lahf
 0E46  8A 1F					mov	bl,byte ptr ds:[bx]
 0E48  8A FC					mov	bh,ah
 0E4A  80 E7 01					and	bh,c_flag
 0E4D  22 DB					and	bl,bl
 0E4F  9F					lahf
 0E50  80 E4 EC					and	ah,not (h_flag or n_flag or c_flag)
 0E53  0A E7					or	ah,bh
 0E55  8B DA					mov	bx,temp
 0E57  B2 00					mov	temp_l,0
						fetch1
 0E59  8A 34		     1			mov	temp_h,ds:[PC80]
 0E5B  46		     1			inc	PC80
 0E5C  FF E2		     1			jmp	temp

				CBX	16H			;RL (IX+d)
 0F40  83 C4 02		     2			add	sp,2
 0F43  8B D5		     2			mov	temp,save_temp
 0F45  8B EF		     2			mov	entry_SP,SP80
 0F47  BF 0006		     2			mov	ret_reg,code_undef4
 0F4A  CB		     2			retf
 = 0010			     2		op2	= op2 + 1
 1040  83 C4 02		     2			add	sp,2
 1043  8B D5		     2			mov	temp,save_temp
 1045  8B EF		     2			mov	entry_SP,SP80
 1047  BF 0006		     2			mov	ret_reg,code_undef4
 104A  CB		     2			retf
 = 0011			     2		op2	= op2 + 1
 1140  83 C4 02		     2			add	sp,2
 1143  8B D5		     2			mov	temp,save_temp
 1145  8B EF		     2			mov	entry_SP,SP80
 1147  BF 0006		     2			mov	ret_reg,code_undef4
 114A  CB		     2			retf
 = 0012			     2		op2	= op2 + 1
 1240  83 C4 02		     2			add	sp,2
 1243  8B D5		     2			mov	temp,save_temp
 1245  8B EF		     2			mov	entry_SP,SP80
 1247  BF 0006		     2			mov	ret_reg,code_undef4
 124A  CB		     2			retf
 = 0013			     2		op2	= op2 + 1
 1340  83 C4 02		     2			add	sp,2
 1343  8B D5		     2			mov	temp,save_temp
 1345  8B EF		     2			mov	entry_SP,SP80
 1347  BF 0006		     2			mov	ret_reg,code_undef4
 134A  CB		     2			retf
 = 0014			     2		op2	= op2 + 1
 1440  83 C4 02		     2			add	sp,2
 1443  8B D5		     2			mov	temp,save_temp
 1445  8B EF		     2			mov	entry_SP,SP80
 1447  BF 0006		     2			mov	ret_reg,code_undef4
 144A  CB		     2			retf
 = 0015			     2		op2	= op2 + 1
 1540  83 C4 02		     2			add	sp,2
 1543  8B D5		     2			mov	temp,save_temp
 1545  8B EF		     2			mov	entry_SP,SP80
 1547  BF 0006		     2			mov	ret_reg,code_undef4
 154A  CB		     2			retf
 = 0016			     2		op2	= op2 + 1
 = 0017			     1		op2	= 16H + 1
 1640  8B D3					mov	temp,bx
 1642  5B					pop	bx
 1643  9E					sahf
 1644  D0 17					rcl	byte ptr ds:[bx],1
 1646  9F					lahf
 1647  8A 1F					mov	bl,byte ptr ds:[bx]
 1649  8A FC					mov	bh,ah
 164B  80 E7 01					and	bh,c_flag
 164E  22 DB					and	bl,bl
 1650  9F					lahf
 1651  80 E4 EC					and	ah,not (h_flag or n_flag or c_flag)
 1654  0A E7					or	ah,bh
 1656  8B DA					mov	bx,temp
 1658  B2 00					mov	temp_l,0
						fetch1
 165A  8A 34		     1			mov	temp_h,ds:[PC80]
 165C  46		     1			inc	PC80
 165D  FF E2		     1			jmp	temp

				CBX	1eH			;RR (IX+d)
 1740  83 C4 02		     2			add	sp,2
 1743  8B D5		     2			mov	temp,save_temp
 1745  8B EF		     2			mov	entry_SP,SP80
 1747  BF 0006		     2			mov	ret_reg,code_undef4
 174A  CB		     2			retf
 = 0018			     2		op2	= op2 + 1
 1840  83 C4 02		     2			add	sp,2
 1843  8B D5		     2			mov	temp,save_temp
 1845  8B EF		     2			mov	entry_SP,SP80
 1847  BF 0006		     2			mov	ret_reg,code_undef4
 184A  CB		     2			retf
 = 0019			     2		op2	= op2 + 1
 1940  83 C4 02		     2			add	sp,2
 1943  8B D5		     2			mov	temp,save_temp
 1945  8B EF		     2			mov	entry_SP,SP80
 1947  BF 0006		     2			mov	ret_reg,code_undef4
 194A  CB		     2			retf
 = 001A			     2		op2	= op2 + 1
 1A40  83 C4 02		     2			add	sp,2
 1A43  8B D5		     2			mov	temp,save_temp
 1A45  8B EF		     2			mov	entry_SP,SP80
 1A47  BF 0006		     2			mov	ret_reg,code_undef4
 1A4A  CB		     2			retf
 = 001B			     2		op2	= op2 + 1
 1B40  83 C4 02		     2			add	sp,2
 1B43  8B D5		     2			mov	temp,save_temp
 1B45  8B EF		     2			mov	entry_SP,SP80
 1B47  BF 0006		     2			mov	ret_reg,code_undef4
 1B4A  CB		     2			retf
 = 001C			     2		op2	= op2 + 1
 1C40  83 C4 02		     2			add	sp,2
 1C43  8B D5		     2			mov	temp,save_temp
 1C45  8B EF		     2			mov	entry_SP,SP80
 1C47  BF 0006		     2			mov	ret_reg,code_undef4
 1C4A  CB		     2			retf
 = 001D			     2		op2	= op2 + 1
 1D40  83 C4 02		     2			add	sp,2
 1D43  8B D5		     2			mov	temp,save_temp
 1D45  8B EF		     2			mov	entry_SP,SP80
 1D47  BF 0006		     2			mov	ret_reg,code_undef4
 1D4A  CB		     2			retf
 = 001E			     2		op2	= op2 + 1
 = 001F			     1		op2	= 1eH + 1
 1E40  8B D3					mov	temp,bx
 1E42  5B					pop	bx
 1E43  9E					sahf
 1E44  D0 1F					rcr	byte ptr ds:[bx],1
 1E46  9F					lahf
 1E47  8A 1F					mov	bl,byte ptr ds:[bx]
 1E49  8A FC					mov	bh,ah
 1E4B  80 E7 01					and	bh,c_flag
 1E4E  22 DB					and	bl,bl
 1E50  9F					lahf
 1E51  80 E4 EC					and	ah,not (h_flag or n_flag or c_flag)
 1E54  0A E7					or	ah,bh
 1E56  8B DA					mov	bx,temp
 1E58  B2 00					mov	temp_l,0
						fetch1
 1E5A  8A 34		     1			mov	temp_h,ds:[PC80]
 1E5C  46		     1			inc	PC80
 1E5D  FF E2		     1			jmp	temp

				CBX	26H			;SLA (IX+d)
 1F40  83 C4 02		     2			add	sp,2
 1F43  8B D5		     2			mov	temp,save_temp
 1F45  8B EF		     2			mov	entry_SP,SP80
 1F47  BF 0006		     2			mov	ret_reg,code_undef4
 1F4A  CB		     2			retf
 = 0020			     2		op2	= op2 + 1
 2040  83 C4 02		     2			add	sp,2
 2043  8B D5		     2			mov	temp,save_temp
 2045  8B EF		     2			mov	entry_SP,SP80
 2047  BF 0006		     2			mov	ret_reg,code_undef4
 204A  CB		     2			retf
 = 0021			     2		op2	= op2 + 1
 2140  83 C4 02		     2			add	sp,2
 2143  8B D5		     2			mov	temp,save_temp
 2145  8B EF		     2			mov	entry_SP,SP80
 2147  BF 0006		     2			mov	ret_reg,code_undef4
 214A  CB		     2			retf
 = 0022			     2		op2	= op2 + 1
 2240  83 C4 02		     2			add	sp,2
 2243  8B D5		     2			mov	temp,save_temp
 2245  8B EF		     2			mov	entry_SP,SP80
 2247  BF 0006		     2			mov	ret_reg,code_undef4
 224A  CB		     2			retf
 = 0023			     2		op2	= op2 + 1
 2340  83 C4 02		     2			add	sp,2
 2343  8B D5		     2			mov	temp,save_temp
 2345  8B EF		     2			mov	entry_SP,SP80
 2347  BF 0006		     2			mov	ret_reg,code_undef4
 234A  CB		     2			retf
 = 0024			     2		op2	= op2 + 1
 2440  83 C4 02		     2			add	sp,2
 2443  8B D5		     2			mov	temp,save_temp
 2445  8B EF		     2			mov	entry_SP,SP80
 2447  BF 0006		     2			mov	ret_reg,code_undef4
 244A  CB		     2			retf
 = 0025			     2		op2	= op2 + 1
 2540  83 C4 02		     2			add	sp,2
 2543  8B D5		     2			mov	temp,save_temp
 2545  8B EF		     2			mov	entry_SP,SP80
 2547  BF 0006		     2			mov	ret_reg,code_undef4
 254A  CB		     2			retf
 = 0026			     2		op2	= op2 + 1
 = 0027			     1		op2	= 26H + 1
 2640  8B D3					mov	temp,bx
 2642  5B					pop	bx
 2643  D0 27					sal	byte ptr ds:[bx],1
 2645  8B DA					mov	bx,temp
 2647  9F					lahf
 2648  80 E4 ED					and	ah,not (h_flag or n_flag)
 264B  B2 00					mov	temp_l,0
						fetch1
 264D  8A 34		     1			mov	temp_h,ds:[PC80]
 264F  46		     1			inc	PC80
 2650  FF E2		     1			jmp	temp

				CBX	2eH			;SRA (IX+d)
 2740  83 C4 02		     2			add	sp,2
 2743  8B D5		     2			mov	temp,save_temp
 2745  8B EF		     2			mov	entry_SP,SP80
 2747  BF 0006		     2			mov	ret_reg,code_undef4
 274A  CB		     2			retf
 = 0028			     2		op2	= op2 + 1
 2840  83 C4 02		     2			add	sp,2
 2843  8B D5		     2			mov	temp,save_temp
 2845  8B EF		     2			mov	entry_SP,SP80
 2847  BF 0006		     2			mov	ret_reg,code_undef4
 284A  CB		     2			retf
 = 0029			     2		op2	= op2 + 1
 2940  83 C4 02		     2			add	sp,2
 2943  8B D5		     2			mov	temp,save_temp
 2945  8B EF		     2			mov	entry_SP,SP80
 2947  BF 0006		     2			mov	ret_reg,code_undef4
 294A  CB		     2			retf
 = 002A			     2		op2	= op2 + 1
 2A40  83 C4 02		     2			add	sp,2
 2A43  8B D5		     2			mov	temp,save_temp
 2A45  8B EF		     2			mov	entry_SP,SP80
 2A47  BF 0006		     2			mov	ret_reg,code_undef4
 2A4A  CB		     2			retf
 = 002B			     2		op2	= op2 + 1
 2B40  83 C4 02		     2			add	sp,2
 2B43  8B D5		     2			mov	temp,save_temp
 2B45  8B EF		     2			mov	entry_SP,SP80
 2B47  BF 0006		     2			mov	ret_reg,code_undef4
 2B4A  CB		     2			retf
 = 002C			     2		op2	= op2 + 1
 2C40  83 C4 02		     2			add	sp,2
 2C43  8B D5		     2			mov	temp,save_temp
 2C45  8B EF		     2			mov	entry_SP,SP80
 2C47  BF 0006		     2			mov	ret_reg,code_undef4
 2C4A  CB		     2			retf
 = 002D			     2		op2	= op2 + 1
 2D40  83 C4 02		     2			add	sp,2
 2D43  8B D5		     2			mov	temp,save_temp
 2D45  8B EF		     2			mov	entry_SP,SP80
 2D47  BF 0006		     2			mov	ret_reg,code_undef4
 2D4A  CB		     2			retf
 = 002E			     2		op2	= op2 + 1
 = 002F			     1		op2	= 2eH + 1
 2E40  8B D3					mov	temp,bx
 2E42  5B					pop	bx
 2E43  D0 3F					sar	byte ptr ds:[bx],1
 2E45  8B DA					mov	bx,temp
 2E47  9F					lahf
 2E48  80 E4 ED					and	ah,not (h_flag or n_flag)
 2E4B  B2 00					mov	temp_l,0
						fetch1
 2E4D  8A 34		     1			mov	temp_h,ds:[PC80]
 2E4F  46		     1			inc	PC80
 2E50  FF E2		     1			jmp	temp

				CBX	36H			;SLL (IX+d)
 2F40  83 C4 02		     2			add	sp,2
 2F43  8B D5		     2			mov	temp,save_temp
 2F45  8B EF		     2			mov	entry_SP,SP80
 2F47  BF 0006		     2			mov	ret_reg,code_undef4
 2F4A  CB		     2			retf
 = 0030			     2		op2	= op2 + 1
 3040  83 C4 02		     2			add	sp,2
 3043  8B D5		     2			mov	temp,save_temp
 3045  8B EF		     2			mov	entry_SP,SP80
 3047  BF 0006		     2			mov	ret_reg,code_undef4
 304A  CB		     2			retf
 = 0031			     2		op2	= op2 + 1
 3140  83 C4 02		     2			add	sp,2
 3143  8B D5		     2			mov	temp,save_temp
 3145  8B EF		     2			mov	entry_SP,SP80
 3147  BF 0006		     2			mov	ret_reg,code_undef4
 314A  CB		     2			retf
 = 0032			     2		op2	= op2 + 1
 3240  83 C4 02		     2			add	sp,2
 3243  8B D5		     2			mov	temp,save_temp
 3245  8B EF		     2			mov	entry_SP,SP80
 3247  BF 0006		     2			mov	ret_reg,code_undef4
 324A  CB		     2			retf
 = 0033			     2		op2	= op2 + 1
 3340  83 C4 02		     2			add	sp,2
 3343  8B D5		     2			mov	temp,save_temp
 3345  8B EF		     2			mov	entry_SP,SP80
 3347  BF 0006		     2			mov	ret_reg,code_undef4
 334A  CB		     2			retf
 = 0034			     2		op2	= op2 + 1
 3440  83 C4 02		     2			add	sp,2
 3443  8B D5		     2			mov	temp,save_temp
 3445  8B EF		     2			mov	entry_SP,SP80
 3447  BF 0006		     2			mov	ret_reg,code_undef4
 344A  CB		     2			retf
 = 0035			     2		op2	= op2 + 1
 3540  83 C4 02		     2			add	sp,2
 3543  8B D5		     2			mov	temp,save_temp
 3545  8B EF		     2			mov	entry_SP,SP80
 3547  BF 0006		     2			mov	ret_reg,code_undef4
 354A  CB		     2			retf
 = 0036			     2		op2	= op2 + 1
 = 0037			     1		op2	= 36H + 1
 3640  8B D3					mov	temp,bx
 3642  5B					pop	bx
 3643  F9					stc
 3644  D0 17					rcl	byte ptr ds:[bx],1
 3646  9F					lahf
 3647  8A 1F					mov	bl,byte ptr ds:[bx]
 3649  8A FC					mov	bh,ah
 364B  80 E7 01					and	bh,c_flag
 364E  22 DB					and	bl,bl
 3650  9F					lahf
 3651  80 E4 EC					and	ah,not (h_flag or n_flag or c_flag)
 3654  0A E7					or	ah,bh
 3656  8B DA					mov	bx,temp
 3658  B2 00					mov	temp_l,0
						fetch1
 365A  8A 34		     1			mov	temp_h,ds:[PC80]
 365C  46		     1			inc	PC80
 365D  FF E2		     1			jmp	temp

				CBX	3eH			;SRL (IX+d)
 3740  83 C4 02		     2			add	sp,2
 3743  8B D5		     2			mov	temp,save_temp
 3745  8B EF		     2			mov	entry_SP,SP80
 3747  BF 0006		     2			mov	ret_reg,code_undef4
 374A  CB		     2			retf
 = 0038			     2		op2	= op2 + 1
 3840  83 C4 02		     2			add	sp,2
 3843  8B D5		     2			mov	temp,save_temp
 3845  8B EF		     2			mov	entry_SP,SP80
 3847  BF 0006		     2			mov	ret_reg,code_undef4
 384A  CB		     2			retf
 = 0039			     2		op2	= op2 + 1
 3940  83 C4 02		     2			add	sp,2
 3943  8B D5		     2			mov	temp,save_temp
 3945  8B EF		     2			mov	entry_SP,SP80
 3947  BF 0006		     2			mov	ret_reg,code_undef4
 394A  CB		     2			retf
 = 003A			     2		op2	= op2 + 1
 3A40  83 C4 02		     2			add	sp,2
 3A43  8B D5		     2			mov	temp,save_temp
 3A45  8B EF		     2			mov	entry_SP,SP80
 3A47  BF 0006		     2			mov	ret_reg,code_undef4
 3A4A  CB		     2			retf
 = 003B			     2		op2	= op2 + 1
 3B40  83 C4 02		     2			add	sp,2
 3B43  8B D5		     2			mov	temp,save_temp
 3B45  8B EF		     2			mov	entry_SP,SP80
 3B47  BF 0006		     2			mov	ret_reg,code_undef4
 3B4A  CB		     2			retf
 = 003C			     2		op2	= op2 + 1
 3C40  83 C4 02		     2			add	sp,2
 3C43  8B D5		     2			mov	temp,save_temp
 3C45  8B EF		     2			mov	entry_SP,SP80
 3C47  BF 0006		     2			mov	ret_reg,code_undef4
 3C4A  CB		     2			retf
 = 003D			     2		op2	= op2 + 1
 3D40  83 C4 02		     2			add	sp,2
 3D43  8B D5		     2			mov	temp,save_temp
 3D45  8B EF		     2			mov	entry_SP,SP80
 3D47  BF 0006		     2			mov	ret_reg,code_undef4
 3D4A  CB		     2			retf
 = 003E			     2		op2	= op2 + 1
 = 003F			     1		op2	= 3eH + 1
 3E40  8B D3					mov	temp,bx
 3E42  5B					pop	bx
 3E43  D0 2F					shr	byte ptr ds:[bx],1
 3E45  8B DA					mov	bx,temp
 3E47  9F					lahf
 3E48  80 E4 ED					and	ah,not (h_flag or n_flag)
 3E4B  B2 00					mov	temp_l,0
						fetch1
 3E4D  8A 34		     1			mov	temp_h,ds:[PC80]
 3E4F  46		     1			inc	PC80
 3E50  FF E2		     1			jmp	temp

				;-----------------------------------
				BITX	macro	n

						mov	temp,save_temp
						pop	save_temp
						test	byte ptr ds:[save_temp],1 shl n
						mov	save_temp,temp
						mov	temp_h,ah
						lahf
						and	temp_h,(s_flag or p_flag or c_flag)
						or	temp_h,h_flag
						and	ah,z_flag
						or	ah,temp_h
						mov	temp_l,0
						fetch1
				endm

				CBX	46H
 3F40  83 C4 02		     2			add	sp,2
 3F43  8B D5		     2			mov	temp,save_temp
 3F45  8B EF		     2			mov	entry_SP,SP80
 3F47  BF 0006		     2			mov	ret_reg,code_undef4
 3F4A  CB		     2			retf
 = 0040			     2		op2	= op2 + 1
 4040  83 C4 02		     2			add	sp,2
 4043  8B D5		     2			mov	temp,save_temp
 4045  8B EF		     2			mov	entry_SP,SP80
 4047  BF 0006		     2			mov	ret_reg,code_undef4
 404A  CB		     2			retf
 = 0041			     2		op2	= op2 + 1
 4140  83 C4 02		     2			add	sp,2
 4143  8B D5		     2			mov	temp,save_temp
 4145  8B EF		     2			mov	entry_SP,SP80
 4147  BF 0006		     2			mov	ret_reg,code_undef4
 414A  CB		     2			retf
 = 0042			     2		op2	= op2 + 1
 4240  83 C4 02		     2			add	sp,2
 4243  8B D5		     2			mov	temp,save_temp
 4245  8B EF		     2			mov	entry_SP,SP80
 4247  BF 0006		     2			mov	ret_reg,code_undef4
 424A  CB		     2			retf
 = 0043			     2		op2	= op2 + 1
 4340  83 C4 02		     2			add	sp,2
 4343  8B D5		     2			mov	temp,save_temp
 4345  8B EF		     2			mov	entry_SP,SP80
 4347  BF 0006		     2			mov	ret_reg,code_undef4
 434A  CB		     2			retf
 = 0044			     2		op2	= op2 + 1
 4440  83 C4 02		     2			add	sp,2
 4443  8B D5		     2			mov	temp,save_temp
 4445  8B EF		     2			mov	entry_SP,SP80
 4447  BF 0006		     2			mov	ret_reg,code_undef4
 444A  CB		     2			retf
 = 0045			     2		op2	= op2 + 1
 4540  83 C4 02		     2			add	sp,2
 4543  8B D5		     2			mov	temp,save_temp
 4545  8B EF		     2			mov	entry_SP,SP80
 4547  BF 0006		     2			mov	ret_reg,code_undef4
 454A  CB		     2			retf
 = 0046			     2		op2	= op2 + 1
 = 0047			     1		op2	= 46H + 1
						BITX	0
 4640  8B D5		     1			mov	temp,save_temp
 4642  5D		     1			pop	save_temp
 4643  3E: F6 46 00 01	     1			test	byte ptr ds:[save_temp],1 shl 0
 4648  8B EA		     1			mov	save_temp,temp
 464A  8A F4		     1			mov	temp_h,ah
 464C  9F		     1			lahf
 464D  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4650  80 CE 10		     1			or	temp_h,h_flag
 4653  80 E4 40		     1			and	ah,z_flag
 4656  0A E6		     1			or	ah,temp_h
 4658  B2 00		     1			mov	temp_l,0
 465A  8A 34		     2			mov	temp_h,ds:[PC80]
 465C  46		     2			inc	PC80
 465D  FF E2		     2			jmp	temp
				CBX	4EH
 4740  83 C4 02		     2			add	sp,2
 4743  8B D5		     2			mov	temp,save_temp
 4745  8B EF		     2			mov	entry_SP,SP80
 4747  BF 0006		     2			mov	ret_reg,code_undef4
 474A  CB		     2			retf
 = 0048			     2		op2	= op2 + 1
 4840  83 C4 02		     2			add	sp,2
 4843  8B D5		     2			mov	temp,save_temp
 4845  8B EF		     2			mov	entry_SP,SP80
 4847  BF 0006		     2			mov	ret_reg,code_undef4
 484A  CB		     2			retf
 = 0049			     2		op2	= op2 + 1
 4940  83 C4 02		     2			add	sp,2
 4943  8B D5		     2			mov	temp,save_temp
 4945  8B EF		     2			mov	entry_SP,SP80
 4947  BF 0006		     2			mov	ret_reg,code_undef4
 494A  CB		     2			retf
 = 004A			     2		op2	= op2 + 1
 4A40  83 C4 02		     2			add	sp,2
 4A43  8B D5		     2			mov	temp,save_temp
 4A45  8B EF		     2			mov	entry_SP,SP80
 4A47  BF 0006		     2			mov	ret_reg,code_undef4
 4A4A  CB		     2			retf
 = 004B			     2		op2	= op2 + 1
 4B40  83 C4 02		     2			add	sp,2
 4B43  8B D5		     2			mov	temp,save_temp
 4B45  8B EF		     2			mov	entry_SP,SP80
 4B47  BF 0006		     2			mov	ret_reg,code_undef4
 4B4A  CB		     2			retf
 = 004C			     2		op2	= op2 + 1
 4C40  83 C4 02		     2			add	sp,2
 4C43  8B D5		     2			mov	temp,save_temp
 4C45  8B EF		     2			mov	entry_SP,SP80
 4C47  BF 0006		     2			mov	ret_reg,code_undef4
 4C4A  CB		     2			retf
 = 004D			     2		op2	= op2 + 1
 4D40  83 C4 02		     2			add	sp,2
 4D43  8B D5		     2			mov	temp,save_temp
 4D45  8B EF		     2			mov	entry_SP,SP80
 4D47  BF 0006		     2			mov	ret_reg,code_undef4
 4D4A  CB		     2			retf
 = 004E			     2		op2	= op2 + 1
 = 004F			     1		op2	= 4EH + 1
						BITX	1
 4E40  8B D5		     1			mov	temp,save_temp
 4E42  5D		     1			pop	save_temp
 4E43  3E: F6 46 00 02	     1			test	byte ptr ds:[save_temp],1 shl 1
 4E48  8B EA		     1			mov	save_temp,temp
 4E4A  8A F4		     1			mov	temp_h,ah
 4E4C  9F		     1			lahf
 4E4D  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 4E50  80 CE 10		     1			or	temp_h,h_flag
 4E53  80 E4 40		     1			and	ah,z_flag
 4E56  0A E6		     1			or	ah,temp_h
 4E58  B2 00		     1			mov	temp_l,0
 4E5A  8A 34		     2			mov	temp_h,ds:[PC80]
 4E5C  46		     2			inc	PC80
 4E5D  FF E2		     2			jmp	temp
				CBX	56H
 4F40  83 C4 02		     2			add	sp,2
 4F43  8B D5		     2			mov	temp,save_temp
 4F45  8B EF		     2			mov	entry_SP,SP80
 4F47  BF 0006		     2			mov	ret_reg,code_undef4
 4F4A  CB		     2			retf
 = 0050			     2		op2	= op2 + 1
 5040  83 C4 02		     2			add	sp,2
 5043  8B D5		     2			mov	temp,save_temp
 5045  8B EF		     2			mov	entry_SP,SP80
 5047  BF 0006		     2			mov	ret_reg,code_undef4
 504A  CB		     2			retf
 = 0051			     2		op2	= op2 + 1
 5140  83 C4 02		     2			add	sp,2
 5143  8B D5		     2			mov	temp,save_temp
 5145  8B EF		     2			mov	entry_SP,SP80
 5147  BF 0006		     2			mov	ret_reg,code_undef4
 514A  CB		     2			retf
 = 0052			     2		op2	= op2 + 1
 5240  83 C4 02		     2			add	sp,2
 5243  8B D5		     2			mov	temp,save_temp
 5245  8B EF		     2			mov	entry_SP,SP80
 5247  BF 0006		     2			mov	ret_reg,code_undef4
 524A  CB		     2			retf
 = 0053			     2		op2	= op2 + 1
 5340  83 C4 02		     2			add	sp,2
 5343  8B D5		     2			mov	temp,save_temp
 5345  8B EF		     2			mov	entry_SP,SP80
 5347  BF 0006		     2			mov	ret_reg,code_undef4
 534A  CB		     2			retf
 = 0054			     2		op2	= op2 + 1
 5440  83 C4 02		     2			add	sp,2
 5443  8B D5		     2			mov	temp,save_temp
 5445  8B EF		     2			mov	entry_SP,SP80
 5447  BF 0006		     2			mov	ret_reg,code_undef4
 544A  CB		     2			retf
 = 0055			     2		op2	= op2 + 1
 5540  83 C4 02		     2			add	sp,2
 5543  8B D5		     2			mov	temp,save_temp
 5545  8B EF		     2			mov	entry_SP,SP80
 5547  BF 0006		     2			mov	ret_reg,code_undef4
 554A  CB		     2			retf
 = 0056			     2		op2	= op2 + 1
 = 0057			     1		op2	= 56H + 1
						BITX	2
 5640  8B D5		     1			mov	temp,save_temp
 5642  5D		     1			pop	save_temp
 5643  3E: F6 46 00 04	     1			test	byte ptr ds:[save_temp],1 shl 2
 5648  8B EA		     1			mov	save_temp,temp
 564A  8A F4		     1			mov	temp_h,ah
 564C  9F		     1			lahf
 564D  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5650  80 CE 10		     1			or	temp_h,h_flag
 5653  80 E4 40		     1			and	ah,z_flag
 5656  0A E6		     1			or	ah,temp_h
 5658  B2 00		     1			mov	temp_l,0
 565A  8A 34		     2			mov	temp_h,ds:[PC80]
 565C  46		     2			inc	PC80
 565D  FF E2		     2			jmp	temp
				CBX	5EH
 5740  83 C4 02		     2			add	sp,2
 5743  8B D5		     2			mov	temp,save_temp
 5745  8B EF		     2			mov	entry_SP,SP80
 5747  BF 0006		     2			mov	ret_reg,code_undef4
 574A  CB		     2			retf
 = 0058			     2		op2	= op2 + 1
 5840  83 C4 02		     2			add	sp,2
 5843  8B D5		     2			mov	temp,save_temp
 5845  8B EF		     2			mov	entry_SP,SP80
 5847  BF 0006		     2			mov	ret_reg,code_undef4
 584A  CB		     2			retf
 = 0059			     2		op2	= op2 + 1
 5940  83 C4 02		     2			add	sp,2
 5943  8B D5		     2			mov	temp,save_temp
 5945  8B EF		     2			mov	entry_SP,SP80
 5947  BF 0006		     2			mov	ret_reg,code_undef4
 594A  CB		     2			retf
 = 005A			     2		op2	= op2 + 1
 5A40  83 C4 02		     2			add	sp,2
 5A43  8B D5		     2			mov	temp,save_temp
 5A45  8B EF		     2			mov	entry_SP,SP80
 5A47  BF 0006		     2			mov	ret_reg,code_undef4
 5A4A  CB		     2			retf
 = 005B			     2		op2	= op2 + 1
 5B40  83 C4 02		     2			add	sp,2
 5B43  8B D5		     2			mov	temp,save_temp
 5B45  8B EF		     2			mov	entry_SP,SP80
 5B47  BF 0006		     2			mov	ret_reg,code_undef4
 5B4A  CB		     2			retf
 = 005C			     2		op2	= op2 + 1
 5C40  83 C4 02		     2			add	sp,2
 5C43  8B D5		     2			mov	temp,save_temp
 5C45  8B EF		     2			mov	entry_SP,SP80
 5C47  BF 0006		     2			mov	ret_reg,code_undef4
 5C4A  CB		     2			retf
 = 005D			     2		op2	= op2 + 1
 5D40  83 C4 02		     2			add	sp,2
 5D43  8B D5		     2			mov	temp,save_temp
 5D45  8B EF		     2			mov	entry_SP,SP80
 5D47  BF 0006		     2			mov	ret_reg,code_undef4
 5D4A  CB		     2			retf
 = 005E			     2		op2	= op2 + 1
 = 005F			     1		op2	= 5EH + 1
						BITX	3
 5E40  8B D5		     1			mov	temp,save_temp
 5E42  5D		     1			pop	save_temp
 5E43  3E: F6 46 00 08	     1			test	byte ptr ds:[save_temp],1 shl 3
 5E48  8B EA		     1			mov	save_temp,temp
 5E4A  8A F4		     1			mov	temp_h,ah
 5E4C  9F		     1			lahf
 5E4D  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 5E50  80 CE 10		     1			or	temp_h,h_flag
 5E53  80 E4 40		     1			and	ah,z_flag
 5E56  0A E6		     1			or	ah,temp_h
 5E58  B2 00		     1			mov	temp_l,0
 5E5A  8A 34		     2			mov	temp_h,ds:[PC80]
 5E5C  46		     2			inc	PC80
 5E5D  FF E2		     2			jmp	temp
				CBX	66H
 5F40  83 C4 02		     2			add	sp,2
 5F43  8B D5		     2			mov	temp,save_temp
 5F45  8B EF		     2			mov	entry_SP,SP80
 5F47  BF 0006		     2			mov	ret_reg,code_undef4
 5F4A  CB		     2			retf
 = 0060			     2		op2	= op2 + 1
 6040  83 C4 02		     2			add	sp,2
 6043  8B D5		     2			mov	temp,save_temp
 6045  8B EF		     2			mov	entry_SP,SP80
 6047  BF 0006		     2			mov	ret_reg,code_undef4
 604A  CB		     2			retf
 = 0061			     2		op2	= op2 + 1
 6140  83 C4 02		     2			add	sp,2
 6143  8B D5		     2			mov	temp,save_temp
 6145  8B EF		     2			mov	entry_SP,SP80
 6147  BF 0006		     2			mov	ret_reg,code_undef4
 614A  CB		     2			retf
 = 0062			     2		op2	= op2 + 1
 6240  83 C4 02		     2			add	sp,2
 6243  8B D5		     2			mov	temp,save_temp
 6245  8B EF		     2			mov	entry_SP,SP80
 6247  BF 0006		     2			mov	ret_reg,code_undef4
 624A  CB		     2			retf
 = 0063			     2		op2	= op2 + 1
 6340  83 C4 02		     2			add	sp,2
 6343  8B D5		     2			mov	temp,save_temp
 6345  8B EF		     2			mov	entry_SP,SP80
 6347  BF 0006		     2			mov	ret_reg,code_undef4
 634A  CB		     2			retf
 = 0064			     2		op2	= op2 + 1
 6440  83 C4 02		     2			add	sp,2
 6443  8B D5		     2			mov	temp,save_temp
 6445  8B EF		     2			mov	entry_SP,SP80
 6447  BF 0006		     2			mov	ret_reg,code_undef4
 644A  CB		     2			retf
 = 0065			     2		op2	= op2 + 1
 6540  83 C4 02		     2			add	sp,2
 6543  8B D5		     2			mov	temp,save_temp
 6545  8B EF		     2			mov	entry_SP,SP80
 6547  BF 0006		     2			mov	ret_reg,code_undef4
 654A  CB		     2			retf
 = 0066			     2		op2	= op2 + 1
 = 0067			     1		op2	= 66H + 1
						BITX	4
 6640  8B D5		     1			mov	temp,save_temp
 6642  5D		     1			pop	save_temp
 6643  3E: F6 46 00 10	     1			test	byte ptr ds:[save_temp],1 shl 4
 6648  8B EA		     1			mov	save_temp,temp
 664A  8A F4		     1			mov	temp_h,ah
 664C  9F		     1			lahf
 664D  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6650  80 CE 10		     1			or	temp_h,h_flag
 6653  80 E4 40		     1			and	ah,z_flag
 6656  0A E6		     1			or	ah,temp_h
 6658  B2 00		     1			mov	temp_l,0
 665A  8A 34		     2			mov	temp_h,ds:[PC80]
 665C  46		     2			inc	PC80
 665D  FF E2		     2			jmp	temp
				CBX	6EH
 6740  83 C4 02		     2			add	sp,2
 6743  8B D5		     2			mov	temp,save_temp
 6745  8B EF		     2			mov	entry_SP,SP80
 6747  BF 0006		     2			mov	ret_reg,code_undef4
 674A  CB		     2			retf
 = 0068			     2		op2	= op2 + 1
 6840  83 C4 02		     2			add	sp,2
 6843  8B D5		     2			mov	temp,save_temp
 6845  8B EF		     2			mov	entry_SP,SP80
 6847  BF 0006		     2			mov	ret_reg,code_undef4
 684A  CB		     2			retf
 = 0069			     2		op2	= op2 + 1
 6940  83 C4 02		     2			add	sp,2
 6943  8B D5		     2			mov	temp,save_temp
 6945  8B EF		     2			mov	entry_SP,SP80
 6947  BF 0006		     2			mov	ret_reg,code_undef4
 694A  CB		     2			retf
 = 006A			     2		op2	= op2 + 1
 6A40  83 C4 02		     2			add	sp,2
 6A43  8B D5		     2			mov	temp,save_temp
 6A45  8B EF		     2			mov	entry_SP,SP80
 6A47  BF 0006		     2			mov	ret_reg,code_undef4
 6A4A  CB		     2			retf
 = 006B			     2		op2	= op2 + 1
 6B40  83 C4 02		     2			add	sp,2
 6B43  8B D5		     2			mov	temp,save_temp
 6B45  8B EF		     2			mov	entry_SP,SP80
 6B47  BF 0006		     2			mov	ret_reg,code_undef4
 6B4A  CB		     2			retf
 = 006C			     2		op2	= op2 + 1
 6C40  83 C4 02		     2			add	sp,2
 6C43  8B D5		     2			mov	temp,save_temp
 6C45  8B EF		     2			mov	entry_SP,SP80
 6C47  BF 0006		     2			mov	ret_reg,code_undef4
 6C4A  CB		     2			retf
 = 006D			     2		op2	= op2 + 1
 6D40  83 C4 02		     2			add	sp,2
 6D43  8B D5		     2			mov	temp,save_temp
 6D45  8B EF		     2			mov	entry_SP,SP80
 6D47  BF 0006		     2			mov	ret_reg,code_undef4
 6D4A  CB		     2			retf
 = 006E			     2		op2	= op2 + 1
 = 006F			     1		op2	= 6EH + 1
						BITX	5
 6E40  8B D5		     1			mov	temp,save_temp
 6E42  5D		     1			pop	save_temp
 6E43  3E: F6 46 00 20	     1			test	byte ptr ds:[save_temp],1 shl 5
 6E48  8B EA		     1			mov	save_temp,temp
 6E4A  8A F4		     1			mov	temp_h,ah
 6E4C  9F		     1			lahf
 6E4D  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 6E50  80 CE 10		     1			or	temp_h,h_flag
 6E53  80 E4 40		     1			and	ah,z_flag
 6E56  0A E6		     1			or	ah,temp_h
 6E58  B2 00		     1			mov	temp_l,0
 6E5A  8A 34		     2			mov	temp_h,ds:[PC80]
 6E5C  46		     2			inc	PC80
 6E5D  FF E2		     2			jmp	temp
				CBX	76H
 6F40  83 C4 02		     2			add	sp,2
 6F43  8B D5		     2			mov	temp,save_temp
 6F45  8B EF		     2			mov	entry_SP,SP80
 6F47  BF 0006		     2			mov	ret_reg,code_undef4
 6F4A  CB		     2			retf
 = 0070			     2		op2	= op2 + 1
 7040  83 C4 02		     2			add	sp,2
 7043  8B D5		     2			mov	temp,save_temp
 7045  8B EF		     2			mov	entry_SP,SP80
 7047  BF 0006		     2			mov	ret_reg,code_undef4
 704A  CB		     2			retf
 = 0071			     2		op2	= op2 + 1
 7140  83 C4 02		     2			add	sp,2
 7143  8B D5		     2			mov	temp,save_temp
 7145  8B EF		     2			mov	entry_SP,SP80
 7147  BF 0006		     2			mov	ret_reg,code_undef4
 714A  CB		     2			retf
 = 0072			     2		op2	= op2 + 1
 7240  83 C4 02		     2			add	sp,2
 7243  8B D5		     2			mov	temp,save_temp
 7245  8B EF		     2			mov	entry_SP,SP80
 7247  BF 0006		     2			mov	ret_reg,code_undef4
 724A  CB		     2			retf
 = 0073			     2		op2	= op2 + 1
 7340  83 C4 02		     2			add	sp,2
 7343  8B D5		     2			mov	temp,save_temp
 7345  8B EF		     2			mov	entry_SP,SP80
 7347  BF 0006		     2			mov	ret_reg,code_undef4
 734A  CB		     2			retf
 = 0074			     2		op2	= op2 + 1
 7440  83 C4 02		     2			add	sp,2
 7443  8B D5		     2			mov	temp,save_temp
 7445  8B EF		     2			mov	entry_SP,SP80
 7447  BF 0006		     2			mov	ret_reg,code_undef4
 744A  CB		     2			retf
 = 0075			     2		op2	= op2 + 1
 7540  83 C4 02		     2			add	sp,2
 7543  8B D5		     2			mov	temp,save_temp
 7545  8B EF		     2			mov	entry_SP,SP80
 7547  BF 0006		     2			mov	ret_reg,code_undef4
 754A  CB		     2			retf
 = 0076			     2		op2	= op2 + 1
 = 0077			     1		op2	= 76H + 1
						BITX	6
 7640  8B D5		     1			mov	temp,save_temp
 7642  5D		     1			pop	save_temp
 7643  3E: F6 46 00 40	     1			test	byte ptr ds:[save_temp],1 shl 6
 7648  8B EA		     1			mov	save_temp,temp
 764A  8A F4		     1			mov	temp_h,ah
 764C  9F		     1			lahf
 764D  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7650  80 CE 10		     1			or	temp_h,h_flag
 7653  80 E4 40		     1			and	ah,z_flag
 7656  0A E6		     1			or	ah,temp_h
 7658  B2 00		     1			mov	temp_l,0
 765A  8A 34		     2			mov	temp_h,ds:[PC80]
 765C  46		     2			inc	PC80
 765D  FF E2		     2			jmp	temp
				CBX	7EH
 7740  83 C4 02		     2			add	sp,2
 7743  8B D5		     2			mov	temp,save_temp
 7745  8B EF		     2			mov	entry_SP,SP80
 7747  BF 0006		     2			mov	ret_reg,code_undef4
 774A  CB		     2			retf
 = 0078			     2		op2	= op2 + 1
 7840  83 C4 02		     2			add	sp,2
 7843  8B D5		     2			mov	temp,save_temp
 7845  8B EF		     2			mov	entry_SP,SP80
 7847  BF 0006		     2			mov	ret_reg,code_undef4
 784A  CB		     2			retf
 = 0079			     2		op2	= op2 + 1
 7940  83 C4 02		     2			add	sp,2
 7943  8B D5		     2			mov	temp,save_temp
 7945  8B EF		     2			mov	entry_SP,SP80
 7947  BF 0006		     2			mov	ret_reg,code_undef4
 794A  CB		     2			retf
 = 007A			     2		op2	= op2 + 1
 7A40  83 C4 02		     2			add	sp,2
 7A43  8B D5		     2			mov	temp,save_temp
 7A45  8B EF		     2			mov	entry_SP,SP80
 7A47  BF 0006		     2			mov	ret_reg,code_undef4
 7A4A  CB		     2			retf
 = 007B			     2		op2	= op2 + 1
 7B40  83 C4 02		     2			add	sp,2
 7B43  8B D5		     2			mov	temp,save_temp
 7B45  8B EF		     2			mov	entry_SP,SP80
 7B47  BF 0006		     2			mov	ret_reg,code_undef4
 7B4A  CB		     2			retf
 = 007C			     2		op2	= op2 + 1
 7C40  83 C4 02		     2			add	sp,2
 7C43  8B D5		     2			mov	temp,save_temp
 7C45  8B EF		     2			mov	entry_SP,SP80
 7C47  BF 0006		     2			mov	ret_reg,code_undef4
 7C4A  CB		     2			retf
 = 007D			     2		op2	= op2 + 1
 7D40  83 C4 02		     2			add	sp,2
 7D43  8B D5		     2			mov	temp,save_temp
 7D45  8B EF		     2			mov	entry_SP,SP80
 7D47  BF 0006		     2			mov	ret_reg,code_undef4
 7D4A  CB		     2			retf
 = 007E			     2		op2	= op2 + 1
 = 007F			     1		op2	= 7EH + 1
						BITX	7
 7E40  8B D5		     1			mov	temp,save_temp
 7E42  5D		     1			pop	save_temp
 7E43  3E: F6 46 00 80	     1			test	byte ptr ds:[save_temp],1 shl 7
 7E48  8B EA		     1			mov	save_temp,temp
 7E4A  8A F4		     1			mov	temp_h,ah
 7E4C  9F		     1			lahf
 7E4D  80 E6 85		     1			and	temp_h,(s_flag or p_flag or c_flag)
 7E50  80 CE 10		     1			or	temp_h,h_flag
 7E53  80 E4 40		     1			and	ah,z_flag
 7E56  0A E6		     1			or	ah,temp_h
 7E58  B2 00		     1			mov	temp_l,0
 7E5A  8A 34		     2			mov	temp_h,ds:[PC80]
 7E5C  46		     2			inc	PC80
 7E5D  FF E2		     2			jmp	temp

				;-----------------------------------
				RESX	macro	n
						mov	temp,save_temp
						pop	save_temp
						and	byte ptr ds:[save_temp],not(1 shl n)
						mov	save_temp,temp
						mov	temp_l,0
						fetch1
				endm

				CBX	86H
 7F40  83 C4 02		     2			add	sp,2
 7F43  8B D5		     2			mov	temp,save_temp
 7F45  8B EF		     2			mov	entry_SP,SP80
 7F47  BF 0006		     2			mov	ret_reg,code_undef4
 7F4A  CB		     2			retf
 = 0080			     2		op2	= op2 + 1
 8040  83 C4 02		     2			add	sp,2
 8043  8B D5		     2			mov	temp,save_temp
 8045  8B EF		     2			mov	entry_SP,SP80
 8047  BF 0006		     2			mov	ret_reg,code_undef4
 804A  CB		     2			retf
 = 0081			     2		op2	= op2 + 1
 8140  83 C4 02		     2			add	sp,2
 8143  8B D5		     2			mov	temp,save_temp
 8145  8B EF		     2			mov	entry_SP,SP80
 8147  BF 0006		     2			mov	ret_reg,code_undef4
 814A  CB		     2			retf
 = 0082			     2		op2	= op2 + 1
 8240  83 C4 02		     2			add	sp,2
 8243  8B D5		     2			mov	temp,save_temp
 8245  8B EF		     2			mov	entry_SP,SP80
 8247  BF 0006		     2			mov	ret_reg,code_undef4
 824A  CB		     2			retf
 = 0083			     2		op2	= op2 + 1
 8340  83 C4 02		     2			add	sp,2
 8343  8B D5		     2			mov	temp,save_temp
 8345  8B EF		     2			mov	entry_SP,SP80
 8347  BF 0006		     2			mov	ret_reg,code_undef4
 834A  CB		     2			retf
 = 0084			     2		op2	= op2 + 1
 8440  83 C4 02		     2			add	sp,2
 8443  8B D5		     2			mov	temp,save_temp
 8445  8B EF		     2			mov	entry_SP,SP80
 8447  BF 0006		     2			mov	ret_reg,code_undef4
 844A  CB		     2			retf
 = 0085			     2		op2	= op2 + 1
 8540  83 C4 02		     2			add	sp,2
 8543  8B D5		     2			mov	temp,save_temp
 8545  8B EF		     2			mov	entry_SP,SP80
 8547  BF 0006		     2			mov	ret_reg,code_undef4
 854A  CB		     2			retf
 = 0086			     2		op2	= op2 + 1
 = 0087			     1		op2	= 86H + 1
						RESX	0
 8640  8B D5		     1			mov	temp,save_temp
 8642  5D		     1			pop	save_temp
 8643  3E: 80 66 00 FE	     1			and	byte ptr ds:[save_temp],not(1 shl 0)
 8648  8B EA		     1			mov	save_temp,temp
 864A  B2 00		     1			mov	temp_l,0
 864C  8A 34		     2			mov	temp_h,ds:[PC80]
 864E  46		     2			inc	PC80
 864F  FF E2		     2			jmp	temp
				CBX	8eH
 8740  83 C4 02		     2			add	sp,2
 8743  8B D5		     2			mov	temp,save_temp
 8745  8B EF		     2			mov	entry_SP,SP80
 8747  BF 0006		     2			mov	ret_reg,code_undef4
 874A  CB		     2			retf
 = 0088			     2		op2	= op2 + 1
 8840  83 C4 02		     2			add	sp,2
 8843  8B D5		     2			mov	temp,save_temp
 8845  8B EF		     2			mov	entry_SP,SP80
 8847  BF 0006		     2			mov	ret_reg,code_undef4
 884A  CB		     2			retf
 = 0089			     2		op2	= op2 + 1
 8940  83 C4 02		     2			add	sp,2
 8943  8B D5		     2			mov	temp,save_temp
 8945  8B EF		     2			mov	entry_SP,SP80
 8947  BF 0006		     2			mov	ret_reg,code_undef4
 894A  CB		     2			retf
 = 008A			     2		op2	= op2 + 1
 8A40  83 C4 02		     2			add	sp,2
 8A43  8B D5		     2			mov	temp,save_temp
 8A45  8B EF		     2			mov	entry_SP,SP80
 8A47  BF 0006		     2			mov	ret_reg,code_undef4
 8A4A  CB		     2			retf
 = 008B			     2		op2	= op2 + 1
 8B40  83 C4 02		     2			add	sp,2
 8B43  8B D5		     2			mov	temp,save_temp
 8B45  8B EF		     2			mov	entry_SP,SP80
 8B47  BF 0006		     2			mov	ret_reg,code_undef4
 8B4A  CB		     2			retf
 = 008C			     2		op2	= op2 + 1
 8C40  83 C4 02		     2			add	sp,2
 8C43  8B D5		     2			mov	temp,save_temp
 8C45  8B EF		     2			mov	entry_SP,SP80
 8C47  BF 0006		     2			mov	ret_reg,code_undef4
 8C4A  CB		     2			retf
 = 008D			     2		op2	= op2 + 1
 8D40  83 C4 02		     2			add	sp,2
 8D43  8B D5		     2			mov	temp,save_temp
 8D45  8B EF		     2			mov	entry_SP,SP80
 8D47  BF 0006		     2			mov	ret_reg,code_undef4
 8D4A  CB		     2			retf
 = 008E			     2		op2	= op2 + 1
 = 008F			     1		op2	= 8eH + 1
						RESX	1
 8E40  8B D5		     1			mov	temp,save_temp
 8E42  5D		     1			pop	save_temp
 8E43  3E: 80 66 00 FD	     1			and	byte ptr ds:[save_temp],not(1 shl 1)
 8E48  8B EA		     1			mov	save_temp,temp
 8E4A  B2 00		     1			mov	temp_l,0
 8E4C  8A 34		     2			mov	temp_h,ds:[PC80]
 8E4E  46		     2			inc	PC80
 8E4F  FF E2		     2			jmp	temp
				CBX	96H
 8F40  83 C4 02		     2			add	sp,2
 8F43  8B D5		     2			mov	temp,save_temp
 8F45  8B EF		     2			mov	entry_SP,SP80
 8F47  BF 0006		     2			mov	ret_reg,code_undef4
 8F4A  CB		     2			retf
 = 0090			     2		op2	= op2 + 1
 9040  83 C4 02		     2			add	sp,2
 9043  8B D5		     2			mov	temp,save_temp
 9045  8B EF		     2			mov	entry_SP,SP80
 9047  BF 0006		     2			mov	ret_reg,code_undef4
 904A  CB		     2			retf
 = 0091			     2		op2	= op2 + 1
 9140  83 C4 02		     2			add	sp,2
 9143  8B D5		     2			mov	temp,save_temp
 9145  8B EF		     2			mov	entry_SP,SP80
 9147  BF 0006		     2			mov	ret_reg,code_undef4
 914A  CB		     2			retf
 = 0092			     2		op2	= op2 + 1
 9240  83 C4 02		     2			add	sp,2
 9243  8B D5		     2			mov	temp,save_temp
 9245  8B EF		     2			mov	entry_SP,SP80
 9247  BF 0006		     2			mov	ret_reg,code_undef4
 924A  CB		     2			retf
 = 0093			     2		op2	= op2 + 1
 9340  83 C4 02		     2			add	sp,2
 9343  8B D5		     2			mov	temp,save_temp
 9345  8B EF		     2			mov	entry_SP,SP80
 9347  BF 0006		     2			mov	ret_reg,code_undef4
 934A  CB		     2			retf
 = 0094			     2		op2	= op2 + 1
 9440  83 C4 02		     2			add	sp,2
 9443  8B D5		     2			mov	temp,save_temp
 9445  8B EF		     2			mov	entry_SP,SP80
 9447  BF 0006		     2			mov	ret_reg,code_undef4
 944A  CB		     2			retf
 = 0095			     2		op2	= op2 + 1
 9540  83 C4 02		     2			add	sp,2
 9543  8B D5		     2			mov	temp,save_temp
 9545  8B EF		     2			mov	entry_SP,SP80
 9547  BF 0006		     2			mov	ret_reg,code_undef4
 954A  CB		     2			retf
 = 0096			     2		op2	= op2 + 1
 = 0097			     1		op2	= 96H + 1
						RESX	2
 9640  8B D5		     1			mov	temp,save_temp
 9642  5D		     1			pop	save_temp
 9643  3E: 80 66 00 FB	     1			and	byte ptr ds:[save_temp],not(1 shl 2)
 9648  8B EA		     1			mov	save_temp,temp
 964A  B2 00		     1			mov	temp_l,0
 964C  8A 34		     2			mov	temp_h,ds:[PC80]
 964E  46		     2			inc	PC80
 964F  FF E2		     2			jmp	temp
				CBX	9eH
 9740  83 C4 02		     2			add	sp,2
 9743  8B D5		     2			mov	temp,save_temp
 9745  8B EF		     2			mov	entry_SP,SP80
 9747  BF 0006		     2			mov	ret_reg,code_undef4
 974A  CB		     2			retf
 = 0098			     2		op2	= op2 + 1
 9840  83 C4 02		     2			add	sp,2
 9843  8B D5		     2			mov	temp,save_temp
 9845  8B EF		     2			mov	entry_SP,SP80
 9847  BF 0006		     2			mov	ret_reg,code_undef4
 984A  CB		     2			retf
 = 0099			     2		op2	= op2 + 1
 9940  83 C4 02		     2			add	sp,2
 9943  8B D5		     2			mov	temp,save_temp
 9945  8B EF		     2			mov	entry_SP,SP80
 9947  BF 0006		     2			mov	ret_reg,code_undef4
 994A  CB		     2			retf
 = 009A			     2		op2	= op2 + 1
 9A40  83 C4 02		     2			add	sp,2
 9A43  8B D5		     2			mov	temp,save_temp
 9A45  8B EF		     2			mov	entry_SP,SP80
 9A47  BF 0006		     2			mov	ret_reg,code_undef4
 9A4A  CB		     2			retf
 = 009B			     2		op2	= op2 + 1
 9B40  83 C4 02		     2			add	sp,2
 9B43  8B D5		     2			mov	temp,save_temp
 9B45  8B EF		     2			mov	entry_SP,SP80
 9B47  BF 0006		     2			mov	ret_reg,code_undef4
 9B4A  CB		     2			retf
 = 009C			     2		op2	= op2 + 1
 9C40  83 C4 02		     2			add	sp,2
 9C43  8B D5		     2			mov	temp,save_temp
 9C45  8B EF		     2			mov	entry_SP,SP80
 9C47  BF 0006		     2			mov	ret_reg,code_undef4
 9C4A  CB		     2			retf
 = 009D			     2		op2	= op2 + 1
 9D40  83 C4 02		     2			add	sp,2
 9D43  8B D5		     2			mov	temp,save_temp
 9D45  8B EF		     2			mov	entry_SP,SP80
 9D47  BF 0006		     2			mov	ret_reg,code_undef4
 9D4A  CB		     2			retf
 = 009E			     2		op2	= op2 + 1
 = 009F			     1		op2	= 9eH + 1
						RESX	3
 9E40  8B D5		     1			mov	temp,save_temp
 9E42  5D		     1			pop	save_temp
 9E43  3E: 80 66 00 F7	     1			and	byte ptr ds:[save_temp],not(1 shl 3)
 9E48  8B EA		     1			mov	save_temp,temp
 9E4A  B2 00		     1			mov	temp_l,0
 9E4C  8A 34		     2			mov	temp_h,ds:[PC80]
 9E4E  46		     2			inc	PC80
 9E4F  FF E2		     2			jmp	temp
				CBX	0a6H
 9F40  83 C4 02		     2			add	sp,2
 9F43  8B D5		     2			mov	temp,save_temp
 9F45  8B EF		     2			mov	entry_SP,SP80
 9F47  BF 0006		     2			mov	ret_reg,code_undef4
 9F4A  CB		     2			retf
 = 00A0			     2		op2	= op2 + 1
 A040  83 C4 02		     2			add	sp,2
 A043  8B D5		     2			mov	temp,save_temp
 A045  8B EF		     2			mov	entry_SP,SP80
 A047  BF 0006		     2			mov	ret_reg,code_undef4
 A04A  CB		     2			retf
 = 00A1			     2		op2	= op2 + 1
 A140  83 C4 02		     2			add	sp,2
 A143  8B D5		     2			mov	temp,save_temp
 A145  8B EF		     2			mov	entry_SP,SP80
 A147  BF 0006		     2			mov	ret_reg,code_undef4
 A14A  CB		     2			retf
 = 00A2			     2		op2	= op2 + 1
 A240  83 C4 02		     2			add	sp,2
 A243  8B D5		     2			mov	temp,save_temp
 A245  8B EF		     2			mov	entry_SP,SP80
 A247  BF 0006		     2			mov	ret_reg,code_undef4
 A24A  CB		     2			retf
 = 00A3			     2		op2	= op2 + 1
 A340  83 C4 02		     2			add	sp,2
 A343  8B D5		     2			mov	temp,save_temp
 A345  8B EF		     2			mov	entry_SP,SP80
 A347  BF 0006		     2			mov	ret_reg,code_undef4
 A34A  CB		     2			retf
 = 00A4			     2		op2	= op2 + 1
 A440  83 C4 02		     2			add	sp,2
 A443  8B D5		     2			mov	temp,save_temp
 A445  8B EF		     2			mov	entry_SP,SP80
 A447  BF 0006		     2			mov	ret_reg,code_undef4
 A44A  CB		     2			retf
 = 00A5			     2		op2	= op2 + 1
 A540  83 C4 02		     2			add	sp,2
 A543  8B D5		     2			mov	temp,save_temp
 A545  8B EF		     2			mov	entry_SP,SP80
 A547  BF 0006		     2			mov	ret_reg,code_undef4
 A54A  CB		     2			retf
 = 00A6			     2		op2	= op2 + 1
 = 00A7			     1		op2	= 0a6H + 1
						RESX	4
 A640  8B D5		     1			mov	temp,save_temp
 A642  5D		     1			pop	save_temp
 A643  3E: 80 66 00 EF	     1			and	byte ptr ds:[save_temp],not(1 shl 4)
 A648  8B EA		     1			mov	save_temp,temp
 A64A  B2 00		     1			mov	temp_l,0
 A64C  8A 34		     2			mov	temp_h,ds:[PC80]
 A64E  46		     2			inc	PC80
 A64F  FF E2		     2			jmp	temp
				CBX	0aeH
 A740  83 C4 02		     2			add	sp,2
 A743  8B D5		     2			mov	temp,save_temp
 A745  8B EF		     2			mov	entry_SP,SP80
 A747  BF 0006		     2			mov	ret_reg,code_undef4
 A74A  CB		     2			retf
 = 00A8			     2		op2	= op2 + 1
 A840  83 C4 02		     2			add	sp,2
 A843  8B D5		     2			mov	temp,save_temp
 A845  8B EF		     2			mov	entry_SP,SP80
 A847  BF 0006		     2			mov	ret_reg,code_undef4
 A84A  CB		     2			retf
 = 00A9			     2		op2	= op2 + 1
 A940  83 C4 02		     2			add	sp,2
 A943  8B D5		     2			mov	temp,save_temp
 A945  8B EF		     2			mov	entry_SP,SP80
 A947  BF 0006		     2			mov	ret_reg,code_undef4
 A94A  CB		     2			retf
 = 00AA			     2		op2	= op2 + 1
 AA40  83 C4 02		     2			add	sp,2
 AA43  8B D5		     2			mov	temp,save_temp
 AA45  8B EF		     2			mov	entry_SP,SP80
 AA47  BF 0006		     2			mov	ret_reg,code_undef4
 AA4A  CB		     2			retf
 = 00AB			     2		op2	= op2 + 1
 AB40  83 C4 02		     2			add	sp,2
 AB43  8B D5		     2			mov	temp,save_temp
 AB45  8B EF		     2			mov	entry_SP,SP80
 AB47  BF 0006		     2			mov	ret_reg,code_undef4
 AB4A  CB		     2			retf
 = 00AC			     2		op2	= op2 + 1
 AC40  83 C4 02		     2			add	sp,2
 AC43  8B D5		     2			mov	temp,save_temp
 AC45  8B EF		     2			mov	entry_SP,SP80
 AC47  BF 0006		     2			mov	ret_reg,code_undef4
 AC4A  CB		     2			retf
 = 00AD			     2		op2	= op2 + 1
 AD40  83 C4 02		     2			add	sp,2
 AD43  8B D5		     2			mov	temp,save_temp
 AD45  8B EF		     2			mov	entry_SP,SP80
 AD47  BF 0006		     2			mov	ret_reg,code_undef4
 AD4A  CB		     2			retf
 = 00AE			     2		op2	= op2 + 1
 = 00AF			     1		op2	= 0aeH + 1
						RESX	5
 AE40  8B D5		     1			mov	temp,save_temp
 AE42  5D		     1			pop	save_temp
 AE43  3E: 80 66 00 DF	     1			and	byte ptr ds:[save_temp],not(1 shl 5)
 AE48  8B EA		     1			mov	save_temp,temp
 AE4A  B2 00		     1			mov	temp_l,0
 AE4C  8A 34		     2			mov	temp_h,ds:[PC80]
 AE4E  46		     2			inc	PC80
 AE4F  FF E2		     2			jmp	temp
				CBX	0b6H
 AF40  83 C4 02		     2			add	sp,2
 AF43  8B D5		     2			mov	temp,save_temp
 AF45  8B EF		     2			mov	entry_SP,SP80
 AF47  BF 0006		     2			mov	ret_reg,code_undef4
 AF4A  CB		     2			retf
 = 00B0			     2		op2	= op2 + 1
 B040  83 C4 02		     2			add	sp,2
 B043  8B D5		     2			mov	temp,save_temp
 B045  8B EF		     2			mov	entry_SP,SP80
 B047  BF 0006		     2			mov	ret_reg,code_undef4
 B04A  CB		     2			retf
 = 00B1			     2		op2	= op2 + 1
 B140  83 C4 02		     2			add	sp,2
 B143  8B D5		     2			mov	temp,save_temp
 B145  8B EF		     2			mov	entry_SP,SP80
 B147  BF 0006		     2			mov	ret_reg,code_undef4
 B14A  CB		     2			retf
 = 00B2			     2		op2	= op2 + 1
 B240  83 C4 02		     2			add	sp,2
 B243  8B D5		     2			mov	temp,save_temp
 B245  8B EF		     2			mov	entry_SP,SP80
 B247  BF 0006		     2			mov	ret_reg,code_undef4
 B24A  CB		     2			retf
 = 00B3			     2		op2	= op2 + 1
 B340  83 C4 02		     2			add	sp,2
 B343  8B D5		     2			mov	temp,save_temp
 B345  8B EF		     2			mov	entry_SP,SP80
 B347  BF 0006		     2			mov	ret_reg,code_undef4
 B34A  CB		     2			retf
 = 00B4			     2		op2	= op2 + 1
 B440  83 C4 02		     2			add	sp,2
 B443  8B D5		     2			mov	temp,save_temp
 B445  8B EF		     2			mov	entry_SP,SP80
 B447  BF 0006		     2			mov	ret_reg,code_undef4
 B44A  CB		     2			retf
 = 00B5			     2		op2	= op2 + 1
 B540  83 C4 02		     2			add	sp,2
 B543  8B D5		     2			mov	temp,save_temp
 B545  8B EF		     2			mov	entry_SP,SP80
 B547  BF 0006		     2			mov	ret_reg,code_undef4
 B54A  CB		     2			retf
 = 00B6			     2		op2	= op2 + 1
 = 00B7			     1		op2	= 0b6H + 1
						RESX	6
 B640  8B D5		     1			mov	temp,save_temp
 B642  5D		     1			pop	save_temp
 B643  3E: 80 66 00 BF	     1			and	byte ptr ds:[save_temp],not(1 shl 6)
 B648  8B EA		     1			mov	save_temp,temp
 B64A  B2 00		     1			mov	temp_l,0
 B64C  8A 34		     2			mov	temp_h,ds:[PC80]
 B64E  46		     2			inc	PC80
 B64F  FF E2		     2			jmp	temp
				CBX	0beH
 B740  83 C4 02		     2			add	sp,2
 B743  8B D5		     2			mov	temp,save_temp
 B745  8B EF		     2			mov	entry_SP,SP80
 B747  BF 0006		     2			mov	ret_reg,code_undef4
 B74A  CB		     2			retf
 = 00B8			     2		op2	= op2 + 1
 B840  83 C4 02		     2			add	sp,2
 B843  8B D5		     2			mov	temp,save_temp
 B845  8B EF		     2			mov	entry_SP,SP80
 B847  BF 0006		     2			mov	ret_reg,code_undef4
 B84A  CB		     2			retf
 = 00B9			     2		op2	= op2 + 1
 B940  83 C4 02		     2			add	sp,2
 B943  8B D5		     2			mov	temp,save_temp
 B945  8B EF		     2			mov	entry_SP,SP80
 B947  BF 0006		     2			mov	ret_reg,code_undef4
 B94A  CB		     2			retf
 = 00BA			     2		op2	= op2 + 1
 BA40  83 C4 02		     2			add	sp,2
 BA43  8B D5		     2			mov	temp,save_temp
 BA45  8B EF		     2			mov	entry_SP,SP80
 BA47  BF 0006		     2			mov	ret_reg,code_undef4
 BA4A  CB		     2			retf
 = 00BB			     2		op2	= op2 + 1
 BB40  83 C4 02		     2			add	sp,2
 BB43  8B D5		     2			mov	temp,save_temp
 BB45  8B EF		     2			mov	entry_SP,SP80
 BB47  BF 0006		     2			mov	ret_reg,code_undef4
 BB4A  CB		     2			retf
 = 00BC			     2		op2	= op2 + 1
 BC40  83 C4 02		     2			add	sp,2
 BC43  8B D5		     2			mov	temp,save_temp
 BC45  8B EF		     2			mov	entry_SP,SP80
 BC47  BF 0006		     2			mov	ret_reg,code_undef4
 BC4A  CB		     2			retf
 = 00BD			     2		op2	= op2 + 1
 BD40  83 C4 02		     2			add	sp,2
 BD43  8B D5		     2			mov	temp,save_temp
 BD45  8B EF		     2			mov	entry_SP,SP80
 BD47  BF 0006		     2			mov	ret_reg,code_undef4
 BD4A  CB		     2			retf
 = 00BE			     2		op2	= op2 + 1
 = 00BF			     1		op2	= 0beH + 1
						RESX	7
 BE40  8B D5		     1			mov	temp,save_temp
 BE42  5D		     1			pop	save_temp
 BE43  3E: 80 66 00 7F	     1			and	byte ptr ds:[save_temp],not(1 shl 7)
 BE48  8B EA		     1			mov	save_temp,temp
 BE4A  B2 00		     1			mov	temp_l,0
 BE4C  8A 34		     2			mov	temp_h,ds:[PC80]
 BE4E  46		     2			inc	PC80
 BE4F  FF E2		     2			jmp	temp

				;----------------------------------
				SETX	macro	n
						mov	temp,save_temp
						pop	save_temp
						or	byte ptr ds:[save_temp],1 shl n
						mov	save_temp,temp
						mov	temp_l,0
						fetch1
				endm

				CBX	0c6H
 BF40  83 C4 02		     2			add	sp,2
 BF43  8B D5		     2			mov	temp,save_temp
 BF45  8B EF		     2			mov	entry_SP,SP80
 BF47  BF 0006		     2			mov	ret_reg,code_undef4
 BF4A  CB		     2			retf
 = 00C0			     2		op2	= op2 + 1
 C040  83 C4 02		     2			add	sp,2
 C043  8B D5		     2			mov	temp,save_temp
 C045  8B EF		     2			mov	entry_SP,SP80
 C047  BF 0006		     2			mov	ret_reg,code_undef4
 C04A  CB		     2			retf
 = 00C1			     2		op2	= op2 + 1
 C140  83 C4 02		     2			add	sp,2
 C143  8B D5		     2			mov	temp,save_temp
 C145  8B EF		     2			mov	entry_SP,SP80
 C147  BF 0006		     2			mov	ret_reg,code_undef4
 C14A  CB		     2			retf
 = 00C2			     2		op2	= op2 + 1
 C240  83 C4 02		     2			add	sp,2
 C243  8B D5		     2			mov	temp,save_temp
 C245  8B EF		     2			mov	entry_SP,SP80
 C247  BF 0006		     2			mov	ret_reg,code_undef4
 C24A  CB		     2			retf
 = 00C3			     2		op2	= op2 + 1
 C340  83 C4 02		     2			add	sp,2
 C343  8B D5		     2			mov	temp,save_temp
 C345  8B EF		     2			mov	entry_SP,SP80
 C347  BF 0006		     2			mov	ret_reg,code_undef4
 C34A  CB		     2			retf
 = 00C4			     2		op2	= op2 + 1
 C440  83 C4 02		     2			add	sp,2
 C443  8B D5		     2			mov	temp,save_temp
 C445  8B EF		     2			mov	entry_SP,SP80
 C447  BF 0006		     2			mov	ret_reg,code_undef4
 C44A  CB		     2			retf
 = 00C5			     2		op2	= op2 + 1
 C540  83 C4 02		     2			add	sp,2
 C543  8B D5		     2			mov	temp,save_temp
 C545  8B EF		     2			mov	entry_SP,SP80
 C547  BF 0006		     2			mov	ret_reg,code_undef4
 C54A  CB		     2			retf
 = 00C6			     2		op2	= op2 + 1
 = 00C7			     1		op2	= 0c6H + 1
						SETX	0
 C640  8B D5		     1			mov	temp,save_temp
 C642  5D		     1			pop	save_temp
 C643  3E: 80 4E 00 01	     1			or	byte ptr ds:[save_temp],1 shl 0
 C648  8B EA		     1			mov	save_temp,temp
 C64A  B2 00		     1			mov	temp_l,0
 C64C  8A 34		     2			mov	temp_h,ds:[PC80]
 C64E  46		     2			inc	PC80
 C64F  FF E2		     2			jmp	temp
				CBX	0ceH
 C740  83 C4 02		     2			add	sp,2
 C743  8B D5		     2			mov	temp,save_temp
 C745  8B EF		     2			mov	entry_SP,SP80
 C747  BF 0006		     2			mov	ret_reg,code_undef4
 C74A  CB		     2			retf
 = 00C8			     2		op2	= op2 + 1
 C840  83 C4 02		     2			add	sp,2
 C843  8B D5		     2			mov	temp,save_temp
 C845  8B EF		     2			mov	entry_SP,SP80
 C847  BF 0006		     2			mov	ret_reg,code_undef4
 C84A  CB		     2			retf
 = 00C9			     2		op2	= op2 + 1
 C940  83 C4 02		     2			add	sp,2
 C943  8B D5		     2			mov	temp,save_temp
 C945  8B EF		     2			mov	entry_SP,SP80
 C947  BF 0006		     2			mov	ret_reg,code_undef4
 C94A  CB		     2			retf
 = 00CA			     2		op2	= op2 + 1
 CA40  83 C4 02		     2			add	sp,2
 CA43  8B D5		     2			mov	temp,save_temp
 CA45  8B EF		     2			mov	entry_SP,SP80
 CA47  BF 0006		     2			mov	ret_reg,code_undef4
 CA4A  CB		     2			retf
 = 00CB			     2		op2	= op2 + 1
 CB40  83 C4 02		     2			add	sp,2
 CB43  8B D5		     2			mov	temp,save_temp
 CB45  8B EF		     2			mov	entry_SP,SP80
 CB47  BF 0006		     2			mov	ret_reg,code_undef4
 CB4A  CB		     2			retf
 = 00CC			     2		op2	= op2 + 1
 CC40  83 C4 02		     2			add	sp,2
 CC43  8B D5		     2			mov	temp,save_temp
 CC45  8B EF		     2			mov	entry_SP,SP80
 CC47  BF 0006		     2			mov	ret_reg,code_undef4
 CC4A  CB		     2			retf
 = 00CD			     2		op2	= op2 + 1
 CD40  83 C4 02		     2			add	sp,2
 CD43  8B D5		     2			mov	temp,save_temp
 CD45  8B EF		     2			mov	entry_SP,SP80
 CD47  BF 0006		     2			mov	ret_reg,code_undef4
 CD4A  CB		     2			retf
 = 00CE			     2		op2	= op2 + 1
 = 00CF			     1		op2	= 0ceH + 1
						SETX	1
 CE40  8B D5		     1			mov	temp,save_temp
 CE42  5D		     1			pop	save_temp
 CE43  3E: 80 4E 00 02	     1			or	byte ptr ds:[save_temp],1 shl 1
 CE48  8B EA		     1			mov	save_temp,temp
 CE4A  B2 00		     1			mov	temp_l,0
 CE4C  8A 34		     2			mov	temp_h,ds:[PC80]
 CE4E  46		     2			inc	PC80
 CE4F  FF E2		     2			jmp	temp
				CBX	0d6H
 CF40  83 C4 02		     2			add	sp,2
 CF43  8B D5		     2			mov	temp,save_temp
 CF45  8B EF		     2			mov	entry_SP,SP80
 CF47  BF 0006		     2			mov	ret_reg,code_undef4
 CF4A  CB		     2			retf
 = 00D0			     2		op2	= op2 + 1
 D040  83 C4 02		     2			add	sp,2
 D043  8B D5		     2			mov	temp,save_temp
 D045  8B EF		     2			mov	entry_SP,SP80
 D047  BF 0006		     2			mov	ret_reg,code_undef4
 D04A  CB		     2			retf
 = 00D1			     2		op2	= op2 + 1
 D140  83 C4 02		     2			add	sp,2
 D143  8B D5		     2			mov	temp,save_temp
 D145  8B EF		     2			mov	entry_SP,SP80
 D147  BF 0006		     2			mov	ret_reg,code_undef4
 D14A  CB		     2			retf
 = 00D2			     2		op2	= op2 + 1
 D240  83 C4 02		     2			add	sp,2
 D243  8B D5		     2			mov	temp,save_temp
 D245  8B EF		     2			mov	entry_SP,SP80
 D247  BF 0006		     2			mov	ret_reg,code_undef4
 D24A  CB		     2			retf
 = 00D3			     2		op2	= op2 + 1
 D340  83 C4 02		     2			add	sp,2
 D343  8B D5		     2			mov	temp,save_temp
 D345  8B EF		     2			mov	entry_SP,SP80
 D347  BF 0006		     2			mov	ret_reg,code_undef4
 D34A  CB		     2			retf
 = 00D4			     2		op2	= op2 + 1
 D440  83 C4 02		     2			add	sp,2
 D443  8B D5		     2			mov	temp,save_temp
 D445  8B EF		     2			mov	entry_SP,SP80
 D447  BF 0006		     2			mov	ret_reg,code_undef4
 D44A  CB		     2			retf
 = 00D5			     2		op2	= op2 + 1
 D540  83 C4 02		     2			add	sp,2
 D543  8B D5		     2			mov	temp,save_temp
 D545  8B EF		     2			mov	entry_SP,SP80
 D547  BF 0006		     2			mov	ret_reg,code_undef4
 D54A  CB		     2			retf
 = 00D6			     2		op2	= op2 + 1
 = 00D7			     1		op2	= 0d6H + 1
						SETX	2
 D640  8B D5		     1			mov	temp,save_temp
 D642  5D		     1			pop	save_temp
 D643  3E: 80 4E 00 04	     1			or	byte ptr ds:[save_temp],1 shl 2
 D648  8B EA		     1			mov	save_temp,temp
 D64A  B2 00		     1			mov	temp_l,0
 D64C  8A 34		     2			mov	temp_h,ds:[PC80]
 D64E  46		     2			inc	PC80
 D64F  FF E2		     2			jmp	temp
				CBX	0deH
 D740  83 C4 02		     2			add	sp,2
 D743  8B D5		     2			mov	temp,save_temp
 D745  8B EF		     2			mov	entry_SP,SP80
 D747  BF 0006		     2			mov	ret_reg,code_undef4
 D74A  CB		     2			retf
 = 00D8			     2		op2	= op2 + 1
 D840  83 C4 02		     2			add	sp,2
 D843  8B D5		     2			mov	temp,save_temp
 D845  8B EF		     2			mov	entry_SP,SP80
 D847  BF 0006		     2			mov	ret_reg,code_undef4
 D84A  CB		     2			retf
 = 00D9			     2		op2	= op2 + 1
 D940  83 C4 02		     2			add	sp,2
 D943  8B D5		     2			mov	temp,save_temp
 D945  8B EF		     2			mov	entry_SP,SP80
 D947  BF 0006		     2			mov	ret_reg,code_undef4
 D94A  CB		     2			retf
 = 00DA			     2		op2	= op2 + 1
 DA40  83 C4 02		     2			add	sp,2
 DA43  8B D5		     2			mov	temp,save_temp
 DA45  8B EF		     2			mov	entry_SP,SP80
 DA47  BF 0006		     2			mov	ret_reg,code_undef4
 DA4A  CB		     2			retf
 = 00DB			     2		op2	= op2 + 1
 DB40  83 C4 02		     2			add	sp,2
 DB43  8B D5		     2			mov	temp,save_temp
 DB45  8B EF		     2			mov	entry_SP,SP80
 DB47  BF 0006		     2			mov	ret_reg,code_undef4
 DB4A  CB		     2			retf
 = 00DC			     2		op2	= op2 + 1
 DC40  83 C4 02		     2			add	sp,2
 DC43  8B D5		     2			mov	temp,save_temp
 DC45  8B EF		     2			mov	entry_SP,SP80
 DC47  BF 0006		     2			mov	ret_reg,code_undef4
 DC4A  CB		     2			retf
 = 00DD			     2		op2	= op2 + 1
 DD40  83 C4 02		     2			add	sp,2
 DD43  8B D5		     2			mov	temp,save_temp
 DD45  8B EF		     2			mov	entry_SP,SP80
 DD47  BF 0006		     2			mov	ret_reg,code_undef4
 DD4A  CB		     2			retf
 = 00DE			     2		op2	= op2 + 1
 = 00DF			     1		op2	= 0deH + 1
						SETX	3
 DE40  8B D5		     1			mov	temp,save_temp
 DE42  5D		     1			pop	save_temp
 DE43  3E: 80 4E 00 08	     1			or	byte ptr ds:[save_temp],1 shl 3
 DE48  8B EA		     1			mov	save_temp,temp
 DE4A  B2 00		     1			mov	temp_l,0
 DE4C  8A 34		     2			mov	temp_h,ds:[PC80]
 DE4E  46		     2			inc	PC80
 DE4F  FF E2		     2			jmp	temp
				CBX	0e6H
 DF40  83 C4 02		     2			add	sp,2
 DF43  8B D5		     2			mov	temp,save_temp
 DF45  8B EF		     2			mov	entry_SP,SP80
 DF47  BF 0006		     2			mov	ret_reg,code_undef4
 DF4A  CB		     2			retf
 = 00E0			     2		op2	= op2 + 1
 E040  83 C4 02		     2			add	sp,2
 E043  8B D5		     2			mov	temp,save_temp
 E045  8B EF		     2			mov	entry_SP,SP80
 E047  BF 0006		     2			mov	ret_reg,code_undef4
 E04A  CB		     2			retf
 = 00E1			     2		op2	= op2 + 1
 E140  83 C4 02		     2			add	sp,2
 E143  8B D5		     2			mov	temp,save_temp
 E145  8B EF		     2			mov	entry_SP,SP80
 E147  BF 0006		     2			mov	ret_reg,code_undef4
 E14A  CB		     2			retf
 = 00E2			     2		op2	= op2 + 1
 E240  83 C4 02		     2			add	sp,2
 E243  8B D5		     2			mov	temp,save_temp
 E245  8B EF		     2			mov	entry_SP,SP80
 E247  BF 0006		     2			mov	ret_reg,code_undef4
 E24A  CB		     2			retf
 = 00E3			     2		op2	= op2 + 1
 E340  83 C4 02		     2			add	sp,2
 E343  8B D5		     2			mov	temp,save_temp
 E345  8B EF		     2			mov	entry_SP,SP80
 E347  BF 0006		     2			mov	ret_reg,code_undef4
 E34A  CB		     2			retf
 = 00E4			     2		op2	= op2 + 1
 E440  83 C4 02		     2			add	sp,2
 E443  8B D5		     2			mov	temp,save_temp
 E445  8B EF		     2			mov	entry_SP,SP80
 E447  BF 0006		     2			mov	ret_reg,code_undef4
 E44A  CB		     2			retf
 = 00E5			     2		op2	= op2 + 1
 E540  83 C4 02		     2			add	sp,2
 E543  8B D5		     2			mov	temp,save_temp
 E545  8B EF		     2			mov	entry_SP,SP80
 E547  BF 0006		     2			mov	ret_reg,code_undef4
 E54A  CB		     2			retf
 = 00E6			     2		op2	= op2 + 1
 = 00E7			     1		op2	= 0e6H + 1
						SETX	4
 E640  8B D5		     1			mov	temp,save_temp
 E642  5D		     1			pop	save_temp
 E643  3E: 80 4E 00 10	     1			or	byte ptr ds:[save_temp],1 shl 4
 E648  8B EA		     1			mov	save_temp,temp
 E64A  B2 00		     1			mov	temp_l,0
 E64C  8A 34		     2			mov	temp_h,ds:[PC80]
 E64E  46		     2			inc	PC80
 E64F  FF E2		     2			jmp	temp
				CBX	0eeH
 E740  83 C4 02		     2			add	sp,2
 E743  8B D5		     2			mov	temp,save_temp
 E745  8B EF		     2			mov	entry_SP,SP80
 E747  BF 0006		     2			mov	ret_reg,code_undef4
 E74A  CB		     2			retf
 = 00E8			     2		op2	= op2 + 1
 E840  83 C4 02		     2			add	sp,2
 E843  8B D5		     2			mov	temp,save_temp
 E845  8B EF		     2			mov	entry_SP,SP80
 E847  BF 0006		     2			mov	ret_reg,code_undef4
 E84A  CB		     2			retf
 = 00E9			     2		op2	= op2 + 1
 E940  83 C4 02		     2			add	sp,2
 E943  8B D5		     2			mov	temp,save_temp
 E945  8B EF		     2			mov	entry_SP,SP80
 E947  BF 0006		     2			mov	ret_reg,code_undef4
 E94A  CB		     2			retf
 = 00EA			     2		op2	= op2 + 1
 EA40  83 C4 02		     2			add	sp,2
 EA43  8B D5		     2			mov	temp,save_temp
 EA45  8B EF		     2			mov	entry_SP,SP80
 EA47  BF 0006		     2			mov	ret_reg,code_undef4
 EA4A  CB		     2			retf
 = 00EB			     2		op2	= op2 + 1
 EB40  83 C4 02		     2			add	sp,2
 EB43  8B D5		     2			mov	temp,save_temp
 EB45  8B EF		     2			mov	entry_SP,SP80
 EB47  BF 0006		     2			mov	ret_reg,code_undef4
 EB4A  CB		     2			retf
 = 00EC			     2		op2	= op2 + 1
 EC40  83 C4 02		     2			add	sp,2
 EC43  8B D5		     2			mov	temp,save_temp
 EC45  8B EF		     2			mov	entry_SP,SP80
 EC47  BF 0006		     2			mov	ret_reg,code_undef4
 EC4A  CB		     2			retf
 = 00ED			     2		op2	= op2 + 1
 ED40  83 C4 02		     2			add	sp,2
 ED43  8B D5		     2			mov	temp,save_temp
 ED45  8B EF		     2			mov	entry_SP,SP80
 ED47  BF 0006		     2			mov	ret_reg,code_undef4
 ED4A  CB		     2			retf
 = 00EE			     2		op2	= op2 + 1
 = 00EF			     1		op2	= 0eeH + 1
						SETX	5
 EE40  8B D5		     1			mov	temp,save_temp
 EE42  5D		     1			pop	save_temp
 EE43  3E: 80 4E 00 20	     1			or	byte ptr ds:[save_temp],1 shl 5
 EE48  8B EA		     1			mov	save_temp,temp
 EE4A  B2 00		     1			mov	temp_l,0
 EE4C  8A 34		     2			mov	temp_h,ds:[PC80]
 EE4E  46		     2			inc	PC80
 EE4F  FF E2		     2			jmp	temp
				CBX	0f6H
 EF40  83 C4 02		     2			add	sp,2
 EF43  8B D5		     2			mov	temp,save_temp
 EF45  8B EF		     2			mov	entry_SP,SP80
 EF47  BF 0006		     2			mov	ret_reg,code_undef4
 EF4A  CB		     2			retf
 = 00F0			     2		op2	= op2 + 1
 F040  83 C4 02		     2			add	sp,2
 F043  8B D5		     2			mov	temp,save_temp
 F045  8B EF		     2			mov	entry_SP,SP80
 F047  BF 0006		     2			mov	ret_reg,code_undef4
 F04A  CB		     2			retf
 = 00F1			     2		op2	= op2 + 1
 F140  83 C4 02		     2			add	sp,2
 F143  8B D5		     2			mov	temp,save_temp
 F145  8B EF		     2			mov	entry_SP,SP80
 F147  BF 0006		     2			mov	ret_reg,code_undef4
 F14A  CB		     2			retf
 = 00F2			     2		op2	= op2 + 1
 F240  83 C4 02		     2			add	sp,2
 F243  8B D5		     2			mov	temp,save_temp
 F245  8B EF		     2			mov	entry_SP,SP80
 F247  BF 0006		     2			mov	ret_reg,code_undef4
 F24A  CB		     2			retf
 = 00F3			     2		op2	= op2 + 1
 F340  83 C4 02		     2			add	sp,2
 F343  8B D5		     2			mov	temp,save_temp
 F345  8B EF		     2			mov	entry_SP,SP80
 F347  BF 0006		     2			mov	ret_reg,code_undef4
 F34A  CB		     2			retf
 = 00F4			     2		op2	= op2 + 1
 F440  83 C4 02		     2			add	sp,2
 F443  8B D5		     2			mov	temp,save_temp
 F445  8B EF		     2			mov	entry_SP,SP80
 F447  BF 0006		     2			mov	ret_reg,code_undef4
 F44A  CB		     2			retf
 = 00F5			     2		op2	= op2 + 1
 F540  83 C4 02		     2			add	sp,2
 F543  8B D5		     2			mov	temp,save_temp
 F545  8B EF		     2			mov	entry_SP,SP80
 F547  BF 0006		     2			mov	ret_reg,code_undef4
 F54A  CB		     2			retf
 = 00F6			     2		op2	= op2 + 1
 = 00F7			     1		op2	= 0f6H + 1
						SETX	6
 F640  8B D5		     1			mov	temp,save_temp
 F642  5D		     1			pop	save_temp
 F643  3E: 80 4E 00 40	     1			or	byte ptr ds:[save_temp],1 shl 6
 F648  8B EA		     1			mov	save_temp,temp
 F64A  B2 00		     1			mov	temp_l,0
 F64C  8A 34		     2			mov	temp_h,ds:[PC80]
 F64E  46		     2			inc	PC80
 F64F  FF E2		     2			jmp	temp
				CBX	0feH
 F740  83 C4 02		     2			add	sp,2
 F743  8B D5		     2			mov	temp,save_temp
 F745  8B EF		     2			mov	entry_SP,SP80
 F747  BF 0006		     2			mov	ret_reg,code_undef4
 F74A  CB		     2			retf
 = 00F8			     2		op2	= op2 + 1
 F840  83 C4 02		     2			add	sp,2
 F843  8B D5		     2			mov	temp,save_temp
 F845  8B EF		     2			mov	entry_SP,SP80
 F847  BF 0006		     2			mov	ret_reg,code_undef4
 F84A  CB		     2			retf
 = 00F9			     2		op2	= op2 + 1
 F940  83 C4 02		     2			add	sp,2
 F943  8B D5		     2			mov	temp,save_temp
 F945  8B EF		     2			mov	entry_SP,SP80
 F947  BF 0006		     2			mov	ret_reg,code_undef4
 F94A  CB		     2			retf
 = 00FA			     2		op2	= op2 + 1
 FA40  83 C4 02		     2			add	sp,2
 FA43  8B D5		     2			mov	temp,save_temp
 FA45  8B EF		     2			mov	entry_SP,SP80
 FA47  BF 0006		     2			mov	ret_reg,code_undef4
 FA4A  CB		     2			retf
 = 00FB			     2		op2	= op2 + 1
 FB40  83 C4 02		     2			add	sp,2
 FB43  8B D5		     2			mov	temp,save_temp
 FB45  8B EF		     2			mov	entry_SP,SP80
 FB47  BF 0006		     2			mov	ret_reg,code_undef4
 FB4A  CB		     2			retf
 = 00FC			     2		op2	= op2 + 1
 FC40  83 C4 02		     2			add	sp,2
 FC43  8B D5		     2			mov	temp,save_temp
 FC45  8B EF		     2			mov	entry_SP,SP80
 FC47  BF 0006		     2			mov	ret_reg,code_undef4
 FC4A  CB		     2			retf
 = 00FD			     2		op2	= op2 + 1
 FD40  83 C4 02		     2			add	sp,2
 FD43  8B D5		     2			mov	temp,save_temp
 FD45  8B EF		     2			mov	entry_SP,SP80
 FD47  BF 0006		     2			mov	ret_reg,code_undef4
 FD4A  CB		     2			retf
 = 00FE			     2		op2	= op2 + 1
 = 00FF			     1		op2	= 0feH + 1
						SETX	7
 FE40  8B D5		     1			mov	temp,save_temp
 FE42  5D		     1			pop	save_temp
 FE43  3E: 80 4E 00 80	     1			or	byte ptr ds:[save_temp],1 shl 7
 FE48  8B EA		     1			mov	save_temp,temp
 FE4A  B2 00		     1			mov	temp_l,0
 FE4C  8A 34		     2			mov	temp_h,ds:[PC80]
 FE4E  46		     2			inc	PC80
 FE4F  FF E2		     2			jmp	temp

				CBX	0ffh
 = 0100			     1		op2	= 0ffh + 1
 FF40  83 C4 02					add	sp,2
 FF43  8B D5					mov	temp,save_temp
 FF45  8B EF					mov	entry_SP,SP80
 FF47  BF 0006					mov	ret_reg,code_undef4
 FF4A  CB					retf

				;================================================
				;=============  code ED xx  =====================
				;================================================

 = 0000				op2	=	0

				ED	macro	nn
					rept	nn - op2
						org	org_ED + op2 * 100h
						mov	temp,save_temp
						mov	entry_SP,SP80
						mov	ret_reg,code_undef2
						retf
						op2	= op2 + 1
					endm
					op2	= nn + 1
					org	org_ED + nn * 100h
				endm

				IO	macro
						mov	temp,save_temp
						mov	entry_SP,SP80
						mov	ret_reg,code_IO
						retf
				endm

				MLT		macro	src
						mov	temp,ax
						mov	ax,src
						mul	ah
						mov	src,ax
						mov	ax,temp
						mov	temp_l,0
						fetch1
				endm

				TST		macro	src
				ifidni		src,temp_h
						mov	temp,save_temp
						test	A,src
				elseifidni	src,temp_l
						mov	temp,save_temp
						test	A,src
				else
						test	A,src
				endif
						lahf
						or	ah,h_flag
						and	ah,not (n_flag or c_flag)
						mov	temp_l,0
						fetch1
				endm

				SBC8x	macro	dst,src
						sahf
						sbb	dst,src
						lahf
						jo	@f
						and	ah,not(v_flag)
				;		or	ah,n_flag
						mov	temp_l,0
						fetch1
				@@:		or	ah,(v_flag or n_flag)
						mov	temp_l,0
						fetch1
				endm

				ADC8x	macro	dst,src
						sahf
						adc	dst,src
						lahf
						jo	@f
						and	ah,not (v_flag or n_flag)
						mov	temp_l,0
						fetch1
				@@:		and	ah,not n_flag
						or	ah,v_flag
						mov	temp_l,0
						fetch1
				endm

				;--- LD ??,??
				LD2		macro	dst,src

				ifidni		dst,src

				elseifidni	dst,temp_h

						mov	temp,save_temp
						mov	dst,src
						mov	save_temp,temp

				elseifidni	dst,temp_l

						mov	temp,save_temp
						mov	dst,src
						mov	save_temp,temp

				elseifidni	src,temp_h

						mov	temp,save_temp
						mov	dst,src

				elseifidni	src,temp_l

						mov	temp,save_temp
						mov	dst,src
				else
						mov	dst,src
				endif
						mov	temp_l,0
						fetch1
				endm

				;--------------------------------------
				ED	04H
 00A0  8B D5		     2			mov	temp,save_temp
 00A2  8B EF		     2			mov	entry_SP,SP80
 00A4  BF 0005		     2			mov	ret_reg,code_undef2
 00A7  CB		     2			retf
 = 0001			     2			op2	= op2 + 1
 01A0  8B D5		     2			mov	temp,save_temp
 01A2  8B EF		     2			mov	entry_SP,SP80
 01A4  BF 0005		     2			mov	ret_reg,code_undef2
 01A7  CB		     2			retf
 = 0002			     2			op2	= op2 + 1
 02A0  8B D5		     2			mov	temp,save_temp
 02A2  8B EF		     2			mov	entry_SP,SP80
 02A4  BF 0005		     2			mov	ret_reg,code_undef2
 02A7  CB		     2			retf
 = 0003			     2			op2	= op2 + 1
 03A0  8B D5		     2			mov	temp,save_temp
 03A2  8B EF		     2			mov	entry_SP,SP80
 03A4  BF 0005		     2			mov	ret_reg,code_undef2
 03A7  CB		     2			retf
 = 0004			     2			op2	= op2 + 1
 = 0005			     1		op2	= 04H + 1
						TST	B
 04A0  84 C5		     1			test	A,B
 04A2  9F		     1			lahf
 04A3  80 CC 10		     1			or	ah,h_flag
 04A6  80 E4 FC		     1			and	ah,not (n_flag or c_flag)
 04A9  B2 00		     1			mov	temp_l,0
 04AB  8A 34		     2			mov	temp_h,ds:[PC80]
 04AD  46		     2			inc	PC80
 04AE  FF E2		     2			jmp	temp
				ED	0cH
 05A0  8B D5		     2			mov	temp,save_temp
 05A2  8B EF		     2			mov	entry_SP,SP80
 05A4  BF 0005		     2			mov	ret_reg,code_undef2
 05A7  CB		     2			retf
 = 0006			     2			op2	= op2 + 1
 06A0  8B D5		     2			mov	temp,save_temp
 06A2  8B EF		     2			mov	entry_SP,SP80
 06A4  BF 0005		     2			mov	ret_reg,code_undef2
 06A7  CB		     2			retf
 = 0007			     2			op2	= op2 + 1
 07A0  8B D5		     2			mov	temp,save_temp
 07A2  8B EF		     2			mov	entry_SP,SP80
 07A4  BF 0005		     2			mov	ret_reg,code_undef2
 07A7  CB		     2			retf
 = 0008			     2			op2	= op2 + 1
 08A0  8B D5		     2			mov	temp,save_temp
 08A2  8B EF		     2			mov	entry_SP,SP80
 08A4  BF 0005		     2			mov	ret_reg,code_undef2
 08A7  CB		     2			retf
 = 0009			     2			op2	= op2 + 1
 09A0  8B D5		     2			mov	temp,save_temp
 09A2  8B EF		     2			mov	entry_SP,SP80
 09A4  BF 0005		     2			mov	ret_reg,code_undef2
 09A7  CB		     2			retf
 = 000A			     2			op2	= op2 + 1
 0AA0  8B D5		     2			mov	temp,save_temp
 0AA2  8B EF		     2			mov	entry_SP,SP80
 0AA4  BF 0005		     2			mov	ret_reg,code_undef2
 0AA7  CB		     2			retf
 = 000B			     2			op2	= op2 + 1
 0BA0  8B D5		     2			mov	temp,save_temp
 0BA2  8B EF		     2			mov	entry_SP,SP80
 0BA4  BF 0005		     2			mov	ret_reg,code_undef2
 0BA7  CB		     2			retf
 = 000C			     2			op2	= op2 + 1
 = 000D			     1		op2	= 0cH + 1
						TST	C_reg
 0CA0  84 C1		     1			test	A,C_reg
 0CA2  9F		     1			lahf
 0CA3  80 CC 10		     1			or	ah,h_flag
 0CA6  80 E4 FC		     1			and	ah,not (n_flag or c_flag)
 0CA9  B2 00		     1			mov	temp_l,0
 0CAB  8A 34		     2			mov	temp_h,ds:[PC80]
 0CAD  46		     2			inc	PC80
 0CAE  FF E2		     2			jmp	temp
				ED	14H
 0DA0  8B D5		     2			mov	temp,save_temp
 0DA2  8B EF		     2			mov	entry_SP,SP80
 0DA4  BF 0005		     2			mov	ret_reg,code_undef2
 0DA7  CB		     2			retf
 = 000E			     2			op2	= op2 + 1
 0EA0  8B D5		     2			mov	temp,save_temp
 0EA2  8B EF		     2			mov	entry_SP,SP80
 0EA4  BF 0005		     2			mov	ret_reg,code_undef2
 0EA7  CB		     2			retf
 = 000F			     2			op2	= op2 + 1
 0FA0  8B D5		     2			mov	temp,save_temp
 0FA2  8B EF		     2			mov	entry_SP,SP80
 0FA4  BF 0005		     2			mov	ret_reg,code_undef2
 0FA7  CB		     2			retf
 = 0010			     2			op2	= op2 + 1
 10A0  8B D5		     2			mov	temp,save_temp
 10A2  8B EF		     2			mov	entry_SP,SP80
 10A4  BF 0005		     2			mov	ret_reg,code_undef2
 10A7  CB		     2			retf
 = 0011			     2			op2	= op2 + 1
 11A0  8B D5		     2			mov	temp,save_temp
 11A2  8B EF		     2			mov	entry_SP,SP80
 11A4  BF 0005		     2			mov	ret_reg,code_undef2
 11A7  CB		     2			retf
 = 0012			     2			op2	= op2 + 1
 12A0  8B D5		     2			mov	temp,save_temp
 12A2  8B EF		     2			mov	entry_SP,SP80
 12A4  BF 0005		     2			mov	ret_reg,code_undef2
 12A7  CB		     2			retf
 = 0013			     2			op2	= op2 + 1
 13A0  8B D5		     2			mov	temp,save_temp
 13A2  8B EF		     2			mov	entry_SP,SP80
 13A4  BF 0005		     2			mov	ret_reg,code_undef2
 13A7  CB		     2			retf
 = 0014			     2			op2	= op2 + 1
 = 0015			     1		op2	= 14H + 1
						TST	D
 14A0  8B D5		     1			mov	temp,save_temp
 14A2  84 C6		     1			test	A,D
 14A4  9F		     1			lahf
 14A5  80 CC 10		     1			or	ah,h_flag
 14A8  80 E4 FC		     1			and	ah,not (n_flag or c_flag)
 14AB  B2 00		     1			mov	temp_l,0
 14AD  8A 34		     2			mov	temp_h,ds:[PC80]
 14AF  46		     2			inc	PC80
 14B0  FF E2		     2			jmp	temp
				ED	1cH
 15A0  8B D5		     2			mov	temp,save_temp
 15A2  8B EF		     2			mov	entry_SP,SP80
 15A4  BF 0005		     2			mov	ret_reg,code_undef2
 15A7  CB		     2			retf
 = 0016			     2			op2	= op2 + 1
 16A0  8B D5		     2			mov	temp,save_temp
 16A2  8B EF		     2			mov	entry_SP,SP80
 16A4  BF 0005		     2			mov	ret_reg,code_undef2
 16A7  CB		     2			retf
 = 0017			     2			op2	= op2 + 1
 17A0  8B D5		     2			mov	temp,save_temp
 17A2  8B EF		     2			mov	entry_SP,SP80
 17A4  BF 0005		     2			mov	ret_reg,code_undef2
 17A7  CB		     2			retf
 = 0018			     2			op2	= op2 + 1
 18A0  8B D5		     2			mov	temp,save_temp
 18A2  8B EF		     2			mov	entry_SP,SP80
 18A4  BF 0005		     2			mov	ret_reg,code_undef2
 18A7  CB		     2			retf
 = 0019			     2			op2	= op2 + 1
 19A0  8B D5		     2			mov	temp,save_temp
 19A2  8B EF		     2			mov	entry_SP,SP80
 19A4  BF 0005		     2			mov	ret_reg,code_undef2
 19A7  CB		     2			retf
 = 001A			     2			op2	= op2 + 1
 1AA0  8B D5		     2			mov	temp,save_temp
 1AA2  8B EF		     2			mov	entry_SP,SP80
 1AA4  BF 0005		     2			mov	ret_reg,code_undef2
 1AA7  CB		     2			retf
 = 001B			     2			op2	= op2 + 1
 1BA0  8B D5		     2			mov	temp,save_temp
 1BA2  8B EF		     2			mov	entry_SP,SP80
 1BA4  BF 0005		     2			mov	ret_reg,code_undef2
 1BA7  CB		     2			retf
 = 001C			     2			op2	= op2 + 1
 = 001D			     1		op2	= 1cH + 1
						TST	E
 1CA0  8B D5		     1			mov	temp,save_temp
 1CA2  84 C2		     1			test	A,E
 1CA4  9F		     1			lahf
 1CA5  80 CC 10		     1			or	ah,h_flag
 1CA8  80 E4 FC		     1			and	ah,not (n_flag or c_flag)
 1CAB  B2 00		     1			mov	temp_l,0
 1CAD  8A 34		     2			mov	temp_h,ds:[PC80]
 1CAF  46		     2			inc	PC80
 1CB0  FF E2		     2			jmp	temp
				ED	24H
 1DA0  8B D5		     2			mov	temp,save_temp
 1DA2  8B EF		     2			mov	entry_SP,SP80
 1DA4  BF 0005		     2			mov	ret_reg,code_undef2
 1DA7  CB		     2			retf
 = 001E			     2			op2	= op2 + 1
 1EA0  8B D5		     2			mov	temp,save_temp
 1EA2  8B EF		     2			mov	entry_SP,SP80
 1EA4  BF 0005		     2			mov	ret_reg,code_undef2
 1EA7  CB		     2			retf
 = 001F			     2			op2	= op2 + 1
 1FA0  8B D5		     2			mov	temp,save_temp
 1FA2  8B EF		     2			mov	entry_SP,SP80
 1FA4  BF 0005		     2			mov	ret_reg,code_undef2
 1FA7  CB		     2			retf
 = 0020			     2			op2	= op2 + 1
 20A0  8B D5		     2			mov	temp,save_temp
 20A2  8B EF		     2			mov	entry_SP,SP80
 20A4  BF 0005		     2			mov	ret_reg,code_undef2
 20A7  CB		     2			retf
 = 0021			     2			op2	= op2 + 1
 21A0  8B D5		     2			mov	temp,save_temp
 21A2  8B EF		     2			mov	entry_SP,SP80
 21A4  BF 0005		     2			mov	ret_reg,code_undef2
 21A7  CB		     2			retf
 = 0022			     2			op2	= op2 + 1
 22A0  8B D5		     2			mov	temp,save_temp
 22A2  8B EF		     2			mov	entry_SP,SP80
 22A4  BF 0005		     2			mov	ret_reg,code_undef2
 22A7  CB		     2			retf
 = 0023			     2			op2	= op2 + 1
 23A0  8B D5		     2			mov	temp,save_temp
 23A2  8B EF		     2			mov	entry_SP,SP80
 23A4  BF 0005		     2			mov	ret_reg,code_undef2
 23A7  CB		     2			retf
 = 0024			     2			op2	= op2 + 1
 = 0025			     1		op2	= 24H + 1
						TST	H
 24A0  84 C7		     1			test	A,H
 24A2  9F		     1			lahf
 24A3  80 CC 10		     1			or	ah,h_flag
 24A6  80 E4 FC		     1			and	ah,not (n_flag or c_flag)
 24A9  B2 00		     1			mov	temp_l,0
 24AB  8A 34		     2			mov	temp_h,ds:[PC80]
 24AD  46		     2			inc	PC80
 24AE  FF E2		     2			jmp	temp
				ED	2cH
 25A0  8B D5		     2			mov	temp,save_temp
 25A2  8B EF		     2			mov	entry_SP,SP80
 25A4  BF 0005		     2			mov	ret_reg,code_undef2
 25A7  CB		     2			retf
 = 0026			     2			op2	= op2 + 1
 26A0  8B D5		     2			mov	temp,save_temp
 26A2  8B EF		     2			mov	entry_SP,SP80
 26A4  BF 0005		     2			mov	ret_reg,code_undef2
 26A7  CB		     2			retf
 = 0027			     2			op2	= op2 + 1
 27A0  8B D5		     2			mov	temp,save_temp
 27A2  8B EF		     2			mov	entry_SP,SP80
 27A4  BF 0005		     2			mov	ret_reg,code_undef2
 27A7  CB		     2			retf
 = 0028			     2			op2	= op2 + 1
 28A0  8B D5		     2			mov	temp,save_temp
 28A2  8B EF		     2			mov	entry_SP,SP80
 28A4  BF 0005		     2			mov	ret_reg,code_undef2
 28A7  CB		     2			retf
 = 0029			     2			op2	= op2 + 1
 29A0  8B D5		     2			mov	temp,save_temp
 29A2  8B EF		     2			mov	entry_SP,SP80
 29A4  BF 0005		     2			mov	ret_reg,code_undef2
 29A7  CB		     2			retf
 = 002A			     2			op2	= op2 + 1
 2AA0  8B D5		     2			mov	temp,save_temp
 2AA2  8B EF		     2			mov	entry_SP,SP80
 2AA4  BF 0005		     2			mov	ret_reg,code_undef2
 2AA7  CB		     2			retf
 = 002B			     2			op2	= op2 + 1
 2BA0  8B D5		     2			mov	temp,save_temp
 2BA2  8B EF		     2			mov	entry_SP,SP80
 2BA4  BF 0005		     2			mov	ret_reg,code_undef2
 2BA7  CB		     2			retf
 = 002C			     2			op2	= op2 + 1
 = 002D			     1		op2	= 2cH + 1
						TST	L
 2CA0  84 C3		     1			test	A,L
 2CA2  9F		     1			lahf
 2CA3  80 CC 10		     1			or	ah,h_flag
 2CA6  80 E4 FC		     1			and	ah,not (n_flag or c_flag)
 2CA9  B2 00		     1			mov	temp_l,0
 2CAB  8A 34		     2			mov	temp_h,ds:[PC80]
 2CAD  46		     2			inc	PC80
 2CAE  FF E2		     2			jmp	temp
				ED	34H
 2DA0  8B D5		     2			mov	temp,save_temp
 2DA2  8B EF		     2			mov	entry_SP,SP80
 2DA4  BF 0005		     2			mov	ret_reg,code_undef2
 2DA7  CB		     2			retf
 = 002E			     2			op2	= op2 + 1
 2EA0  8B D5		     2			mov	temp,save_temp
 2EA2  8B EF		     2			mov	entry_SP,SP80
 2EA4  BF 0005		     2			mov	ret_reg,code_undef2
 2EA7  CB		     2			retf
 = 002F			     2			op2	= op2 + 1
 2FA0  8B D5		     2			mov	temp,save_temp
 2FA2  8B EF		     2			mov	entry_SP,SP80
 2FA4  BF 0005		     2			mov	ret_reg,code_undef2
 2FA7  CB		     2			retf
 = 0030			     2			op2	= op2 + 1
 30A0  8B D5		     2			mov	temp,save_temp
 30A2  8B EF		     2			mov	entry_SP,SP80
 30A4  BF 0005		     2			mov	ret_reg,code_undef2
 30A7  CB		     2			retf
 = 0031			     2			op2	= op2 + 1
 31A0  8B D5		     2			mov	temp,save_temp
 31A2  8B EF		     2			mov	entry_SP,SP80
 31A4  BF 0005		     2			mov	ret_reg,code_undef2
 31A7  CB		     2			retf
 = 0032			     2			op2	= op2 + 1
 32A0  8B D5		     2			mov	temp,save_temp
 32A2  8B EF		     2			mov	entry_SP,SP80
 32A4  BF 0005		     2			mov	ret_reg,code_undef2
 32A7  CB		     2			retf
 = 0033			     2			op2	= op2 + 1
 33A0  8B D5		     2			mov	temp,save_temp
 33A2  8B EF		     2			mov	entry_SP,SP80
 33A4  BF 0005		     2			mov	ret_reg,code_undef2
 33A7  CB		     2			retf
 = 0034			     2			op2	= op2 + 1
 = 0035			     1		op2	= 34H + 1
						TST	M
 34A0  84 07		     1			test	A,M
 34A2  9F		     1			lahf
 34A3  80 CC 10		     1			or	ah,h_flag
 34A6  80 E4 FC		     1			and	ah,not (n_flag or c_flag)
 34A9  B2 00		     1			mov	temp_l,0
 34AB  8A 34		     2			mov	temp_h,ds:[PC80]
 34AD  46		     2			inc	PC80
 34AE  FF E2		     2			jmp	temp
				ED	3cH
 35A0  8B D5		     2			mov	temp,save_temp
 35A2  8B EF		     2			mov	entry_SP,SP80
 35A4  BF 0005		     2			mov	ret_reg,code_undef2
 35A7  CB		     2			retf
 = 0036			     2			op2	= op2 + 1
 36A0  8B D5		     2			mov	temp,save_temp
 36A2  8B EF		     2			mov	entry_SP,SP80
 36A4  BF 0005		     2			mov	ret_reg,code_undef2
 36A7  CB		     2			retf
 = 0037			     2			op2	= op2 + 1
 37A0  8B D5		     2			mov	temp,save_temp
 37A2  8B EF		     2			mov	entry_SP,SP80
 37A4  BF 0005		     2			mov	ret_reg,code_undef2
 37A7  CB		     2			retf
 = 0038			     2			op2	= op2 + 1
 38A0  8B D5		     2			mov	temp,save_temp
 38A2  8B EF		     2			mov	entry_SP,SP80
 38A4  BF 0005		     2			mov	ret_reg,code_undef2
 38A7  CB		     2			retf
 = 0039			     2			op2	= op2 + 1
 39A0  8B D5		     2			mov	temp,save_temp
 39A2  8B EF		     2			mov	entry_SP,SP80
 39A4  BF 0005		     2			mov	ret_reg,code_undef2
 39A7  CB		     2			retf
 = 003A			     2			op2	= op2 + 1
 3AA0  8B D5		     2			mov	temp,save_temp
 3AA2  8B EF		     2			mov	entry_SP,SP80
 3AA4  BF 0005		     2			mov	ret_reg,code_undef2
 3AA7  CB		     2			retf
 = 003B			     2			op2	= op2 + 1
 3BA0  8B D5		     2			mov	temp,save_temp
 3BA2  8B EF		     2			mov	entry_SP,SP80
 3BA4  BF 0005		     2			mov	ret_reg,code_undef2
 3BA7  CB		     2			retf
 = 003C			     2			op2	= op2 + 1
 = 003D			     1		op2	= 3cH + 1
						TST	A
 3CA0  84 C0		     1			test	A,A
 3CA2  9F		     1			lahf
 3CA3  80 CC 10		     1			or	ah,h_flag
 3CA6  80 E4 FC		     1			and	ah,not (n_flag or c_flag)
 3CA9  B2 00		     1			mov	temp_l,0
 3CAB  8A 34		     2			mov	temp_h,ds:[PC80]
 3CAD  46		     2			inc	PC80
 3CAE  FF E2		     2			jmp	temp

				ED	40H				;IN	B,(C)
 3DA0  8B D5		     2			mov	temp,save_temp
 3DA2  8B EF		     2			mov	entry_SP,SP80
 3DA4  BF 0005		     2			mov	ret_reg,code_undef2
 3DA7  CB		     2			retf
 = 003E			     2			op2	= op2 + 1
 3EA0  8B D5		     2			mov	temp,save_temp
 3EA2  8B EF		     2			mov	entry_SP,SP80
 3EA4  BF 0005		     2			mov	ret_reg,code_undef2
 3EA7  CB		     2			retf
 = 003F			     2			op2	= op2 + 1
 3FA0  8B D5		     2			mov	temp,save_temp
 3FA2  8B EF		     2			mov	entry_SP,SP80
 3FA4  BF 0005		     2			mov	ret_reg,code_undef2
 3FA7  CB		     2			retf
 = 0040			     2			op2	= op2 + 1
 = 0041			     1		op2	= 40H + 1
						IO
 40A0  8B D5		     1			mov	temp,save_temp
 40A2  8B EF		     1			mov	entry_SP,SP80
 40A4  BF 0004		     1			mov	ret_reg,code_IO
 40A7  CB		     1			retf
				ED	41H				;OUT	(C),B
 = 0042			     1		op2	= 41H + 1
						IO
 41A0  8B D5		     1			mov	temp,save_temp
 41A2  8B EF		     1			mov	entry_SP,SP80
 41A4  BF 0004		     1			mov	ret_reg,code_IO
 41A7  CB		     1			retf
				ED	42H				;SBC	HL,BC
 = 0043			     1		op2	= 42H + 1
						SBC8x	HL,BC
 42A0  9E		     1			sahf
 42A1  1B D9		     1			sbb	HL,BC
 42A3  9F		     1			lahf
 42A4  70 0A		     1			jo	@f
 42A6  80 E4 FB		     1			and	ah,not(v_flag)
 42A9  B2 00		     1			mov	temp_l,0
 42AB  8A 34		     2			mov	temp_h,ds:[PC80]
 42AD  46		     2			inc	PC80
 42AE  FF E2		     2			jmp	temp
 42B0  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 42B3  B2 00		     1			mov	temp_l,0
 42B5  8A 34		     2			mov	temp_h,ds:[PC80]
 42B7  46		     2			inc	PC80
 42B8  FF E2		     2			jmp	temp

				ED	43H				;LD	(nn),BC
 = 0044			     1		op2	= 43H + 1
 43A0  8B D5					mov	temp,save_temp
 43A2  8B 2C					mov	save_temp,ds:[PC80]
 43A4  3E: 89 4E 00				mov	ds:[save_temp],BC
 43A8  8B EA					mov	save_temp,temp
 43AA  B2 00					mov	temp_l,0
						fetch3
 43AC  8A 74 02		     1			mov	temp_h,ds:[PC80+2]
 43AF  83 C6 03		     1			add	PC80,3
 43B2  FF E2		     1			jmp	temp

				ED	44H				;NEG
 = 0045			     1		op2	= 44H + 1
 44A0  F6 D8					neg	A
 44A2  9F					lahf
 44A3  70 0A					jo	@f
 44A5  80 E4 FB					and	ah,not(v_flag)
				;		or	ah,n_flag
 44A8  B2 00					mov	temp_l,0
						fetch1
 44AA  8A 34		     1			mov	temp_h,ds:[PC80]
 44AC  46		     1			inc	PC80
 44AD  FF E2		     1			jmp	temp
 44AF  80 CC 06			@@:		or	ah,(v_flag or n_flag)
 44B2  B2 00					mov	temp_l,0
						fetch1
 44B4  8A 34		     1			mov	temp_h,ds:[PC80]
 44B6  46		     1			inc	PC80
 44B7  FF E2		     1			jmp	temp

				ED	45H				;RETN
 = 0046			     1		op2	= 45H + 1
						IO
 45A0  8B D5		     1			mov	temp,save_temp
 45A2  8B EF		     1			mov	entry_SP,SP80
 45A4  BF 0004		     1			mov	ret_reg,code_IO
 45A7  CB		     1			retf
				ED	46H				;IM	0(do nothing)
 = 0047			     1		op2	= 46H + 1
 46A0  B2 00					mov	temp_l,0
						fetch1
 46A2  8A 34		     1			mov	temp_h,ds:[PC80]
 46A4  46		     1			inc	PC80
 46A5  FF E2		     1			jmp	temp

				ED	47H				;LD	I,A
 = 0048			     1		op2	= 47H + 1
 47A0  2E: A2 00FC				mov	I,A
 47A4  B2 00					mov	temp_l,0
						fetch1
 47A6  8A 34		     1			mov	temp_h,ds:[PC80]
 47A8  46		     1			inc	PC80
 47A9  FF E2		     1			jmp	temp
				ED	48H				;IN	C,(C)
 = 0049			     1		op2	= 48H + 1
						IO
 48A0  8B D5		     1			mov	temp,save_temp
 48A2  8B EF		     1			mov	entry_SP,SP80
 48A4  BF 0004		     1			mov	ret_reg,code_IO
 48A7  CB		     1			retf
				ED	49H				;OUT	(C),C
 = 004A			     1		op2	= 49H + 1
						IO
 49A0  8B D5		     1			mov	temp,save_temp
 49A2  8B EF		     1			mov	entry_SP,SP80
 49A4  BF 0004		     1			mov	ret_reg,code_IO
 49A7  CB		     1			retf
				ED	4aH				;ADC	HL,BC
 = 004B			     1		op2	= 4aH + 1
						ADC8x	HL,BC
 4AA0  9E		     1			sahf
 4AA1  13 D9		     1			adc	HL,BC
 4AA3  9F		     1			lahf
 4AA4  70 0A		     1			jo	@f
 4AA6  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 4AA9  B2 00		     1			mov	temp_l,0
 4AAB  8A 34		     2			mov	temp_h,ds:[PC80]
 4AAD  46		     2			inc	PC80
 4AAE  FF E2		     2			jmp	temp
 4AB0  80 E4 FD		     1	@@:		and	ah,not n_flag
 4AB3  80 CC 04		     1			or	ah,v_flag
 4AB6  B2 00		     1			mov	temp_l,0
 4AB8  8A 34		     2			mov	temp_h,ds:[PC80]
 4ABA  46		     2			inc	PC80
 4ABB  FF E2		     2			jmp	temp

				ED	4bH				;LD	BC,(nn)
 = 004C			     1		op2	= 4bH + 1
				ifidni	BC,temp
				else
 4BA0  8B D5					mov	temp,save_temp
 4BA2  8B 2C					mov	save_temp,ds:[PC80]
 4BA4  3E: 8B 4E 00				mov	BC,ds:[save_temp]
 4BA8  8B EA					mov	save_temp,temp
 4BAA  B2 00					mov	temp_l,0
						fetch3
 4BAC  8A 74 02		     1			mov	temp_h,ds:[PC80+2]
 4BAF  83 C6 03		     1			add	PC80,3
 4BB2  FF E2		     1			jmp	temp
				endif

				ED	4cH				;MLT	BC
 = 004D			     1		op2	= 4cH + 1
						MLT	BC
 4CA0  8B D0		     1			mov	temp,ax
 4CA2  8B C1		     1			mov	ax,BC
 4CA4  F6 E4		     1			mul	ah
 4CA6  8B C8		     1			mov	BC,ax
 4CA8  8B C2		     1			mov	ax,temp
 4CAA  B2 00		     1			mov	temp_l,0
 4CAC  8A 34		     2			mov	temp_h,ds:[PC80]
 4CAE  46		     2			inc	PC80
 4CAF  FF E2		     2			jmp	temp

				ED	4dH				;RETI
 = 004E			     1		op2	= 4dH + 1
						IO
 4DA0  8B D5		     1			mov	temp,save_temp
 4DA2  8B EF		     1			mov	entry_SP,SP80
 4DA4  BF 0004		     1			mov	ret_reg,code_IO
 4DA7  CB		     1			retf

				ED	4fH				;LD	R,A
 4EA0  8B D5		     2			mov	temp,save_temp
 4EA2  8B EF		     2			mov	entry_SP,SP80
 4EA4  BF 0005		     2			mov	ret_reg,code_undef2
 4EA7  CB		     2			retf
 = 004F			     2			op2	= op2 + 1
 = 0050			     1		op2	= 4fH + 1
 4FA0  2E: A2 00FD				mov	R,A
 4FA4  B2 00					mov	temp_l,0
						fetch1
 4FA6  8A 34		     1			mov	temp_h,ds:[PC80]
 4FA8  46		     1			inc	PC80
 4FA9  FF E2		     1			jmp	temp

				ED	50H				;IN	D,(C)
 = 0051			     1		op2	= 50H + 1
						IO
 50A0  8B D5		     1			mov	temp,save_temp
 50A2  8B EF		     1			mov	entry_SP,SP80
 50A4  BF 0004		     1			mov	ret_reg,code_IO
 50A7  CB		     1			retf
				ED	51H				;OUT	(C),D
 = 0052			     1		op2	= 51H + 1
						IO
 51A0  8B D5		     1			mov	temp,save_temp
 51A2  8B EF		     1			mov	entry_SP,SP80
 51A4  BF 0004		     1			mov	ret_reg,code_IO
 51A7  CB		     1			retf
				ED	52H				;SBC	HL,DE
 = 0053			     1		op2	= 52H + 1
						SBC8x	HL,DE
 52A0  9E		     1			sahf
 52A1  1B DD		     1			sbb	HL,DE
 52A3  9F		     1			lahf
 52A4  70 0A		     1			jo	@f
 52A6  80 E4 FB		     1			and	ah,not(v_flag)
 52A9  B2 00		     1			mov	temp_l,0
 52AB  8A 34		     2			mov	temp_h,ds:[PC80]
 52AD  46		     2			inc	PC80
 52AE  FF E2		     2			jmp	temp
 52B0  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 52B3  B2 00		     1			mov	temp_l,0
 52B5  8A 34		     2			mov	temp_h,ds:[PC80]
 52B7  46		     2			inc	PC80
 52B8  FF E2		     2			jmp	temp
				ED	53H				;LD	(nn),DE
 = 0054			     1		op2	= 53H + 1
 53A0  8B D5					mov	temp,save_temp
 53A2  8B 2C					mov	save_temp,ds:[PC80]
 53A4  3E: 89 6E 00				mov	ds:[save_temp],DE
 53A8  8B EA					mov	save_temp,temp
 53AA  B2 00					mov	temp_l,0
						fetch3
 53AC  8A 74 02		     1			mov	temp_h,ds:[PC80+2]
 53AF  83 C6 03		     1			add	PC80,3
 53B2  FF E2		     1			jmp	temp
				ED	56H				;IM	1(do nothing)
 54A0  8B D5		     2			mov	temp,save_temp
 54A2  8B EF		     2			mov	entry_SP,SP80
 54A4  BF 0005		     2			mov	ret_reg,code_undef2
 54A7  CB		     2			retf
 = 0055			     2			op2	= op2 + 1
 55A0  8B D5		     2			mov	temp,save_temp
 55A2  8B EF		     2			mov	entry_SP,SP80
 55A4  BF 0005		     2			mov	ret_reg,code_undef2
 55A7  CB		     2			retf
 = 0056			     2			op2	= op2 + 1
 = 0057			     1		op2	= 56H + 1
 56A0  B2 00					mov	temp_l,0
						fetch1
 56A2  8A 34		     1			mov	temp_h,ds:[PC80]
 56A4  46		     1			inc	PC80
 56A5  FF E2		     1			jmp	temp
				ED	57H				;LD	A,I
 = 0058			     1		op2	= 57H + 1
 57A0  2E: A0 00FC				mov	A,I
 57A4  B2 00					mov	temp_l,0
						fetch1
 57A6  8A 34		     1			mov	temp_h,ds:[PC80]
 57A8  46		     1			inc	PC80
 57A9  FF E2		     1			jmp	temp
				ED	58H				;IN	E,(C)
 = 0059			     1		op2	= 58H + 1
						IO
 58A0  8B D5		     1			mov	temp,save_temp
 58A2  8B EF		     1			mov	entry_SP,SP80
 58A4  BF 0004		     1			mov	ret_reg,code_IO
 58A7  CB		     1			retf
				ED	59H				;OUT	(C),E
 = 005A			     1		op2	= 59H + 1
						IO
 59A0  8B D5		     1			mov	temp,save_temp
 59A2  8B EF		     1			mov	entry_SP,SP80
 59A4  BF 0004		     1			mov	ret_reg,code_IO
 59A7  CB		     1			retf
				ED	5aH				;ADC	HL,DE
 = 005B			     1		op2	= 5aH + 1
						ADC8x	HL,DE
 5AA0  9E		     1			sahf
 5AA1  13 DD		     1			adc	HL,DE
 5AA3  9F		     1			lahf
 5AA4  70 0A		     1			jo	@f
 5AA6  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 5AA9  B2 00		     1			mov	temp_l,0
 5AAB  8A 34		     2			mov	temp_h,ds:[PC80]
 5AAD  46		     2			inc	PC80
 5AAE  FF E2		     2			jmp	temp
 5AB0  80 E4 FD		     1	@@:		and	ah,not n_flag
 5AB3  80 CC 04		     1			or	ah,v_flag
 5AB6  B2 00		     1			mov	temp_l,0
 5AB8  8A 34		     2			mov	temp_h,ds:[PC80]
 5ABA  46		     2			inc	PC80
 5ABB  FF E2		     2			jmp	temp
				ED	5bH				;LD	DE,(nn)
 = 005C			     1		op2	= 5bH + 1
				ifidni	DE,temp
				else
 5BA0  8B D5					mov	temp,save_temp
 5BA2  8B 2C					mov	save_temp,ds:[PC80]
 5BA4  3E: 8B 6E 00				mov	DE,ds:[save_temp]
 5BA8  8B EA					mov	save_temp,temp
 5BAA  B2 00					mov	temp_l,0
						fetch3
 5BAC  8A 74 02		     1			mov	temp_h,ds:[PC80+2]
 5BAF  83 C6 03		     1			add	PC80,3
 5BB2  FF E2		     1			jmp	temp
				endif

				ED	5cH				;MLT	DE
 = 005D			     1		op2	= 5cH + 1
						MLT	DE
 5CA0  8B D0		     1			mov	temp,ax
 5CA2  8B C5		     1			mov	ax,DE
 5CA4  F6 E4		     1			mul	ah
 5CA6  8B E8		     1			mov	DE,ax
 5CA8  8B C2		     1			mov	ax,temp
 5CAA  B2 00		     1			mov	temp_l,0
 5CAC  8A 34		     2			mov	temp_h,ds:[PC80]
 5CAE  46		     2			inc	PC80
 5CAF  FF E2		     2			jmp	temp
				ED	5eH				;IM	2(do nothing)
 5DA0  8B D5		     2			mov	temp,save_temp
 5DA2  8B EF		     2			mov	entry_SP,SP80
 5DA4  BF 0005		     2			mov	ret_reg,code_undef2
 5DA7  CB		     2			retf
 = 005E			     2			op2	= op2 + 1
 = 005F			     1		op2	= 5eH + 1
 5EA0  B2 00					mov	temp_l,0
						fetch1	
 5EA2  8A 34		     1			mov	temp_h,ds:[PC80]
 5EA4  46		     1			inc	PC80
 5EA5  FF E2		     1			jmp	temp
				ED	5fH				;LD	A,R
 = 0060			     1		op2	= 5fH + 1
 5FA0  2E: A0 00FD				mov	A,R
 5FA4  FE C0					inc	A
 5FA6  02 C5					add	A,B
 5FA8  2E: A2 00FD				mov	R,A
 5FAC  B2 00					mov	temp_l,0
						fetch1
 5FAE  8A 34		     1			mov	temp_h,ds:[PC80]
 5FB0  46		     1			inc	PC80
 5FB1  FF E2		     1			jmp	temp

				ED	60H				;IN	H,(C)
 = 0061			     1		op2	= 60H + 1
						IO
 60A0  8B D5		     1			mov	temp,save_temp
 60A2  8B EF		     1			mov	entry_SP,SP80
 60A4  BF 0004		     1			mov	ret_reg,code_IO
 60A7  CB		     1			retf
				ED	61H				;OUT	(C),H
 = 0062			     1		op2	= 61H + 1
						IO
 61A0  8B D5		     1			mov	temp,save_temp
 61A2  8B EF		     1			mov	entry_SP,SP80
 61A4  BF 0004		     1			mov	ret_reg,code_IO
 61A7  CB		     1			retf
				ED	62H				;SBC	HL,HL
 = 0063			     1		op2	= 62H + 1
						SBC8x	HL,HL
 62A0  9E		     1			sahf
 62A1  1B DB		     1			sbb	HL,HL
 62A3  9F		     1			lahf
 62A4  70 0A		     1			jo	@f
 62A6  80 E4 FB		     1			and	ah,not(v_flag)
 62A9  B2 00		     1			mov	temp_l,0
 62AB  8A 34		     2			mov	temp_h,ds:[PC80]
 62AD  46		     2			inc	PC80
 62AE  FF E2		     2			jmp	temp
 62B0  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 62B3  B2 00		     1			mov	temp_l,0
 62B5  8A 34		     2			mov	temp_h,ds:[PC80]
 62B7  46		     2			inc	PC80
 62B8  FF E2		     2			jmp	temp
				ED	64H				;TST	n
 63A0  8B D5		     2			mov	temp,save_temp
 63A2  8B EF		     2			mov	entry_SP,SP80
 63A4  BF 0005		     2			mov	ret_reg,code_undef2
 63A7  CB		     2			retf
 = 0064			     2			op2	= op2 + 1
 = 0065			     1		op2	= 64H + 1
 64A0  84 04					test	A,ds:[PC80]
 64A2  9F					lahf
 64A3  B2 00					mov	temp_l,0
						fetch2
 64A5  46		     1			inc	PC80
 64A6  8A 34		     1			mov	temp_h,ds:[PC80]
 64A8  46		     1			inc	PC80
 64A9  FF E2		     1			jmp	temp
				ED	67H				;RRD	****
 65A0  8B D5		     2			mov	temp,save_temp
 65A2  8B EF		     2			mov	entry_SP,SP80
 65A4  BF 0005		     2			mov	ret_reg,code_undef2
 65A7  CB		     2			retf
 = 0066			     2			op2	= op2 + 1
 66A0  8B D5		     2			mov	temp,save_temp
 66A2  8B EF		     2			mov	entry_SP,SP80
 66A4  BF 0005		     2			mov	ret_reg,code_undef2
 66A7  CB		     2			retf
 = 0067			     2			op2	= op2 + 1
 = 0068			     1		op2	= 67H + 1
 67A0  8B D0					mov	temp,ax
 67A2  80 E2 F0					and	temp_l,0f0h
 67A5  8A 27					mov	ah,ds:[HL]
				;		ror	ax,4
 67A7  D1 C8					ror	ax,1
 67A9  D1 C8					ror	ax,1
 67AB  D1 C8					ror	ax,1
 67AD  D1 C8					ror	ax,1
 67AF  88 27					mov	ds:[HL],ah
				;		shr	al,4
 67B1  D0 E8					shr	al,1
 67B3  D0 E8					shr	al,1
 67B5  D0 E8					shr	al,1
 67B7  D0 E8					shr	al,1
 67B9  0A C2					or	al,temp_l
 67BB  9F					lahf
 67BC  80 E4 C4					and	ah,(s_flag or z_flag or	p_flag)
 67BF  80 E6 01					and	temp_h,c_flag
 67C2  0A E6					or	ah,temp_h
 67C4  B2 00					mov	temp_l,0
 67C6  E9 9837					jmp	no_op

				ED	68H				;IN	L,(C)
 = 0069			     1		op2	= 68H + 1
						IO
 68A0  8B D5		     1			mov	temp,save_temp
 68A2  8B EF		     1			mov	entry_SP,SP80
 68A4  BF 0004		     1			mov	ret_reg,code_IO
 68A7  CB		     1			retf
				ED	69H				;OUT	(C),L
 = 006A			     1		op2	= 69H + 1
						IO
 69A0  8B D5		     1			mov	temp,save_temp
 69A2  8B EF		     1			mov	entry_SP,SP80
 69A4  BF 0004		     1			mov	ret_reg,code_IO
 69A7  CB		     1			retf
				ED	6aH				;ADC	HL,HL
 = 006B			     1		op2	= 6aH + 1
						ADC8x	HL,HL
 6AA0  9E		     1			sahf
 6AA1  13 DB		     1			adc	HL,HL
 6AA3  9F		     1			lahf
 6AA4  70 0A		     1			jo	@f
 6AA6  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 6AA9  B2 00		     1			mov	temp_l,0
 6AAB  8A 34		     2			mov	temp_h,ds:[PC80]
 6AAD  46		     2			inc	PC80
 6AAE  FF E2		     2			jmp	temp
 6AB0  80 E4 FD		     1	@@:		and	ah,not n_flag
 6AB3  80 CC 04		     1			or	ah,v_flag
 6AB6  B2 00		     1			mov	temp_l,0
 6AB8  8A 34		     2			mov	temp_h,ds:[PC80]
 6ABA  46		     2			inc	PC80
 6ABB  FF E2		     2			jmp	temp
				ED	6cH				;MLT	HL
 6BA0  8B D5		     2			mov	temp,save_temp
 6BA2  8B EF		     2			mov	entry_SP,SP80
 6BA4  BF 0005		     2			mov	ret_reg,code_undef2
 6BA7  CB		     2			retf
 = 006C			     2			op2	= op2 + 1
 = 006D			     1		op2	= 6cH + 1
						MLT	HL
 6CA0  8B D0		     1			mov	temp,ax
 6CA2  8B C3		     1			mov	ax,HL
 6CA4  F6 E4		     1			mul	ah
 6CA6  8B D8		     1			mov	HL,ax
 6CA8  8B C2		     1			mov	ax,temp
 6CAA  B2 00		     1			mov	temp_l,0
 6CAC  8A 34		     2			mov	temp_h,ds:[PC80]
 6CAE  46		     2			inc	PC80
 6CAF  FF E2		     2			jmp	temp
				ED	6fH				;RLD	****
 6DA0  8B D5		     2			mov	temp,save_temp
 6DA2  8B EF		     2			mov	entry_SP,SP80
 6DA4  BF 0005		     2			mov	ret_reg,code_undef2
 6DA7  CB		     2			retf
 = 006E			     2			op2	= op2 + 1
 6EA0  8B D5		     2			mov	temp,save_temp
 6EA2  8B EF		     2			mov	entry_SP,SP80
 6EA4  BF 0005		     2			mov	ret_reg,code_undef2
 6EA7  CB		     2			retf
 = 006F			     2			op2	= op2 + 1
 = 0070			     1		op2	= 6fH + 1
 6FA0  8B D0					mov	temp,ax
 6FA2  80 E2 F0					and	temp_l,0f0h
				;		shl	al,4
 6FA5  D0 E0					shl	al,1
 6FA7  D0 E0					shl	al,1
 6FA9  D0 E0					shl	al,1
 6FAB  D0 E0					shl	al,1
 6FAD  8A 27					mov	ah,ds:[HL]
				;		rol	ax,4
 6FAF  D1 C0					rol	ax,1
 6FB1  D1 C0					rol	ax,1
 6FB3  D1 C0					rol	ax,1
 6FB5  D1 C0					rol	ax,1
 6FB7  88 27					mov	ds:[HL],ah
 6FB9  0A C2					or	al,temp_l
 6FBB  9F					lahf
 6FBC  80 E4 C4					and	ah,(s_flag or z_flag or	p_flag)
 6FBF  80 E6 01					and	temp_h,c_flag
 6FC2  0A E6					or	ah,temp_h
 6FC4  B2 00					mov	temp_l,0
 6FC6  E9 9037					jmp	no_op

				ED	70H				;IN	(C)
 = 0071			     1		op2	= 70H + 1
						IO
 70A0  8B D5		     1			mov	temp,save_temp
 70A2  8B EF		     1			mov	entry_SP,SP80
 70A4  BF 0004		     1			mov	ret_reg,code_IO
 70A7  CB		     1			retf
				ED	72H				;SBC	HL,SP
 71A0  8B D5		     2			mov	temp,save_temp
 71A2  8B EF		     2			mov	entry_SP,SP80
 71A4  BF 0005		     2			mov	ret_reg,code_undef2
 71A7  CB		     2			retf
 = 0072			     2			op2	= op2 + 1
 = 0073			     1		op2	= 72H + 1
						SBC8x	HL,SP80
 72A0  9E		     1			sahf
 72A1  1B DF		     1			sbb	HL,SP80
 72A3  9F		     1			lahf
 72A4  70 0A		     1			jo	@f
 72A6  80 E4 FB		     1			and	ah,not(v_flag)
 72A9  B2 00		     1			mov	temp_l,0
 72AB  8A 34		     2			mov	temp_h,ds:[PC80]
 72AD  46		     2			inc	PC80
 72AE  FF E2		     2			jmp	temp
 72B0  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 72B3  B2 00		     1			mov	temp_l,0
 72B5  8A 34		     2			mov	temp_h,ds:[PC80]
 72B7  46		     2			inc	PC80
 72B8  FF E2		     2			jmp	temp
				ED	73H				;LD	(nn),SP
 = 0074			     1		op2	= 73H + 1
 73A0  8B D5					mov	temp,save_temp
 73A2  8B 2C					mov	save_temp,ds:[PC80]
 73A4  3E: 89 7E 00				mov	ds:[save_temp],SP80
 73A8  8B EA					mov	save_temp,temp
 73AA  B2 00					mov	temp_l,0
						fetch3
 73AC  8A 74 02		     1			mov	temp_h,ds:[PC80+2]
 73AF  83 C6 03		     1			add	PC80,3
 73B2  FF E2		     1			jmp	temp

				ED	78H				;IN	A,(C)
 74A0  8B D5		     2			mov	temp,save_temp
 74A2  8B EF		     2			mov	entry_SP,SP80
 74A4  BF 0005		     2			mov	ret_reg,code_undef2
 74A7  CB		     2			retf
 = 0075			     2			op2	= op2 + 1
 75A0  8B D5		     2			mov	temp,save_temp
 75A2  8B EF		     2			mov	entry_SP,SP80
 75A4  BF 0005		     2			mov	ret_reg,code_undef2
 75A7  CB		     2			retf
 = 0076			     2			op2	= op2 + 1
 76A0  8B D5		     2			mov	temp,save_temp
 76A2  8B EF		     2			mov	entry_SP,SP80
 76A4  BF 0005		     2			mov	ret_reg,code_undef2
 76A7  CB		     2			retf
 = 0077			     2			op2	= op2 + 1
 77A0  8B D5		     2			mov	temp,save_temp
 77A2  8B EF		     2			mov	entry_SP,SP80
 77A4  BF 0005		     2			mov	ret_reg,code_undef2
 77A7  CB		     2			retf
 = 0078			     2			op2	= op2 + 1
 = 0079			     1		op2	= 78H + 1
						IO
 78A0  8B D5		     1			mov	temp,save_temp
 78A2  8B EF		     1			mov	entry_SP,SP80
 78A4  BF 0004		     1			mov	ret_reg,code_IO
 78A7  CB		     1			retf

				ED	79H				;OUT	(C),A
 = 007A			     1		op2	= 79H + 1
						IO
 79A0  8B D5		     1			mov	temp,save_temp
 79A2  8B EF		     1			mov	entry_SP,SP80
 79A4  BF 0004		     1			mov	ret_reg,code_IO
 79A7  CB		     1			retf

				ED	7aH				;ADC	HL,SP
 = 007B			     1		op2	= 7aH + 1
						ADC8x	HL,SP80
 7AA0  9E		     1			sahf
 7AA1  13 DF		     1			adc	HL,SP80
 7AA3  9F		     1			lahf
 7AA4  70 0A		     1			jo	@f
 7AA6  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 7AA9  B2 00		     1			mov	temp_l,0
 7AAB  8A 34		     2			mov	temp_h,ds:[PC80]
 7AAD  46		     2			inc	PC80
 7AAE  FF E2		     2			jmp	temp
 7AB0  80 E4 FD		     1	@@:		and	ah,not n_flag
 7AB3  80 CC 04		     1			or	ah,v_flag
 7AB6  B2 00		     1			mov	temp_l,0
 7AB8  8A 34		     2			mov	temp_h,ds:[PC80]
 7ABA  46		     2			inc	PC80
 7ABB  FF E2		     2			jmp	temp

				ED	7bH				;LD	SP,(nn)
 = 007C			     1		op2	= 7bH + 1
 7BA0  8B 3C					mov	SP80,ds:[PC80]
 7BA2  B2 00					mov	temp_l,0
 7BA4  8B 3D					mov	SP80,ds:[SP80]
						fetch3
 7BA6  8A 74 02		     1			mov	temp_h,ds:[PC80+2]
 7BA9  83 C6 03		     1			add	PC80,3
 7BAC  FF E2		     1			jmp	temp

				ED	7cH				;MLT	SP
 = 007D			     1		op2	= 7cH + 1
						MLT	SP80
 7CA0  8B D0		     1			mov	temp,ax
 7CA2  8B C7		     1			mov	ax,SP80
 7CA4  F6 E4		     1			mul	ah
 7CA6  8B F8		     1			mov	SP80,ax
 7CA8  8B C2		     1			mov	ax,temp
 7CAA  B2 00		     1			mov	temp_l,0
 7CAC  8A 34		     2			mov	temp_h,ds:[PC80]
 7CAE  46		     2			inc	PC80
 7CAF  FF E2		     2			jmp	temp

				ED	0a0H				;LDI
 7DA0  8B D5		     2			mov	temp,save_temp
 7DA2  8B EF		     2			mov	entry_SP,SP80
 7DA4  BF 0005		     2			mov	ret_reg,code_undef2
 7DA7  CB		     2			retf
 = 007E			     2			op2	= op2 + 1
 7EA0  8B D5		     2			mov	temp,save_temp
 7EA2  8B EF		     2			mov	entry_SP,SP80
 7EA4  BF 0005		     2			mov	ret_reg,code_undef2
 7EA7  CB		     2			retf
 = 007F			     2			op2	= op2 + 1
 7FA0  8B D5		     2			mov	temp,save_temp
 7FA2  8B EF		     2			mov	entry_SP,SP80
 7FA4  BF 0005		     2			mov	ret_reg,code_undef2
 7FA7  CB		     2			retf
 = 0080			     2			op2	= op2 + 1
 80A0  8B D5		     2			mov	temp,save_temp
 80A2  8B EF		     2			mov	entry_SP,SP80
 80A4  BF 0005		     2			mov	ret_reg,code_undef2
 80A7  CB		     2			retf
 = 0081			     2			op2	= op2 + 1
 81A0  8B D5		     2			mov	temp,save_temp
 81A2  8B EF		     2			mov	entry_SP,SP80
 81A4  BF 0005		     2			mov	ret_reg,code_undef2
 81A7  CB		     2			retf
 = 0082			     2			op2	= op2 + 1
 82A0  8B D5		     2			mov	temp,save_temp
 82A2  8B EF		     2			mov	entry_SP,SP80
 82A4  BF 0005		     2			mov	ret_reg,code_undef2
 82A7  CB		     2			retf
 = 0083			     2			op2	= op2 + 1
 83A0  8B D5		     2			mov	temp,save_temp
 83A2  8B EF		     2			mov	entry_SP,SP80
 83A4  BF 0005		     2			mov	ret_reg,code_undef2
 83A7  CB		     2			retf
 = 0084			     2			op2	= op2 + 1
 84A0  8B D5		     2			mov	temp,save_temp
 84A2  8B EF		     2			mov	entry_SP,SP80
 84A4  BF 0005		     2			mov	ret_reg,code_undef2
 84A7  CB		     2			retf
 = 0085			     2			op2	= op2 + 1
 85A0  8B D5		     2			mov	temp,save_temp
 85A2  8B EF		     2			mov	entry_SP,SP80
 85A4  BF 0005		     2			mov	ret_reg,code_undef2
 85A7  CB		     2			retf
 = 0086			     2			op2	= op2 + 1
 86A0  8B D5		     2			mov	temp,save_temp
 86A2  8B EF		     2			mov	entry_SP,SP80
 86A4  BF 0005		     2			mov	ret_reg,code_undef2
 86A7  CB		     2			retf
 = 0087			     2			op2	= op2 + 1
 87A0  8B D5		     2			mov	temp,save_temp
 87A2  8B EF		     2			mov	entry_SP,SP80
 87A4  BF 0005		     2			mov	ret_reg,code_undef2
 87A7  CB		     2			retf
 = 0088			     2			op2	= op2 + 1
 88A0  8B D5		     2			mov	temp,save_temp
 88A2  8B EF		     2			mov	entry_SP,SP80
 88A4  BF 0005		     2			mov	ret_reg,code_undef2
 88A7  CB		     2			retf
 = 0089			     2			op2	= op2 + 1
 89A0  8B D5		     2			mov	temp,save_temp
 89A2  8B EF		     2			mov	entry_SP,SP80
 89A4  BF 0005		     2			mov	ret_reg,code_undef2
 89A7  CB		     2			retf
 = 008A			     2			op2	= op2 + 1
 8AA0  8B D5		     2			mov	temp,save_temp
 8AA2  8B EF		     2			mov	entry_SP,SP80
 8AA4  BF 0005		     2			mov	ret_reg,code_undef2
 8AA7  CB		     2			retf
 = 008B			     2			op2	= op2 + 1
 8BA0  8B D5		     2			mov	temp,save_temp
 8BA2  8B EF		     2			mov	entry_SP,SP80
 8BA4  BF 0005		     2			mov	ret_reg,code_undef2
 8BA7  CB		     2			retf
 = 008C			     2			op2	= op2 + 1
 8CA0  8B D5		     2			mov	temp,save_temp
 8CA2  8B EF		     2			mov	entry_SP,SP80
 8CA4  BF 0005		     2			mov	ret_reg,code_undef2
 8CA7  CB		     2			retf
 = 008D			     2			op2	= op2 + 1
 8DA0  8B D5		     2			mov	temp,save_temp
 8DA2  8B EF		     2			mov	entry_SP,SP80
 8DA4  BF 0005		     2			mov	ret_reg,code_undef2
 8DA7  CB		     2			retf
 = 008E			     2			op2	= op2 + 1
 8EA0  8B D5		     2			mov	temp,save_temp
 8EA2  8B EF		     2			mov	entry_SP,SP80
 8EA4  BF 0005		     2			mov	ret_reg,code_undef2
 8EA7  CB		     2			retf
 = 008F			     2			op2	= op2 + 1
 8FA0  8B D5		     2			mov	temp,save_temp
 8FA2  8B EF		     2			mov	entry_SP,SP80
 8FA4  BF 0005		     2			mov	ret_reg,code_undef2
 8FA7  CB		     2			retf
 = 0090			     2			op2	= op2 + 1
 90A0  8B D5		     2			mov	temp,save_temp
 90A2  8B EF		     2			mov	entry_SP,SP80
 90A4  BF 0005		     2			mov	ret_reg,code_undef2
 90A7  CB		     2			retf
 = 0091			     2			op2	= op2 + 1
 91A0  8B D5		     2			mov	temp,save_temp
 91A2  8B EF		     2			mov	entry_SP,SP80
 91A4  BF 0005		     2			mov	ret_reg,code_undef2
 91A7  CB		     2			retf
 = 0092			     2			op2	= op2 + 1
 92A0  8B D5		     2			mov	temp,save_temp
 92A2  8B EF		     2			mov	entry_SP,SP80
 92A4  BF 0005		     2			mov	ret_reg,code_undef2
 92A7  CB		     2			retf
 = 0093			     2			op2	= op2 + 1
 93A0  8B D5		     2			mov	temp,save_temp
 93A2  8B EF		     2			mov	entry_SP,SP80
 93A4  BF 0005		     2			mov	ret_reg,code_undef2
 93A7  CB		     2			retf
 = 0094			     2			op2	= op2 + 1
 94A0  8B D5		     2			mov	temp,save_temp
 94A2  8B EF		     2			mov	entry_SP,SP80
 94A4  BF 0005		     2			mov	ret_reg,code_undef2
 94A7  CB		     2			retf
 = 0095			     2			op2	= op2 + 1
 95A0  8B D5		     2			mov	temp,save_temp
 95A2  8B EF		     2			mov	entry_SP,SP80
 95A4  BF 0005		     2			mov	ret_reg,code_undef2
 95A7  CB		     2			retf
 = 0096			     2			op2	= op2 + 1
 96A0  8B D5		     2			mov	temp,save_temp
 96A2  8B EF		     2			mov	entry_SP,SP80
 96A4  BF 0005		     2			mov	ret_reg,code_undef2
 96A7  CB		     2			retf
 = 0097			     2			op2	= op2 + 1
 97A0  8B D5		     2			mov	temp,save_temp
 97A2  8B EF		     2			mov	entry_SP,SP80
 97A4  BF 0005		     2			mov	ret_reg,code_undef2
 97A7  CB		     2			retf
 = 0098			     2			op2	= op2 + 1
 98A0  8B D5		     2			mov	temp,save_temp
 98A2  8B EF		     2			mov	entry_SP,SP80
 98A4  BF 0005		     2			mov	ret_reg,code_undef2
 98A7  CB		     2			retf
 = 0099			     2			op2	= op2 + 1
 99A0  8B D5		     2			mov	temp,save_temp
 99A2  8B EF		     2			mov	entry_SP,SP80
 99A4  BF 0005		     2			mov	ret_reg,code_undef2
 99A7  CB		     2			retf
 = 009A			     2			op2	= op2 + 1
 9AA0  8B D5		     2			mov	temp,save_temp
 9AA2  8B EF		     2			mov	entry_SP,SP80
 9AA4  BF 0005		     2			mov	ret_reg,code_undef2
 9AA7  CB		     2			retf
 = 009B			     2			op2	= op2 + 1
 9BA0  8B D5		     2			mov	temp,save_temp
 9BA2  8B EF		     2			mov	entry_SP,SP80
 9BA4  BF 0005		     2			mov	ret_reg,code_undef2
 9BA7  CB		     2			retf
 = 009C			     2			op2	= op2 + 1
 9CA0  8B D5		     2			mov	temp,save_temp
 9CA2  8B EF		     2			mov	entry_SP,SP80
 9CA4  BF 0005		     2			mov	ret_reg,code_undef2
 9CA7  CB		     2			retf
 = 009D			     2			op2	= op2 + 1
 9DA0  8B D5		     2			mov	temp,save_temp
 9DA2  8B EF		     2			mov	entry_SP,SP80
 9DA4  BF 0005		     2			mov	ret_reg,code_undef2
 9DA7  CB		     2			retf
 = 009E			     2			op2	= op2 + 1
 9EA0  8B D5		     2			mov	temp,save_temp
 9EA2  8B EF		     2			mov	entry_SP,SP80
 9EA4  BF 0005		     2			mov	ret_reg,code_undef2
 9EA7  CB		     2			retf
 = 009F			     2			op2	= op2 + 1
 9FA0  8B D5		     2			mov	temp,save_temp
 9FA2  8B EF		     2			mov	entry_SP,SP80
 9FA4  BF 0005		     2			mov	ret_reg,code_undef2
 9FA7  CB		     2			retf
 = 00A0			     2			op2	= op2 + 1
 = 00A1			     1		op2	= 0a0H + 1
 A0A0  87 FD					xchg	di,DE
 A0A2  87 F3					xchg	si,HL
 A0A4  A4					movsb
 A0A5  87 F3					xchg	si,HL
 A0A7  87 FD					xchg	di,DE
 A0A9  49					dec	BC
 A0AA  B6 00					mov	temp_h,0
 A0AC  74 02					jz	@f
 A0AE  B6 04					mov	temp_h,v_flag
 A0B0  80 E4 E9			@@:		and	ah,not (h_flag or v_flag or n_flag)
 A0B3  0A E6					or	ah,temp_h
 A0B5  B2 00					mov	temp_l,0
						fetch1
 A0B7  8A 34		     1			mov	temp_h,ds:[PC80]
 A0B9  46		     1			inc	PC80
 A0BA  FF E2		     1			jmp	temp

				ED	0a1H				;CPI
 = 00A2			     1		op2	= 0a1H + 1
 A1A0  8A F4					mov	temp_h,ah
 A1A2  80 E6 01					and	temp_h,c_flag
				;		or	temp_h,n_flag
 A1A5  3A 07					cmp	A,ds:[HL]
 A1A7  9F					lahf
 A1A8  43					inc	HL
 A1A9  49					dec	BC
 A1AA  74 03					jz	@f
 A1AC  80 CE 04					or	temp_h,v_flag
 A1AF  80 E4 FA			@@:		and	ah,not (v_flag or c_flag)
 A1B2  0A E6					or	ah,temp_h
 A1B4  B2 00					mov	temp_l,0
						fetch1
 A1B6  8A 34		     1			mov	temp_h,ds:[PC80]
 A1B8  46		     1			inc	PC80
 A1B9  FF E2		     1			jmp	temp

				ED	0a2H				;INI
 = 00A3			     1		op2	= 0a2H + 1
						IO
 A2A0  8B D5		     1			mov	temp,save_temp
 A2A2  8B EF		     1			mov	entry_SP,SP80
 A2A4  BF 0004		     1			mov	ret_reg,code_IO
 A2A7  CB		     1			retf
				ED	0a3H				;OUTI
 = 00A4			     1		op2	= 0a3H + 1
						IO
 A3A0  8B D5		     1			mov	temp,save_temp
 A3A2  8B EF		     1			mov	entry_SP,SP80
 A3A4  BF 0004		     1			mov	ret_reg,code_IO
 A3A7  CB		     1			retf

				ED	0a8H				;LDD
 A4A0  8B D5		     2			mov	temp,save_temp
 A4A2  8B EF		     2			mov	entry_SP,SP80
 A4A4  BF 0005		     2			mov	ret_reg,code_undef2
 A4A7  CB		     2			retf
 = 00A5			     2			op2	= op2 + 1
 A5A0  8B D5		     2			mov	temp,save_temp
 A5A2  8B EF		     2			mov	entry_SP,SP80
 A5A4  BF 0005		     2			mov	ret_reg,code_undef2
 A5A7  CB		     2			retf
 = 00A6			     2			op2	= op2 + 1
 A6A0  8B D5		     2			mov	temp,save_temp
 A6A2  8B EF		     2			mov	entry_SP,SP80
 A6A4  BF 0005		     2			mov	ret_reg,code_undef2
 A6A7  CB		     2			retf
 = 00A7			     2			op2	= op2 + 1
 A7A0  8B D5		     2			mov	temp,save_temp
 A7A2  8B EF		     2			mov	entry_SP,SP80
 A7A4  BF 0005		     2			mov	ret_reg,code_undef2
 A7A7  CB		     2			retf
 = 00A8			     2			op2	= op2 + 1
 = 00A9			     1		op2	= 0a8H + 1
 A8A0  87 FD					xchg	di,DE
 A8A2  87 F3					xchg	si,HL
 A8A4  FD					std
 A8A5  A4					movsb
 A8A6  FC					cld
 A8A7  87 F3					xchg	si,HL
 A8A9  87 FD					xchg	di,DE
 A8AB  49					dec	BC
 A8AC  B6 00					mov	temp_h,0
 A8AE  74 02					jz	@f
 A8B0  B6 04					mov	temp_h,v_flag
 A8B2  80 E4 E9			@@:		and	ah,not (h_flag or v_flag or n_flag)
 A8B5  0A E6					or	ah,temp_h
 A8B7  B2 00					mov	temp_l,0
						fetch1
 A8B9  8A 34		     1			mov	temp_h,ds:[PC80]
 A8BB  46		     1			inc	PC80
 A8BC  FF E2		     1			jmp	temp

				ED	0a9H				;CPD
 = 00AA			     1		op2	= 0a9H + 1
 A9A0  8A F4					mov	temp_h,ah
 A9A2  80 E6 01					and	temp_h,c_flag
				;		or	temp_h,n_flag
 A9A5  3A 07					cmp	A,ds:[HL]
 A9A7  9F					lahf
 A9A8  4B					dec	HL
 A9A9  49					dec	BC
 A9AA  74 03					jz	@f
 A9AC  80 CE 04					or	temp_h,v_flag
 A9AF  80 E4 FA			@@:		and	ah,not (v_flag or c_flag)
 A9B2  0A E6					or	ah,temp_h
 A9B4  B2 00					mov	temp_l,0
						fetch1
 A9B6  8A 34		     1			mov	temp_h,ds:[PC80]
 A9B8  46		     1			inc	PC80
 A9B9  FF E2		     1			jmp	temp

				ED	0aaH				;IND
 = 00AB			     1		op2	= 0aaH + 1
						IO
 AAA0  8B D5		     1			mov	temp,save_temp
 AAA2  8B EF		     1			mov	entry_SP,SP80
 AAA4  BF 0004		     1			mov	ret_reg,code_IO
 AAA7  CB		     1			retf
				ED	0abH				;OUTD
 = 00AC			     1		op2	= 0abH + 1
						IO
 ABA0  8B D5		     1			mov	temp,save_temp
 ABA2  8B EF		     1			mov	entry_SP,SP80
 ABA4  BF 0004		     1			mov	ret_reg,code_IO
 ABA7  CB		     1			retf

				ED	0b0H				;LDIR
 ACA0  8B D5		     2			mov	temp,save_temp
 ACA2  8B EF		     2			mov	entry_SP,SP80
 ACA4  BF 0005		     2			mov	ret_reg,code_undef2
 ACA7  CB		     2			retf
 = 00AD			     2			op2	= op2 + 1
 ADA0  8B D5		     2			mov	temp,save_temp
 ADA2  8B EF		     2			mov	entry_SP,SP80
 ADA4  BF 0005		     2			mov	ret_reg,code_undef2
 ADA7  CB		     2			retf
 = 00AE			     2			op2	= op2 + 1
 AEA0  8B D5		     2			mov	temp,save_temp
 AEA2  8B EF		     2			mov	entry_SP,SP80
 AEA4  BF 0005		     2			mov	ret_reg,code_undef2
 AEA7  CB		     2			retf
 = 00AF			     2			op2	= op2 + 1
 AFA0  8B D5		     2			mov	temp,save_temp
 AFA2  8B EF		     2			mov	entry_SP,SP80
 AFA4  BF 0005		     2			mov	ret_reg,code_undef2
 AFA7  CB		     2			retf
 = 00B0			     2			op2	= op2 + 1
 = 00B1			     1		op2	= 0b0H + 1
 B0A0  87 FD					xchg	di,DE
 B0A2  87 F3					xchg	si,HL
				ifdifi		BC,<cx>
				endif
 B0A4  F3/ A4					rep	movsb
				ifdifi		BC,<cx>
				endif
 B0A6  87 F3					xchg	si,HL
 B0A8  87 FD					xchg	di,DE
 B0AA  80 E4 E9					and	ah,not (h_flag or v_flag or n_flag)
 B0AD  B2 00					mov	temp_l,0
						fetch1
 B0AF  8A 34		     1			mov	temp_h,ds:[PC80]
 B0B1  46		     1			inc	PC80
 B0B2  FF E2		     1			jmp	temp

				ED	0b1H				;CPIR
 = 00B2			     1		op2	= 0b1H + 1
 B1A0  8A F4					mov	temp_h,ah
 B1A2  80 E6 01					and	temp_h,c_flag
				;		or	temp_h,n_flag
 B1A5  3A 07			cpir_loop:	cmp	A,[HL]
 B1A7  9F					lahf
 B1A8  74 16					je	short cpir_z
 B1AA  43					inc	HL
 B1AB  49					dec	BC
 B1AC  75 F7					jnz	short cpir_loop
 B1AE  80 E4 BA					and	ah,not (z_flag or v_flag or c_flag)
 B1B1  0A E6					or	ah,temp_h
 B1B3  B2 00					mov	temp_l,0
						fetch1
 B1B5  8A 34		     1			mov	temp_h,ds:[PC80]
 B1B7  46		     1			inc	PC80
 B1B8  FF E2		     1			jmp	temp

						org	0b1c0h

 B1C0  43			cpir_z:		inc	HL
 B1C1  49					dec	BC
 B1C2  74 03					jz	short cpir_end
 B1C4  80 CE 04					or	temp_h,v_flag
 B1C7  80 E4 BA			cpir_end:	and	ah,not (z_flag or v_flag or c_flag)
 B1CA  0A E6					or	ah,temp_h
 B1CC  B2 00					mov	temp_l,0
						fetch1
 B1CE  8A 34		     1			mov	temp_h,ds:[PC80]
 B1D0  46		     1			inc	PC80
 B1D1  FF E2		     1			jmp	temp

				ED	0b2H				;INIR
 = 00B3			     1		op2	= 0b2H + 1
						IO
 B2A0  8B D5		     1			mov	temp,save_temp
 B2A2  8B EF		     1			mov	entry_SP,SP80
 B2A4  BF 0004		     1			mov	ret_reg,code_IO
 B2A7  CB		     1			retf
				ED	0b3H				;OTIR
 = 00B4			     1		op2	= 0b3H + 1
						IO
 B3A0  8B D5		     1			mov	temp,save_temp
 B3A2  8B EF		     1			mov	entry_SP,SP80
 B3A4  BF 0004		     1			mov	ret_reg,code_IO
 B3A7  CB		     1			retf

				ED	0b8H				;LDDR
 B4A0  8B D5		     2			mov	temp,save_temp
 B4A2  8B EF		     2			mov	entry_SP,SP80
 B4A4  BF 0005		     2			mov	ret_reg,code_undef2
 B4A7  CB		     2			retf
 = 00B5			     2			op2	= op2 + 1
 B5A0  8B D5		     2			mov	temp,save_temp
 B5A2  8B EF		     2			mov	entry_SP,SP80
 B5A4  BF 0005		     2			mov	ret_reg,code_undef2
 B5A7  CB		     2			retf
 = 00B6			     2			op2	= op2 + 1
 B6A0  8B D5		     2			mov	temp,save_temp
 B6A2  8B EF		     2			mov	entry_SP,SP80
 B6A4  BF 0005		     2			mov	ret_reg,code_undef2
 B6A7  CB		     2			retf
 = 00B7			     2			op2	= op2 + 1
 B7A0  8B D5		     2			mov	temp,save_temp
 B7A2  8B EF		     2			mov	entry_SP,SP80
 B7A4  BF 0005		     2			mov	ret_reg,code_undef2
 B7A7  CB		     2			retf
 = 00B8			     2			op2	= op2 + 1
 = 00B9			     1		op2	= 0b8H + 1
 B8A0  87 F3					xchg	si,HL
 B8A2  87 FD					xchg	di,DE
				ifdifi		BC,<cx>
				endif
 B8A4  FD					std
 B8A5  F3/ A4					rep	movsb
 B8A7  FC					cld
				ifdifi		BC,<cx>
				endif
 B8A8  87 F3					xchg	si,HL
 B8AA  87 FD					xchg	di,DE
 B8AC  80 E4 E9					and	ah,not (h_flag or v_flag or n_flag)
 B8AF  B2 00					mov	temp_l,0
						fetch1
 B8B1  8A 34		     1			mov	temp_h,ds:[PC80]
 B8B3  46		     1			inc	PC80
 B8B4  FF E2		     1			jmp	temp

				ED	0b9H				;CPDR
 = 00BA			     1		op2	= 0b9H + 1

 B9A0  8A F4					mov	temp_h,ah
 B9A2  80 E6 01					and	temp_h,c_flag
				;		or	temp_h,n_flag
 B9A5  3A 07			cpdr_loop:	cmp	A,[HL]
 B9A7  9F					lahf
 B9A8  74 16					je	short cpdr_z
 B9AA  4B					dec	HL
 B9AB  49					dec	BC
 B9AC  75 F7					jnz	short cpdr_loop
 B9AE  80 E4 BA					and	ah,not (z_flag or v_flag or c_flag)
 B9B1  0A E6					or	ah,temp_h
 B9B3  B2 00					mov	temp_l,0
						fetch1
 B9B5  8A 34		     1			mov	temp_h,ds:[PC80]
 B9B7  46		     1			inc	PC80
 B9B8  FF E2		     1			jmp	temp

						org	0b9c0h

 B9C0  4B			cpdr_z:		dec	HL
 B9C1  49					dec	BC
 B9C2  74 03					jz	short cpdr_end
 B9C4  80 CE 04					or	temp_h,v_flag
 B9C7  80 E4 BA			cpdr_end:	and	ah,not (z_flag or v_flag or c_flag)
 B9CA  0A E6					or	ah,temp_h
 B9CC  B2 00					mov	temp_l,0
						fetch1
 B9CE  8A 34		     1			mov	temp_h,ds:[PC80]
 B9D0  46		     1			inc	PC80
 B9D1  FF E2		     1			jmp	temp

				ED	0baH				;INDR
 = 00BB			     1		op2	= 0baH + 1
						IO
 BAA0  8B D5		     1			mov	temp,save_temp
 BAA2  8B EF		     1			mov	entry_SP,SP80
 BAA4  BF 0004		     1			mov	ret_reg,code_IO
 BAA7  CB		     1			retf
				ED	0bbH				;OTDR
 = 00BC			     1		op2	= 0bbH + 1
						IO
 BBA0  8B D5		     1			mov	temp,save_temp
 BBA2  8B EF		     1			mov	entry_SP,SP80
 BBA4  BF 0004		     1			mov	ret_reg,code_IO
 BBA7  CB		     1			retf

				ED	0edh				;CALLN
 BCA0  8B D5		     2			mov	temp,save_temp
 BCA2  8B EF		     2			mov	entry_SP,SP80
 BCA4  BF 0005		     2			mov	ret_reg,code_undef2
 BCA7  CB		     2			retf
 = 00BD			     2			op2	= op2 + 1
 BDA0  8B D5		     2			mov	temp,save_temp
 BDA2  8B EF		     2			mov	entry_SP,SP80
 BDA4  BF 0005		     2			mov	ret_reg,code_undef2
 BDA7  CB		     2			retf
 = 00BE			     2			op2	= op2 + 1
 BEA0  8B D5		     2			mov	temp,save_temp
 BEA2  8B EF		     2			mov	entry_SP,SP80
 BEA4  BF 0005		     2			mov	ret_reg,code_undef2
 BEA7  CB		     2			retf
 = 00BF			     2			op2	= op2 + 1
 BFA0  8B D5		     2			mov	temp,save_temp
 BFA2  8B EF		     2			mov	entry_SP,SP80
 BFA4  BF 0005		     2			mov	ret_reg,code_undef2
 BFA7  CB		     2			retf
 = 00C0			     2			op2	= op2 + 1
 C0A0  8B D5		     2			mov	temp,save_temp
 C0A2  8B EF		     2			mov	entry_SP,SP80
 C0A4  BF 0005		     2			mov	ret_reg,code_undef2
 C0A7  CB		     2			retf
 = 00C1			     2			op2	= op2 + 1
 C1A0  8B D5		     2			mov	temp,save_temp
 C1A2  8B EF		     2			mov	entry_SP,SP80
 C1A4  BF 0005		     2			mov	ret_reg,code_undef2
 C1A7  CB		     2			retf
 = 00C2			     2			op2	= op2 + 1
 C2A0  8B D5		     2			mov	temp,save_temp
 C2A2  8B EF		     2			mov	entry_SP,SP80
 C2A4  BF 0005		     2			mov	ret_reg,code_undef2
 C2A7  CB		     2			retf
 = 00C3			     2			op2	= op2 + 1
 C3A0  8B D5		     2			mov	temp,save_temp
 C3A2  8B EF		     2			mov	entry_SP,SP80
 C3A4  BF 0005		     2			mov	ret_reg,code_undef2
 C3A7  CB		     2			retf
 = 00C4			     2			op2	= op2 + 1
 C4A0  8B D5		     2			mov	temp,save_temp
 C4A2  8B EF		     2			mov	entry_SP,SP80
 C4A4  BF 0005		     2			mov	ret_reg,code_undef2
 C4A7  CB		     2			retf
 = 00C5			     2			op2	= op2 + 1
 C5A0  8B D5		     2			mov	temp,save_temp
 C5A2  8B EF		     2			mov	entry_SP,SP80
 C5A4  BF 0005		     2			mov	ret_reg,code_undef2
 C5A7  CB		     2			retf
 = 00C6			     2			op2	= op2 + 1
 C6A0  8B D5		     2			mov	temp,save_temp
 C6A2  8B EF		     2			mov	entry_SP,SP80
 C6A4  BF 0005		     2			mov	ret_reg,code_undef2
 C6A7  CB		     2			retf
 = 00C7			     2			op2	= op2 + 1
 C7A0  8B D5		     2			mov	temp,save_temp
 C7A2  8B EF		     2			mov	entry_SP,SP80
 C7A4  BF 0005		     2			mov	ret_reg,code_undef2
 C7A7  CB		     2			retf
 = 00C8			     2			op2	= op2 + 1
 C8A0  8B D5		     2			mov	temp,save_temp
 C8A2  8B EF		     2			mov	entry_SP,SP80
 C8A4  BF 0005		     2			mov	ret_reg,code_undef2
 C8A7  CB		     2			retf
 = 00C9			     2			op2	= op2 + 1
 C9A0  8B D5		     2			mov	temp,save_temp
 C9A2  8B EF		     2			mov	entry_SP,SP80
 C9A4  BF 0005		     2			mov	ret_reg,code_undef2
 C9A7  CB		     2			retf
 = 00CA			     2			op2	= op2 + 1
 CAA0  8B D5		     2			mov	temp,save_temp
 CAA2  8B EF		     2			mov	entry_SP,SP80
 CAA4  BF 0005		     2			mov	ret_reg,code_undef2
 CAA7  CB		     2			retf
 = 00CB			     2			op2	= op2 + 1
 CBA0  8B D5		     2			mov	temp,save_temp
 CBA2  8B EF		     2			mov	entry_SP,SP80
 CBA4  BF 0005		     2			mov	ret_reg,code_undef2
 CBA7  CB		     2			retf
 = 00CC			     2			op2	= op2 + 1
 CCA0  8B D5		     2			mov	temp,save_temp
 CCA2  8B EF		     2			mov	entry_SP,SP80
 CCA4  BF 0005		     2			mov	ret_reg,code_undef2
 CCA7  CB		     2			retf
 = 00CD			     2			op2	= op2 + 1
 CDA0  8B D5		     2			mov	temp,save_temp
 CDA2  8B EF		     2			mov	entry_SP,SP80
 CDA4  BF 0005		     2			mov	ret_reg,code_undef2
 CDA7  CB		     2			retf
 = 00CE			     2			op2	= op2 + 1
 CEA0  8B D5		     2			mov	temp,save_temp
 CEA2  8B EF		     2			mov	entry_SP,SP80
 CEA4  BF 0005		     2			mov	ret_reg,code_undef2
 CEA7  CB		     2			retf
 = 00CF			     2			op2	= op2 + 1
 CFA0  8B D5		     2			mov	temp,save_temp
 CFA2  8B EF		     2			mov	entry_SP,SP80
 CFA4  BF 0005		     2			mov	ret_reg,code_undef2
 CFA7  CB		     2			retf
 = 00D0			     2			op2	= op2 + 1
 D0A0  8B D5		     2			mov	temp,save_temp
 D0A2  8B EF		     2			mov	entry_SP,SP80
 D0A4  BF 0005		     2			mov	ret_reg,code_undef2
 D0A7  CB		     2			retf
 = 00D1			     2			op2	= op2 + 1
 D1A0  8B D5		     2			mov	temp,save_temp
 D1A2  8B EF		     2			mov	entry_SP,SP80
 D1A4  BF 0005		     2			mov	ret_reg,code_undef2
 D1A7  CB		     2			retf
 = 00D2			     2			op2	= op2 + 1
 D2A0  8B D5		     2			mov	temp,save_temp
 D2A2  8B EF		     2			mov	entry_SP,SP80
 D2A4  BF 0005		     2			mov	ret_reg,code_undef2
 D2A7  CB		     2			retf
 = 00D3			     2			op2	= op2 + 1
 D3A0  8B D5		     2			mov	temp,save_temp
 D3A2  8B EF		     2			mov	entry_SP,SP80
 D3A4  BF 0005		     2			mov	ret_reg,code_undef2
 D3A7  CB		     2			retf
 = 00D4			     2			op2	= op2 + 1
 D4A0  8B D5		     2			mov	temp,save_temp
 D4A2  8B EF		     2			mov	entry_SP,SP80
 D4A4  BF 0005		     2			mov	ret_reg,code_undef2
 D4A7  CB		     2			retf
 = 00D5			     2			op2	= op2 + 1
 D5A0  8B D5		     2			mov	temp,save_temp
 D5A2  8B EF		     2			mov	entry_SP,SP80
 D5A4  BF 0005		     2			mov	ret_reg,code_undef2
 D5A7  CB		     2			retf
 = 00D6			     2			op2	= op2 + 1
 D6A0  8B D5		     2			mov	temp,save_temp
 D6A2  8B EF		     2			mov	entry_SP,SP80
 D6A4  BF 0005		     2			mov	ret_reg,code_undef2
 D6A7  CB		     2			retf
 = 00D7			     2			op2	= op2 + 1
 D7A0  8B D5		     2			mov	temp,save_temp
 D7A2  8B EF		     2			mov	entry_SP,SP80
 D7A4  BF 0005		     2			mov	ret_reg,code_undef2
 D7A7  CB		     2			retf
 = 00D8			     2			op2	= op2 + 1
 D8A0  8B D5		     2			mov	temp,save_temp
 D8A2  8B EF		     2			mov	entry_SP,SP80
 D8A4  BF 0005		     2			mov	ret_reg,code_undef2
 D8A7  CB		     2			retf
 = 00D9			     2			op2	= op2 + 1
 D9A0  8B D5		     2			mov	temp,save_temp
 D9A2  8B EF		     2			mov	entry_SP,SP80
 D9A4  BF 0005		     2			mov	ret_reg,code_undef2
 D9A7  CB		     2			retf
 = 00DA			     2			op2	= op2 + 1
 DAA0  8B D5		     2			mov	temp,save_temp
 DAA2  8B EF		     2			mov	entry_SP,SP80
 DAA4  BF 0005		     2			mov	ret_reg,code_undef2
 DAA7  CB		     2			retf
 = 00DB			     2			op2	= op2 + 1
 DBA0  8B D5		     2			mov	temp,save_temp
 DBA2  8B EF		     2			mov	entry_SP,SP80
 DBA4  BF 0005		     2			mov	ret_reg,code_undef2
 DBA7  CB		     2			retf
 = 00DC			     2			op2	= op2 + 1
 DCA0  8B D5		     2			mov	temp,save_temp
 DCA2  8B EF		     2			mov	entry_SP,SP80
 DCA4  BF 0005		     2			mov	ret_reg,code_undef2
 DCA7  CB		     2			retf
 = 00DD			     2			op2	= op2 + 1
 DDA0  8B D5		     2			mov	temp,save_temp
 DDA2  8B EF		     2			mov	entry_SP,SP80
 DDA4  BF 0005		     2			mov	ret_reg,code_undef2
 DDA7  CB		     2			retf
 = 00DE			     2			op2	= op2 + 1
 DEA0  8B D5		     2			mov	temp,save_temp
 DEA2  8B EF		     2			mov	entry_SP,SP80
 DEA4  BF 0005		     2			mov	ret_reg,code_undef2
 DEA7  CB		     2			retf
 = 00DF			     2			op2	= op2 + 1
 DFA0  8B D5		     2			mov	temp,save_temp
 DFA2  8B EF		     2			mov	entry_SP,SP80
 DFA4  BF 0005		     2			mov	ret_reg,code_undef2
 DFA7  CB		     2			retf
 = 00E0			     2			op2	= op2 + 1
 E0A0  8B D5		     2			mov	temp,save_temp
 E0A2  8B EF		     2			mov	entry_SP,SP80
 E0A4  BF 0005		     2			mov	ret_reg,code_undef2
 E0A7  CB		     2			retf
 = 00E1			     2			op2	= op2 + 1
 E1A0  8B D5		     2			mov	temp,save_temp
 E1A2  8B EF		     2			mov	entry_SP,SP80
 E1A4  BF 0005		     2			mov	ret_reg,code_undef2
 E1A7  CB		     2			retf
 = 00E2			     2			op2	= op2 + 1
 E2A0  8B D5		     2			mov	temp,save_temp
 E2A2  8B EF		     2			mov	entry_SP,SP80
 E2A4  BF 0005		     2			mov	ret_reg,code_undef2
 E2A7  CB		     2			retf
 = 00E3			     2			op2	= op2 + 1
 E3A0  8B D5		     2			mov	temp,save_temp
 E3A2  8B EF		     2			mov	entry_SP,SP80
 E3A4  BF 0005		     2			mov	ret_reg,code_undef2
 E3A7  CB		     2			retf
 = 00E4			     2			op2	= op2 + 1
 E4A0  8B D5		     2			mov	temp,save_temp
 E4A2  8B EF		     2			mov	entry_SP,SP80
 E4A4  BF 0005		     2			mov	ret_reg,code_undef2
 E4A7  CB		     2			retf
 = 00E5			     2			op2	= op2 + 1
 E5A0  8B D5		     2			mov	temp,save_temp
 E5A2  8B EF		     2			mov	entry_SP,SP80
 E5A4  BF 0005		     2			mov	ret_reg,code_undef2
 E5A7  CB		     2			retf
 = 00E6			     2			op2	= op2 + 1
 E6A0  8B D5		     2			mov	temp,save_temp
 E6A2  8B EF		     2			mov	entry_SP,SP80
 E6A4  BF 0005		     2			mov	ret_reg,code_undef2
 E6A7  CB		     2			retf
 = 00E7			     2			op2	= op2 + 1
 E7A0  8B D5		     2			mov	temp,save_temp
 E7A2  8B EF		     2			mov	entry_SP,SP80
 E7A4  BF 0005		     2			mov	ret_reg,code_undef2
 E7A7  CB		     2			retf
 = 00E8			     2			op2	= op2 + 1
 E8A0  8B D5		     2			mov	temp,save_temp
 E8A2  8B EF		     2			mov	entry_SP,SP80
 E8A4  BF 0005		     2			mov	ret_reg,code_undef2
 E8A7  CB		     2			retf
 = 00E9			     2			op2	= op2 + 1
 E9A0  8B D5		     2			mov	temp,save_temp
 E9A2  8B EF		     2			mov	entry_SP,SP80
 E9A4  BF 0005		     2			mov	ret_reg,code_undef2
 E9A7  CB		     2			retf
 = 00EA			     2			op2	= op2 + 1
 EAA0  8B D5		     2			mov	temp,save_temp
 EAA2  8B EF		     2			mov	entry_SP,SP80
 EAA4  BF 0005		     2			mov	ret_reg,code_undef2
 EAA7  CB		     2			retf
 = 00EB			     2			op2	= op2 + 1
 EBA0  8B D5		     2			mov	temp,save_temp
 EBA2  8B EF		     2			mov	entry_SP,SP80
 EBA4  BF 0005		     2			mov	ret_reg,code_undef2
 EBA7  CB		     2			retf
 = 00EC			     2			op2	= op2 + 1
 ECA0  8B D5		     2			mov	temp,save_temp
 ECA2  8B EF		     2			mov	entry_SP,SP80
 ECA4  BF 0005		     2			mov	ret_reg,code_undef2
 ECA7  CB		     2			retf
 = 00ED			     2			op2	= op2 + 1
 = 00EE			     1		op2	= 0edh + 1
 EDA0  8B D5					mov	temp,save_temp
 EDA2  8B EF					mov	entry_SP,SP80
 EDA4  8A 34					mov	temp_h,ds:[si]
 EDA6  46					inc	si
 EDA7  2E: 88 36 EDAD R				mov	cs:CALLN_vect,temp_h
 EDAC  CD					db	0cdh
 EDAD 00			CALLN_vect	db	0
 EDAE  B2 00					mov	temp_l,0
						fetch1
 EDB0  8A 34		     1			mov	temp_h,ds:[PC80]
 EDB2  46		     1			inc	PC80
 EDB3  FF E2		     1			jmp	temp

				ED	0fdh				;RETEM
 EEA0  8B D5		     2			mov	temp,save_temp
 EEA2  8B EF		     2			mov	entry_SP,SP80
 EEA4  BF 0005		     2			mov	ret_reg,code_undef2
 EEA7  CB		     2			retf
 = 00EF			     2			op2	= op2 + 1
 EFA0  8B D5		     2			mov	temp,save_temp
 EFA2  8B EF		     2			mov	entry_SP,SP80
 EFA4  BF 0005		     2			mov	ret_reg,code_undef2
 EFA7  CB		     2			retf
 = 00F0			     2			op2	= op2 + 1
 F0A0  8B D5		     2			mov	temp,save_temp
 F0A2  8B EF		     2			mov	entry_SP,SP80
 F0A4  BF 0005		     2			mov	ret_reg,code_undef2
 F0A7  CB		     2			retf
 = 00F1			     2			op2	= op2 + 1
 F1A0  8B D5		     2			mov	temp,save_temp
 F1A2  8B EF		     2			mov	entry_SP,SP80
 F1A4  BF 0005		     2			mov	ret_reg,code_undef2
 F1A7  CB		     2			retf
 = 00F2			     2			op2	= op2 + 1
 F2A0  8B D5		     2			mov	temp,save_temp
 F2A2  8B EF		     2			mov	entry_SP,SP80
 F2A4  BF 0005		     2			mov	ret_reg,code_undef2
 F2A7  CB		     2			retf
 = 00F3			     2			op2	= op2 + 1
 F3A0  8B D5		     2			mov	temp,save_temp
 F3A2  8B EF		     2			mov	entry_SP,SP80
 F3A4  BF 0005		     2			mov	ret_reg,code_undef2
 F3A7  CB		     2			retf
 = 00F4			     2			op2	= op2 + 1
 F4A0  8B D5		     2			mov	temp,save_temp
 F4A2  8B EF		     2			mov	entry_SP,SP80
 F4A4  BF 0005		     2			mov	ret_reg,code_undef2
 F4A7  CB		     2			retf
 = 00F5			     2			op2	= op2 + 1
 F5A0  8B D5		     2			mov	temp,save_temp
 F5A2  8B EF		     2			mov	entry_SP,SP80
 F5A4  BF 0005		     2			mov	ret_reg,code_undef2
 F5A7  CB		     2			retf
 = 00F6			     2			op2	= op2 + 1
 F6A0  8B D5		     2			mov	temp,save_temp
 F6A2  8B EF		     2			mov	entry_SP,SP80
 F6A4  BF 0005		     2			mov	ret_reg,code_undef2
 F6A7  CB		     2			retf
 = 00F7			     2			op2	= op2 + 1
 F7A0  8B D5		     2			mov	temp,save_temp
 F7A2  8B EF		     2			mov	entry_SP,SP80
 F7A4  BF 0005		     2			mov	ret_reg,code_undef2
 F7A7  CB		     2			retf
 = 00F8			     2			op2	= op2 + 1
 F8A0  8B D5		     2			mov	temp,save_temp
 F8A2  8B EF		     2			mov	entry_SP,SP80
 F8A4  BF 0005		     2			mov	ret_reg,code_undef2
 F8A7  CB		     2			retf
 = 00F9			     2			op2	= op2 + 1
 F9A0  8B D5		     2			mov	temp,save_temp
 F9A2  8B EF		     2			mov	entry_SP,SP80
 F9A4  BF 0005		     2			mov	ret_reg,code_undef2
 F9A7  CB		     2			retf
 = 00FA			     2			op2	= op2 + 1
 FAA0  8B D5		     2			mov	temp,save_temp
 FAA2  8B EF		     2			mov	entry_SP,SP80
 FAA4  BF 0005		     2			mov	ret_reg,code_undef2
 FAA7  CB		     2			retf
 = 00FB			     2			op2	= op2 + 1
 FBA0  8B D5		     2			mov	temp,save_temp
 FBA2  8B EF		     2			mov	entry_SP,SP80
 FBA4  BF 0005		     2			mov	ret_reg,code_undef2
 FBA7  CB		     2			retf
 = 00FC			     2			op2	= op2 + 1
 FCA0  8B D5		     2			mov	temp,save_temp
 FCA2  8B EF		     2			mov	entry_SP,SP80
 FCA4  BF 0005		     2			mov	ret_reg,code_undef2
 FCA7  CB		     2			retf
 = 00FD			     2			op2	= op2 + 1
 = 00FE			     1		op2	= 0fdh + 1
 FDA0  8B D5					mov	temp,save_temp
 FDA2  8B EF					mov	entry_SP,SP80
 FDA4  BF 0000					mov	ret_reg,code_EDFD
 FDA7  CB					retf

				ED	0ffh
 FEA0  8B D5		     2			mov	temp,save_temp
 FEA2  8B EF		     2			mov	entry_SP,SP80
 FEA4  BF 0005		     2			mov	ret_reg,code_undef2
 FEA7  CB		     2			retf
 = 00FF			     2			op2	= op2 + 1
 = 0100			     1		op2	= 0ffh + 1
 FFA0  8B D5					mov	temp,save_temp
 FFA2  8B EF					mov	entry_SP,SP80
 FFA4  BF 0005					mov	ret_reg,code_undef2
 FFA7  CB					retf

				;================================================
				;=============  using IX IY =====================
				;================================================

				DDFD		macro	nn

					rept	nn - op2
						org	org_DDFD + op2 * 100h
						mov	temp,save_temp
						mov	entry_SP,SP80
						mov	ret_reg,code_undef2
						retf
						op2	= op2 + 1
					endm
					op2	= nn + 1
						org	org_DDFD + nn * 100h
				endm

				LDIXY		macro	dst		;LD	r,(IXY+d)

				ifidni		dst,temp_h

						mov	temp,save_temp
						mov	save_temp,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,save_temp
						mov	dst,ds:[save_temp]
						mov	save_temp,temp

				elseifidni	dst,temp_l

						mov	temp,save_temp
						mov	save_temp,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,save_temp
						mov	dst,ds:[save_temp]
						mov	save_temp,temp
				else
						mov	temp,save_temp
						mov	save_temp,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,save_temp
						mov	dst,ds:[save_temp]
						mov	save_temp,temp
				endif
						mov	temp_l,0
						fetch1
				endm

				STIXY		macro	src		;LD	(IXY+d),r

				ifidni		src,temp_h

						mov	temp,save_temp
						mov	save_temp,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,save_temp
						mov	ds:[save_temp],src
						mov	save_temp,temp

				elseifidni	src,temp_l

						mov	temp,save_temp
						mov	save_temp,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,save_temp
						mov	ds:[save_temp],src
						mov	save_temp,temp
				else
						mov	temp,save_temp
						mov	save_temp,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,save_temp
						mov	ds:[save_temp],src
						mov	save_temp,temp
				endif
						mov	temp_l,0
						fetch1
				endm

				;--- ADD IX/IY,reg16
				ADDXY		macro	dst,src
						ror	ah,1
						add	dst,src
						rcl	ah,1
						and	ah,not (n_flag)
						mov	temp_l,0
						fetch1
				endm

				;=============  using IX    =====================
 = 0060				org_DDFD	=	org_DD

 = IX				IXY		equ	IX
 = XL				XYL		equ	XL
 = XH				XYH		equ	XH

				;--------------------------------------

				rept	2

				local	inc_x,dec_x,add_x,adc_x,sub_x,sbc_x,cmp_x

				op2	=	0

				DDFD	09H				;ADD	IXY,BC
						ADDXY	IXY,BC
				DDFD	19H				;ADD	IXY,DE
						ADDXY	IXY,DE
				DDFD	21H				;LD	IXY,nn
						mov	temp,ds:[PC80]
						mov	IXY,temp
						mov	temp_l,0
						fetch3
				DDFD	22H				;LD	(nn),IXY
						push	ax
						mov	temp,bx
						lodsw
						mov	bx,ax
						mov	ax,IXY
						mov	ds:[bx],ax
						mov	bx,temp
						pop	ax
						mov	temp_l,0
						fetch1

				DDFD	23H				;INC	IXY
						inc	IXY
						mov	temp_l,0
						fetch1

				DDFD	24H				;INC	XYH
						sahf
						inc	XYH
						lahf
						jo	@f
						and	ah,not (v_flag or n_flag)
						mov	temp_l,0
						fetch1
				@@:		and	ah,not n_flag
						or	ah,v_flag
						mov	temp_l,0
						fetch1

				DDFD	25H				;DEC	XYH
						sahf
						dec	XYH
						lahf
						jo	@f
						and	ah,not(v_flag)
				;		or	ah,n_flag
						mov	temp_l,0
						fetch1
				@@:		or	ah,(v_flag or n_flag)
						mov	temp_l,0
						fetch1
				DDFD	26H				;LD	XYH,n
						mov	temp_h,ds:[PC80]
						mov	XYH,temp_h
						mov	temp_l,0
						fetch2
				DDFD	29H				;ADD	IXY,IXY
						ror	ah,1
						shl	IXY,1
						rcl	ah,1
						and	ah,not (n_flag)
						mov	temp_l,0
						fetch1
				DDFD	2aH				;LD	IXY,(nn)
						mov	temp,bx
						mov	bx,ds:[PC80]
						mov	bx,ds:[bx]
						mov	IXY,bx
						mov	bx,temp
						mov	temp_l,0
						fetch3

				DDFD	2bH				;DEC	IXY
						dec	IXY
						mov	temp_l,0
						fetch1
				DDFD	2cH				;INC	XYL
						sahf
						inc	XYL
				inc_x:		lahf
						jo	@f
						and	ah,not (v_flag or n_flag)
						mov	temp_l,0
						fetch1
				@@:		and	ah,not n_flag
						or	ah,v_flag
						mov	temp_l,0
						fetch1
				DDFD	2dH				;DEC	XYL
						sahf
						dec	XYL
				dec_x:		lahf
						jo	@f
						and	ah,not(v_flag)
				;		or	ah,n_flag
						mov	temp_l,0
						fetch1
				@@:		or	ah,(v_flag or n_flag)
						mov	temp_l,0
						fetch1
				DDFD	2eH
						mov	temp_h,ds:[PC80]	;LD	XYL,n
						mov	XYL,temp_h
						mov	temp_l,0
						fetch2
				DDFD	34H				;INC	(IXY+d)
						mov	temp,bx
						mov	bx,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,bx
						sahf
						inc	byte ptr ds:[bx]
						mov	bx,temp
						jmp	inc_x

				DDFD	35H				;DEC	(IXY+d)
						mov	temp,bx
						mov	bx,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,bx
						sahf
						dec	byte ptr ds:[bx]
						mov	bx,temp
						jmp	dec_x

				DDFD	36H				;LD	(IXY+d),n
						push	ax
						mov	temp,bx
						lodsb
						cbw
						add	ax,IXY
						mov	bx,ax
						lodsb
						mov	ds:[bx],al
						mov	bx,temp
						pop	ax
						mov	temp_l,0
						fetch1

				DDFD	39H				;ADD	IXY,SP
						ADDXY	IXY,SP80
				DDFD	44H
						LD2	B,XYH
				DDFD	45H
						LD2	B,XYL
				DDFD	46H
						LDIXY	B
				DDFD	4cH
						LD2	C_reg,XYH
				DDFD	4dH
						LD2	C_reg,XYL
				DDFD	4eH
						LDIXY	C_reg
				DDFD	54H
						LD2	D,XYH
				DDFD	55H
						LD2	D,XYL
				DDFD	56H
						LDIXY	D
				DDFD	5cH
						LD2	E,XYH
				DDFD	5dH
						LD2	E,XYL
				DDFD	5eH
						LDIXY	E
				DDFD	60H
						LD2	XYH,B
				DDFD	61H
						LD2	XYH,C_reg
				DDFD	62H
						LD2	XYH,D
				DDFD	63H
						LD2	XYH,E
				DDFD	64H
						LD2	XYH,XYH
				DDFD	65H				;LD	XYH,XYL
						mov	temp_h,XYL
						mov	XYH,temp_h
						mov	temp_l,0
						fetch1
				DDFD	66H
						LDIXY	H
				DDFD	67H
						LD2	XYH,A
				DDFD	68H
						LD2	XYL,B
				DDFD	69H
						LD2	XYL,C_reg
				DDFD	6aH
						LD2	XYL,D
				DDFD	6bH
						LD2	XYL,E
				DDFD	6cH				;LD	XYL,XYH
						mov	temp_h,XYH
						mov	XYL,temp_h
						mov	temp_l,0
						fetch1
				DDFD	6dH
						LD2	XYL,XYL
				DDFD	6eH
						LDIXY	L
				DDFD	6fH
						LD2	XYL,A
				DDFD	70H
						STIXY	B
				DDFD	71H
						STIXY	C_reg
				DDFD	72H
						STIXY	D
				DDFD	73H
						STIXY	E
				DDFD	74H
						STIXY	H
				DDFD	75H
						STIXY	L
				DDFD	77H
						STIXY	A
				DDFD	7cH
						LD2	A,XYH
				DDFD	7dH
						LD2	A,XYL
				DDFD	7eH
						LDIXY	A
				DDFD	84H				;ADD	A,XYH
						add	A,XYH
						lahf
						jo	@f
						and	ah,not (v_flag or n_flag)
						mov	temp_l,0
						fetch1
				@@:		and	ah,not n_flag
						or	ah,v_flag
						mov	temp_l,0
						fetch1

				DDFD	85H				;ADD	A,XYL
						add	A,XYL
				add_x:		lahf
						jo	@f
						and	ah,not (v_flag or n_flag)
						mov	temp_l,0
						fetch1
				@@:		and	ah,not n_flag
						or	ah,v_flag
						mov	temp_l,0
						fetch1

				DDFD	86H				;ADD	A,(IXY+d)
						mov	temp,bx
						mov	bx,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,bx
						add	A,ds:[bx]
						mov	bx,temp
						jmp	add_x

				DDFD	8cH				;ADC	A,XYH
						sahf
						adc	A,XYL
						lahf
						jo	@f
						and	ah,not (v_flag or n_flag)
						mov	temp_l,0
						fetch1
				@@:		and	ah,not n_flag
						or	ah,v_flag
						mov	temp_l,0
						fetch1

				DDFD	8dH				;ADC	A,XYL
						sahf
						adc	A,XYL
				adc_x:		lahf
						jo	@f
						and	ah,not (v_flag or n_flag)
						mov	temp_l,0
						fetch1
				@@:		and	ah,not n_flag
						or	ah,v_flag
						mov	temp_l,0
						fetch1

				DDFD	8eH				;ADC	A,(IXY+d)
						mov	temp,bx
						mov	bx,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,bx
						sahf
						adc	A,ds:[bx]
						mov	bx,temp
						jmp	adc_x

				DDFD	94H				;SUB	A,XYH
						sub	A,XYH
						lahf
						jo	@f
						and	ah,not(v_flag)
				;		or	ah,n_flag
						mov	temp_l,0
						fetch1
				@@:		or	ah,(v_flag or n_flag)
						mov	temp_l,0
						fetch1

				DDFD	95H				;SUB	A,XYL
						sub	A,XYL
				sub_x:		lahf
						jo	@f
						and	ah,not(v_flag)
				;		or	ah,n_flag
						mov	temp_l,0
						fetch1
				@@:		or	ah,(v_flag or n_flag)
						mov	temp_l,0
						fetch1

				DDFD	96H				;SUB	A,(IXY+d)
						mov	temp,bx
						mov	bx,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,bx
						sub	A,ds:[bx]
						mov	bx,temp
						jmp	sub_x

				DDFD	9cH				;SBC	A,XYH
						sahf
						sbb	A,XYH
						lahf
						jo	@f
						and	ah,not(v_flag)
				;		or	ah,n_flag
						mov	temp_l,0
						fetch1
				@@:		or	ah,(v_flag or n_flag)
						mov	temp_l,0
						fetch1

				DDFD	9dH				;SBC	A,XYL
						sahf
						sbb	A,XYL
				sbc_x:		lahf
						jo	@f
						and	ah,not(v_flag)
				;		or	ah,n_flag
						mov	temp_l,0
						fetch1
				@@:		or	ah,(v_flag or n_flag)
						mov	temp_l,0
						fetch1

				DDFD	9eH				;SBC	A,(IXY+d)
						mov	temp,bx
						mov	bx,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,bx
						sahf
						sbb	A,ds:[bx]
						mov	bx,temp
						jmp	sbc_x

				DDFD	0a4H				;AND	XYH
						and	A,XYH
						lahf
						and	ah,not(n_flag or c_flag)
						or	ah,h_flag
						mov	temp_l,0
						fetch1
				DDFD	0a5H				;AND	XYL
						and	A,XYH
						lahf
						and	ah,not(n_flag or c_flag)
						or	ah,h_flag
						mov	temp_l,0
						fetch1
				DDFD	0a6H				;AND	(IXY+d)
						mov	temp,bx
						mov	bx,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,bx
						and	A,ds:[bx]
						mov	bx,temp
						lahf
						and	ah,not(n_flag or c_flag)
						or	ah,h_flag
						mov	temp_l,0
						fetch1

				DDFD	0acH				;XOR	XYH
						xor	A,XYH
						lahf
						and	ah,not(h_flag or n_flag or c_flag)
						mov	temp_l,0
						fetch1

				DDFD	0adH				;XOR	XYL
						xor	A,XYL
						lahf
						and	ah,not(h_flag or n_flag or c_flag)
						mov	temp_l,0
						fetch1

				DDFD	0aeH				;XOR	(IXY+d)
						mov	temp,bx
						mov	bx,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,bx
						xor	A,ds:[bx]
						mov	bx,temp
						lahf
						and	ah,not(h_flag or n_flag or c_flag)
						mov	temp_l,0
						fetch1

				DDFD	0b4H				;OR	XYH
						or	A,XYH
						lahf
						and	ah,not(h_flag or n_flag or c_flag)
						mov	temp_l,0
						fetch1
				DDFD	0b5H				;OR	XYL
						or	A,XYL
						lahf
						and	ah,not(h_flag or n_flag or c_flag)
						mov	temp_l,0
						fetch1
				DDFD	0b6H				;OR	(IXY+d)
						mov	temp,bx
						mov	bx,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,bx
						or	A,ds:[bx]
						mov	bx,temp
						lahf
						and	ah,not(h_flag or n_flag or c_flag)
						mov	temp_l,0
						fetch1

				DDFD	0bcH				;CP	XYH
						cmp	A,XYH
						lahf
						jo	@f
						and	ah,not(v_flag)
				;		or	ah,n_flag
						mov	temp_l,0
						fetch1
				@@:		or	ah,(v_flag or n_flag)
						mov	temp_l,0
						fetch1

				DDFD	0bdH				;CP	XYL
						cmp	A,XYL
				cmp_x:		lahf
						jo	@f
						and	ah,not(v_flag)
				;		or	ah,n_flag
						mov	temp_l,0
						fetch1
				@@:		or	ah,(v_flag or n_flag)
						mov	temp_l,0
						fetch1

				DDFD	0beH				;CP	(IX+d)
						mov	temp,bx
						mov	bx,ax
						lodsb
						cbw
						add	ax,IXY
						xchg	ax,bx
						cmp	A,ds:[bx]
						mov	bx,temp
						jmp	cmp_x

				DDFD	0cbH				;code DDCB
				                mov     temp,ax
						lodsb
				                cbw
				                add     ax,IXY
				                push	ax
				                lodsb
				                mov     ah,al
				                mov     al,org_CBX
				                xchg    ax,temp
				                jmp	temp

				DDFD	0e1H				;POP	IXY
						mov	temp,ds:[SP80]
						mov	IXY,temp
						add	SP80,2
						mov	temp_l,0
						fetch1
				DDFD	0e3H				;EX	(SP),IXY
						mov	temp,ds:[SP80]
						xchg	temp,IXY
						mov	ds:[SP80],temp
						mov	temp_l,0
						fetch1
				DDFD	0e5H				;PUSH	IXY
						mov	temp,IXY
						sub	SP80,2
						mov	ds:[SP80],temp
						mov	temp_l,0
						fetch1
				DDFD	0e9H				;JP	(IXY)
						mov	PC80,IXY
						mov	temp_l,0
						fetch1
				DDFD	0f9H				;LD	SP,IXY
						mov	SP80,IXY
						mov	temp_l,0
						fetch1

				DDFD	0ffh
						mov	temp,save_temp
						mov	entry_SP,SP80
						mov	ret_reg,code_undef2
						retf

				;=============  using IY    =====================

				org_DDFD	=	org_FD

				IXY		equ	IY
				XYL		equ	YL
				XYH		equ	YH

				endm
 = 0000			     1	op2	=	0
 0060  8B D5		     3			mov	temp,save_temp
 0062  8B EF		     3			mov	entry_SP,SP80
 0064  BF 0005		     3			mov	ret_reg,code_undef2
 0067  CB		     3			retf
 = 0001			     3			op2	= op2 + 1
 0160  8B D5		     3			mov	temp,save_temp
 0162  8B EF		     3			mov	entry_SP,SP80
 0164  BF 0005		     3			mov	ret_reg,code_undef2
 0167  CB		     3			retf
 = 0002			     3			op2	= op2 + 1
 0260  8B D5		     3			mov	temp,save_temp
 0262  8B EF		     3			mov	entry_SP,SP80
 0264  BF 0005		     3			mov	ret_reg,code_undef2
 0267  CB		     3			retf
 = 0003			     3			op2	= op2 + 1
 0360  8B D5		     3			mov	temp,save_temp
 0362  8B EF		     3			mov	entry_SP,SP80
 0364  BF 0005		     3			mov	ret_reg,code_undef2
 0367  CB		     3			retf
 = 0004			     3			op2	= op2 + 1
 0460  8B D5		     3			mov	temp,save_temp
 0462  8B EF		     3			mov	entry_SP,SP80
 0464  BF 0005		     3			mov	ret_reg,code_undef2
 0467  CB		     3			retf
 = 0005			     3			op2	= op2 + 1
 0560  8B D5		     3			mov	temp,save_temp
 0562  8B EF		     3			mov	entry_SP,SP80
 0564  BF 0005		     3			mov	ret_reg,code_undef2
 0567  CB		     3			retf
 = 0006			     3			op2	= op2 + 1
 0660  8B D5		     3			mov	temp,save_temp
 0662  8B EF		     3			mov	entry_SP,SP80
 0664  BF 0005		     3			mov	ret_reg,code_undef2
 0667  CB		     3			retf
 = 0007			     3			op2	= op2 + 1
 0760  8B D5		     3			mov	temp,save_temp
 0762  8B EF		     3			mov	entry_SP,SP80
 0764  BF 0005		     3			mov	ret_reg,code_undef2
 0767  CB		     3			retf
 = 0008			     3			op2	= op2 + 1
 0860  8B D5		     3			mov	temp,save_temp
 0862  8B EF		     3			mov	entry_SP,SP80
 0864  BF 0005		     3			mov	ret_reg,code_undef2
 0867  CB		     3			retf
 = 0009			     3			op2	= op2 + 1
 = 000A			     2		op2	= 09H + 1
 0960  D0 CC		     2			ror	ah,1
 0962  2E: 01 0E 00F8	     2			add	IXY,BC
 0967  D0 D4		     2			rcl	ah,1
 0969  80 E4 FD		     2			and	ah,not (n_flag)
 096C  B2 00		     2			mov	temp_l,0
 096E  8A 34		     3			mov	temp_h,ds:[PC80]
 0970  46		     3			inc	PC80
 0971  FF E2		     3			jmp	temp
 0A60  8B D5		     3			mov	temp,save_temp
 0A62  8B EF		     3			mov	entry_SP,SP80
 0A64  BF 0005		     3			mov	ret_reg,code_undef2
 0A67  CB		     3			retf
 = 000B			     3			op2	= op2 + 1
 0B60  8B D5		     3			mov	temp,save_temp
 0B62  8B EF		     3			mov	entry_SP,SP80
 0B64  BF 0005		     3			mov	ret_reg,code_undef2
 0B67  CB		     3			retf
 = 000C			     3			op2	= op2 + 1
 0C60  8B D5		     3			mov	temp,save_temp
 0C62  8B EF		     3			mov	entry_SP,SP80
 0C64  BF 0005		     3			mov	ret_reg,code_undef2
 0C67  CB		     3			retf
 = 000D			     3			op2	= op2 + 1
 0D60  8B D5		     3			mov	temp,save_temp
 0D62  8B EF		     3			mov	entry_SP,SP80
 0D64  BF 0005		     3			mov	ret_reg,code_undef2
 0D67  CB		     3			retf
 = 000E			     3			op2	= op2 + 1
 0E60  8B D5		     3			mov	temp,save_temp
 0E62  8B EF		     3			mov	entry_SP,SP80
 0E64  BF 0005		     3			mov	ret_reg,code_undef2
 0E67  CB		     3			retf
 = 000F			     3			op2	= op2 + 1
 0F60  8B D5		     3			mov	temp,save_temp
 0F62  8B EF		     3			mov	entry_SP,SP80
 0F64  BF 0005		     3			mov	ret_reg,code_undef2
 0F67  CB		     3			retf
 = 0010			     3			op2	= op2 + 1
 1060  8B D5		     3			mov	temp,save_temp
 1062  8B EF		     3			mov	entry_SP,SP80
 1064  BF 0005		     3			mov	ret_reg,code_undef2
 1067  CB		     3			retf
 = 0011			     3			op2	= op2 + 1
 1160  8B D5		     3			mov	temp,save_temp
 1162  8B EF		     3			mov	entry_SP,SP80
 1164  BF 0005		     3			mov	ret_reg,code_undef2
 1167  CB		     3			retf
 = 0012			     3			op2	= op2 + 1
 1260  8B D5		     3			mov	temp,save_temp
 1262  8B EF		     3			mov	entry_SP,SP80
 1264  BF 0005		     3			mov	ret_reg,code_undef2
 1267  CB		     3			retf
 = 0013			     3			op2	= op2 + 1
 1360  8B D5		     3			mov	temp,save_temp
 1362  8B EF		     3			mov	entry_SP,SP80
 1364  BF 0005		     3			mov	ret_reg,code_undef2
 1367  CB		     3			retf
 = 0014			     3			op2	= op2 + 1
 1460  8B D5		     3			mov	temp,save_temp
 1462  8B EF		     3			mov	entry_SP,SP80
 1464  BF 0005		     3			mov	ret_reg,code_undef2
 1467  CB		     3			retf
 = 0015			     3			op2	= op2 + 1
 1560  8B D5		     3			mov	temp,save_temp
 1562  8B EF		     3			mov	entry_SP,SP80
 1564  BF 0005		     3			mov	ret_reg,code_undef2
 1567  CB		     3			retf
 = 0016			     3			op2	= op2 + 1
 1660  8B D5		     3			mov	temp,save_temp
 1662  8B EF		     3			mov	entry_SP,SP80
 1664  BF 0005		     3			mov	ret_reg,code_undef2
 1667  CB		     3			retf
 = 0017			     3			op2	= op2 + 1
 1760  8B D5		     3			mov	temp,save_temp
 1762  8B EF		     3			mov	entry_SP,SP80
 1764  BF 0005		     3			mov	ret_reg,code_undef2
 1767  CB		     3			retf
 = 0018			     3			op2	= op2 + 1
 1860  8B D5		     3			mov	temp,save_temp
 1862  8B EF		     3			mov	entry_SP,SP80
 1864  BF 0005		     3			mov	ret_reg,code_undef2
 1867  CB		     3			retf
 = 0019			     3			op2	= op2 + 1
 = 001A			     2		op2	= 19H + 1
 1960  D0 CC		     2			ror	ah,1
 1962  2E: 01 2E 00F8	     2			add	IXY,DE
 1967  D0 D4		     2			rcl	ah,1
 1969  80 E4 FD		     2			and	ah,not (n_flag)
 196C  B2 00		     2			mov	temp_l,0
 196E  8A 34		     3			mov	temp_h,ds:[PC80]
 1970  46		     3			inc	PC80
 1971  FF E2		     3			jmp	temp
 1A60  8B D5		     3			mov	temp,save_temp
 1A62  8B EF		     3			mov	entry_SP,SP80
 1A64  BF 0005		     3			mov	ret_reg,code_undef2
 1A67  CB		     3			retf
 = 001B			     3			op2	= op2 + 1
 1B60  8B D5		     3			mov	temp,save_temp
 1B62  8B EF		     3			mov	entry_SP,SP80
 1B64  BF 0005		     3			mov	ret_reg,code_undef2
 1B67  CB		     3			retf
 = 001C			     3			op2	= op2 + 1
 1C60  8B D5		     3			mov	temp,save_temp
 1C62  8B EF		     3			mov	entry_SP,SP80
 1C64  BF 0005		     3			mov	ret_reg,code_undef2
 1C67  CB		     3			retf
 = 001D			     3			op2	= op2 + 1
 1D60  8B D5		     3			mov	temp,save_temp
 1D62  8B EF		     3			mov	entry_SP,SP80
 1D64  BF 0005		     3			mov	ret_reg,code_undef2
 1D67  CB		     3			retf
 = 001E			     3			op2	= op2 + 1
 1E60  8B D5		     3			mov	temp,save_temp
 1E62  8B EF		     3			mov	entry_SP,SP80
 1E64  BF 0005		     3			mov	ret_reg,code_undef2
 1E67  CB		     3			retf
 = 001F			     3			op2	= op2 + 1
 1F60  8B D5		     3			mov	temp,save_temp
 1F62  8B EF		     3			mov	entry_SP,SP80
 1F64  BF 0005		     3			mov	ret_reg,code_undef2
 1F67  CB		     3			retf
 = 0020			     3			op2	= op2 + 1
 2060  8B D5		     3			mov	temp,save_temp
 2062  8B EF		     3			mov	entry_SP,SP80
 2064  BF 0005		     3			mov	ret_reg,code_undef2
 2067  CB		     3			retf
 = 0021			     3			op2	= op2 + 1
 = 0022			     2		op2	= 21H + 1
 2160  8B 14		     1			mov	temp,ds:[PC80]
 2162  2E: 89 16 00F8	     1			mov	IXY,temp
 2167  B2 00		     1			mov	temp_l,0
 2169  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 216C  83 C6 03		     2			add	PC80,3
 216F  FF E2		     2			jmp	temp
 = 0023			     2		op2	= 22H + 1
 2260  50		     1			push	ax
 2261  8B D3		     1			mov	temp,bx
 2263  AD		     1			lodsw
 2264  8B D8		     1			mov	bx,ax
 2266  2E: A1 00F8	     1			mov	ax,IXY
 226A  89 07		     1			mov	ds:[bx],ax
 226C  8B DA		     1			mov	bx,temp
 226E  58		     1			pop	ax
 226F  B2 00		     1			mov	temp_l,0
 2271  8A 34		     2			mov	temp_h,ds:[PC80]
 2273  46		     2			inc	PC80
 2274  FF E2		     2			jmp	temp
 = 0024			     2		op2	= 23H + 1
 2360  2E: FF 06 00F8	     1			inc	IXY
 2365  B2 00		     1			mov	temp_l,0
 2367  8A 34		     2			mov	temp_h,ds:[PC80]
 2369  46		     2			inc	PC80
 236A  FF E2		     2			jmp	temp
 = 0025			     2		op2	= 24H + 1
 2460  9E		     1			sahf
 2461  2E: FE 06 00F9	     1			inc	XYH
 2466  9F		     1			lahf
 2467  70 0A		     1			jo	@f
 2469  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 246C  B2 00		     1			mov	temp_l,0
 246E  8A 34		     2			mov	temp_h,ds:[PC80]
 2470  46		     2			inc	PC80
 2471  FF E2		     2			jmp	temp
 2473  80 E4 FD		     1	@@:		and	ah,not n_flag
 2476  80 CC 04		     1			or	ah,v_flag
 2479  B2 00		     1			mov	temp_l,0
 247B  8A 34		     2			mov	temp_h,ds:[PC80]
 247D  46		     2			inc	PC80
 247E  FF E2		     2			jmp	temp
 = 0026			     2		op2	= 25H + 1
 2560  9E		     1			sahf
 2561  2E: FE 0E 00F9	     1			dec	XYH
 2566  9F		     1			lahf
 2567  70 0A		     1			jo	@f
 2569  80 E4 FB		     1			and	ah,not(v_flag)
 256C  B2 00		     1			mov	temp_l,0
 256E  8A 34		     2			mov	temp_h,ds:[PC80]
 2570  46		     2			inc	PC80
 2571  FF E2		     2			jmp	temp
 2573  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 2576  B2 00		     1			mov	temp_l,0
 2578  8A 34		     2			mov	temp_h,ds:[PC80]
 257A  46		     2			inc	PC80
 257B  FF E2		     2			jmp	temp
 = 0027			     2		op2	= 26H + 1
 2660  8A 34		     1			mov	temp_h,ds:[PC80]
 2662  2E: 88 36 00F9	     1			mov	XYH,temp_h
 2667  B2 00		     1			mov	temp_l,0
 2669  46		     2			inc	PC80
 266A  8A 34		     2			mov	temp_h,ds:[PC80]
 266C  46		     2			inc	PC80
 266D  FF E2		     2			jmp	temp
 2760  8B D5		     3			mov	temp,save_temp
 2762  8B EF		     3			mov	entry_SP,SP80
 2764  BF 0005		     3			mov	ret_reg,code_undef2
 2767  CB		     3			retf
 = 0028			     3			op2	= op2 + 1
 2860  8B D5		     3			mov	temp,save_temp
 2862  8B EF		     3			mov	entry_SP,SP80
 2864  BF 0005		     3			mov	ret_reg,code_undef2
 2867  CB		     3			retf
 = 0029			     3			op2	= op2 + 1
 = 002A			     2		op2	= 29H + 1
 2960  D0 CC		     1			ror	ah,1
 2962  2E: D1 26 00F8	     1			shl	IXY,1
 2967  D0 D4		     1			rcl	ah,1
 2969  80 E4 FD		     1			and	ah,not (n_flag)
 296C  B2 00		     1			mov	temp_l,0
 296E  8A 34		     2			mov	temp_h,ds:[PC80]
 2970  46		     2			inc	PC80
 2971  FF E2		     2			jmp	temp
 = 002B			     2		op2	= 2aH + 1
 2A60  8B D3		     1			mov	temp,bx
 2A62  8B 1C		     1			mov	bx,ds:[PC80]
 2A64  8B 1F		     1			mov	bx,ds:[bx]
 2A66  2E: 89 1E 00F8	     1			mov	IXY,bx
 2A6B  8B DA		     1			mov	bx,temp
 2A6D  B2 00		     1			mov	temp_l,0
 2A6F  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 2A72  83 C6 03		     2			add	PC80,3
 2A75  FF E2		     2			jmp	temp
 = 002C			     2		op2	= 2bH + 1
 2B60  2E: FF 0E 00F8	     1			dec	IXY
 2B65  B2 00		     1			mov	temp_l,0
 2B67  8A 34		     2			mov	temp_h,ds:[PC80]
 2B69  46		     2			inc	PC80
 2B6A  FF E2		     2			jmp	temp
 = 002D			     2		op2	= 2cH + 1
 2C60  9E		     1			sahf
 2C61  2E: FE 06 00F8	     1			inc	XYL
 2C66  9F		     1	??0000:		lahf
 2C67  70 0A		     1			jo	@f
 2C69  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 2C6C  B2 00		     1			mov	temp_l,0
 2C6E  8A 34		     2			mov	temp_h,ds:[PC80]
 2C70  46		     2			inc	PC80
 2C71  FF E2		     2			jmp	temp
 2C73  80 E4 FD		     1	@@:		and	ah,not n_flag
 2C76  80 CC 04		     1			or	ah,v_flag
 2C79  B2 00		     1			mov	temp_l,0
 2C7B  8A 34		     2			mov	temp_h,ds:[PC80]
 2C7D  46		     2			inc	PC80
 2C7E  FF E2		     2			jmp	temp
 = 002E			     2		op2	= 2dH + 1
 2D60  9E		     1			sahf
 2D61  2E: FE 0E 00F8	     1			dec	XYL
 2D66  9F		     1	??0001:		lahf
 2D67  70 0A		     1			jo	@f
 2D69  80 E4 FB		     1			and	ah,not(v_flag)
 2D6C  B2 00		     1			mov	temp_l,0
 2D6E  8A 34		     2			mov	temp_h,ds:[PC80]
 2D70  46		     2			inc	PC80
 2D71  FF E2		     2			jmp	temp
 2D73  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 2D76  B2 00		     1			mov	temp_l,0
 2D78  8A 34		     2			mov	temp_h,ds:[PC80]
 2D7A  46		     2			inc	PC80
 2D7B  FF E2		     2			jmp	temp
 = 002F			     2		op2	= 2eH + 1
 2E60  8A 34		     1			mov	temp_h,ds:[PC80]	;LD	XYL,n
 2E62  2E: 88 36 00F8	     1			mov	XYL,temp_h
 2E67  B2 00		     1			mov	temp_l,0
 2E69  46		     2			inc	PC80
 2E6A  8A 34		     2			mov	temp_h,ds:[PC80]
 2E6C  46		     2			inc	PC80
 2E6D  FF E2		     2			jmp	temp
 2F60  8B D5		     3			mov	temp,save_temp
 2F62  8B EF		     3			mov	entry_SP,SP80
 2F64  BF 0005		     3			mov	ret_reg,code_undef2
 2F67  CB		     3			retf
 = 0030			     3			op2	= op2 + 1
 3060  8B D5		     3			mov	temp,save_temp
 3062  8B EF		     3			mov	entry_SP,SP80
 3064  BF 0005		     3			mov	ret_reg,code_undef2
 3067  CB		     3			retf
 = 0031			     3			op2	= op2 + 1
 3160  8B D5		     3			mov	temp,save_temp
 3162  8B EF		     3			mov	entry_SP,SP80
 3164  BF 0005		     3			mov	ret_reg,code_undef2
 3167  CB		     3			retf
 = 0032			     3			op2	= op2 + 1
 3260  8B D5		     3			mov	temp,save_temp
 3262  8B EF		     3			mov	entry_SP,SP80
 3264  BF 0005		     3			mov	ret_reg,code_undef2
 3267  CB		     3			retf
 = 0033			     3			op2	= op2 + 1
 3360  8B D5		     3			mov	temp,save_temp
 3362  8B EF		     3			mov	entry_SP,SP80
 3364  BF 0005		     3			mov	ret_reg,code_undef2
 3367  CB		     3			retf
 = 0034			     3			op2	= op2 + 1
 = 0035			     2		op2	= 34H + 1
 3460  8B D3		     1			mov	temp,bx
 3462  8B D8		     1			mov	bx,ax
 3464  AC		     1			lodsb
 3465  98		     1			cbw
 3466  2E: 03 06 00F8	     1			add	ax,IXY
 346B  93		     1			xchg	ax,bx
 346C  9E		     1			sahf
 346D  FE 07		     1			inc	byte ptr ds:[bx]
 346F  8B DA		     1			mov	bx,temp
 3471  E9 F7F2		     1			jmp	??0000
 = 0036			     2		op2	= 35H + 1
 3560  8B D3		     1			mov	temp,bx
 3562  8B D8		     1			mov	bx,ax
 3564  AC		     1			lodsb
 3565  98		     1			cbw
 3566  2E: 03 06 00F8	     1			add	ax,IXY
 356B  93		     1			xchg	ax,bx
 356C  9E		     1			sahf
 356D  FE 0F		     1			dec	byte ptr ds:[bx]
 356F  8B DA		     1			mov	bx,temp
 3571  E9 F7F2		     1			jmp	??0001
 = 0037			     2		op2	= 36H + 1
 3660  50		     1			push	ax
 3661  8B D3		     1			mov	temp,bx
 3663  AC		     1			lodsb
 3664  98		     1			cbw
 3665  2E: 03 06 00F8	     1			add	ax,IXY
 366A  8B D8		     1			mov	bx,ax
 366C  AC		     1			lodsb
 366D  88 07		     1			mov	ds:[bx],al
 366F  8B DA		     1			mov	bx,temp
 3671  58		     1			pop	ax
 3672  B2 00		     1			mov	temp_l,0
 3674  8A 34		     2			mov	temp_h,ds:[PC80]
 3676  46		     2			inc	PC80
 3677  FF E2		     2			jmp	temp
 3760  8B D5		     3			mov	temp,save_temp
 3762  8B EF		     3			mov	entry_SP,SP80
 3764  BF 0005		     3			mov	ret_reg,code_undef2
 3767  CB		     3			retf
 = 0038			     3			op2	= op2 + 1
 3860  8B D5		     3			mov	temp,save_temp
 3862  8B EF		     3			mov	entry_SP,SP80
 3864  BF 0005		     3			mov	ret_reg,code_undef2
 3867  CB		     3			retf
 = 0039			     3			op2	= op2 + 1
 = 003A			     2		op2	= 39H + 1
 3960  D0 CC		     2			ror	ah,1
 3962  2E: 01 3E 00F8	     2			add	IXY,SP80
 3967  D0 D4		     2			rcl	ah,1
 3969  80 E4 FD		     2			and	ah,not (n_flag)
 396C  B2 00		     2			mov	temp_l,0
 396E  8A 34		     3			mov	temp_h,ds:[PC80]
 3970  46		     3			inc	PC80
 3971  FF E2		     3			jmp	temp
 3A60  8B D5		     3			mov	temp,save_temp
 3A62  8B EF		     3			mov	entry_SP,SP80
 3A64  BF 0005		     3			mov	ret_reg,code_undef2
 3A67  CB		     3			retf
 = 003B			     3			op2	= op2 + 1
 3B60  8B D5		     3			mov	temp,save_temp
 3B62  8B EF		     3			mov	entry_SP,SP80
 3B64  BF 0005		     3			mov	ret_reg,code_undef2
 3B67  CB		     3			retf
 = 003C			     3			op2	= op2 + 1
 3C60  8B D5		     3			mov	temp,save_temp
 3C62  8B EF		     3			mov	entry_SP,SP80
 3C64  BF 0005		     3			mov	ret_reg,code_undef2
 3C67  CB		     3			retf
 = 003D			     3			op2	= op2 + 1
 3D60  8B D5		     3			mov	temp,save_temp
 3D62  8B EF		     3			mov	entry_SP,SP80
 3D64  BF 0005		     3			mov	ret_reg,code_undef2
 3D67  CB		     3			retf
 = 003E			     3			op2	= op2 + 1
 3E60  8B D5		     3			mov	temp,save_temp
 3E62  8B EF		     3			mov	entry_SP,SP80
 3E64  BF 0005		     3			mov	ret_reg,code_undef2
 3E67  CB		     3			retf
 = 003F			     3			op2	= op2 + 1
 3F60  8B D5		     3			mov	temp,save_temp
 3F62  8B EF		     3			mov	entry_SP,SP80
 3F64  BF 0005		     3			mov	ret_reg,code_undef2
 3F67  CB		     3			retf
 = 0040			     3			op2	= op2 + 1
 4060  8B D5		     3			mov	temp,save_temp
 4062  8B EF		     3			mov	entry_SP,SP80
 4064  BF 0005		     3			mov	ret_reg,code_undef2
 4067  CB		     3			retf
 = 0041			     3			op2	= op2 + 1
 4160  8B D5		     3			mov	temp,save_temp
 4162  8B EF		     3			mov	entry_SP,SP80
 4164  BF 0005		     3			mov	ret_reg,code_undef2
 4167  CB		     3			retf
 = 0042			     3			op2	= op2 + 1
 4260  8B D5		     3			mov	temp,save_temp
 4262  8B EF		     3			mov	entry_SP,SP80
 4264  BF 0005		     3			mov	ret_reg,code_undef2
 4267  CB		     3			retf
 = 0043			     3			op2	= op2 + 1
 4360  8B D5		     3			mov	temp,save_temp
 4362  8B EF		     3			mov	entry_SP,SP80
 4364  BF 0005		     3			mov	ret_reg,code_undef2
 4367  CB		     3			retf
 = 0044			     3			op2	= op2 + 1
 = 0045			     2		op2	= 44H + 1
 4460  2E: 8A 2E 00F9	     2			mov	B,XYH
 4465  B2 00		     2			mov	temp_l,0
 4467  8A 34		     3			mov	temp_h,ds:[PC80]
 4469  46		     3			inc	PC80
 446A  FF E2		     3			jmp	temp
 = 0046			     2		op2	= 45H + 1
 4560  2E: 8A 2E 00F8	     2			mov	B,XYL
 4565  B2 00		     2			mov	temp_l,0
 4567  8A 34		     3			mov	temp_h,ds:[PC80]
 4569  46		     3			inc	PC80
 456A  FF E2		     3			jmp	temp
 = 0047			     2		op2	= 46H + 1
 4660  8B D5		     2			mov	temp,save_temp
 4662  8B E8		     2			mov	save_temp,ax
 4664  AC		     2			lodsb
 4665  98		     2			cbw
 4666  2E: 03 06 00F8	     2			add	ax,IXY
 466B  95		     2			xchg	ax,save_temp
 466C  3E: 8A 6E 00	     2			mov	B,ds:[save_temp]
 4670  8B EA		     2			mov	save_temp,temp
 4672  B2 00		     2			mov	temp_l,0
 4674  8A 34		     3			mov	temp_h,ds:[PC80]
 4676  46		     3			inc	PC80
 4677  FF E2		     3			jmp	temp
 4760  8B D5		     3			mov	temp,save_temp
 4762  8B EF		     3			mov	entry_SP,SP80
 4764  BF 0005		     3			mov	ret_reg,code_undef2
 4767  CB		     3			retf
 = 0048			     3			op2	= op2 + 1
 4860  8B D5		     3			mov	temp,save_temp
 4862  8B EF		     3			mov	entry_SP,SP80
 4864  BF 0005		     3			mov	ret_reg,code_undef2
 4867  CB		     3			retf
 = 0049			     3			op2	= op2 + 1
 4960  8B D5		     3			mov	temp,save_temp
 4962  8B EF		     3			mov	entry_SP,SP80
 4964  BF 0005		     3			mov	ret_reg,code_undef2
 4967  CB		     3			retf
 = 004A			     3			op2	= op2 + 1
 4A60  8B D5		     3			mov	temp,save_temp
 4A62  8B EF		     3			mov	entry_SP,SP80
 4A64  BF 0005		     3			mov	ret_reg,code_undef2
 4A67  CB		     3			retf
 = 004B			     3			op2	= op2 + 1
 4B60  8B D5		     3			mov	temp,save_temp
 4B62  8B EF		     3			mov	entry_SP,SP80
 4B64  BF 0005		     3			mov	ret_reg,code_undef2
 4B67  CB		     3			retf
 = 004C			     3			op2	= op2 + 1
 = 004D			     2		op2	= 4cH + 1
 4C60  2E: 8A 0E 00F9	     2			mov	C_reg,XYH
 4C65  B2 00		     2			mov	temp_l,0
 4C67  8A 34		     3			mov	temp_h,ds:[PC80]
 4C69  46		     3			inc	PC80
 4C6A  FF E2		     3			jmp	temp
 = 004E			     2		op2	= 4dH + 1
 4D60  2E: 8A 0E 00F8	     2			mov	C_reg,XYL
 4D65  B2 00		     2			mov	temp_l,0
 4D67  8A 34		     3			mov	temp_h,ds:[PC80]
 4D69  46		     3			inc	PC80
 4D6A  FF E2		     3			jmp	temp
 = 004F			     2		op2	= 4eH + 1
 4E60  8B D5		     2			mov	temp,save_temp
 4E62  8B E8		     2			mov	save_temp,ax
 4E64  AC		     2			lodsb
 4E65  98		     2			cbw
 4E66  2E: 03 06 00F8	     2			add	ax,IXY
 4E6B  95		     2			xchg	ax,save_temp
 4E6C  3E: 8A 4E 00	     2			mov	C_reg,ds:[save_temp]
 4E70  8B EA		     2			mov	save_temp,temp
 4E72  B2 00		     2			mov	temp_l,0
 4E74  8A 34		     3			mov	temp_h,ds:[PC80]
 4E76  46		     3			inc	PC80
 4E77  FF E2		     3			jmp	temp
 4F60  8B D5		     3			mov	temp,save_temp
 4F62  8B EF		     3			mov	entry_SP,SP80
 4F64  BF 0005		     3			mov	ret_reg,code_undef2
 4F67  CB		     3			retf
 = 0050			     3			op2	= op2 + 1
 5060  8B D5		     3			mov	temp,save_temp
 5062  8B EF		     3			mov	entry_SP,SP80
 5064  BF 0005		     3			mov	ret_reg,code_undef2
 5067  CB		     3			retf
 = 0051			     3			op2	= op2 + 1
 5160  8B D5		     3			mov	temp,save_temp
 5162  8B EF		     3			mov	entry_SP,SP80
 5164  BF 0005		     3			mov	ret_reg,code_undef2
 5167  CB		     3			retf
 = 0052			     3			op2	= op2 + 1
 5260  8B D5		     3			mov	temp,save_temp
 5262  8B EF		     3			mov	entry_SP,SP80
 5264  BF 0005		     3			mov	ret_reg,code_undef2
 5267  CB		     3			retf
 = 0053			     3			op2	= op2 + 1
 5360  8B D5		     3			mov	temp,save_temp
 5362  8B EF		     3			mov	entry_SP,SP80
 5364  BF 0005		     3			mov	ret_reg,code_undef2
 5367  CB		     3			retf
 = 0054			     3			op2	= op2 + 1
 = 0055			     2		op2	= 54H + 1
 5460  8B D5		     2			mov	temp,save_temp
 5462  2E: 8A 36 00F9	     2			mov	D,XYH
 5467  8B EA		     2			mov	save_temp,temp
 5469  B2 00		     2			mov	temp_l,0
 546B  8A 34		     3			mov	temp_h,ds:[PC80]
 546D  46		     3			inc	PC80
 546E  FF E2		     3			jmp	temp
 = 0056			     2		op2	= 55H + 1
 5560  8B D5		     2			mov	temp,save_temp
 5562  2E: 8A 36 00F8	     2			mov	D,XYL
 5567  8B EA		     2			mov	save_temp,temp
 5569  B2 00		     2			mov	temp_l,0
 556B  8A 34		     3			mov	temp_h,ds:[PC80]
 556D  46		     3			inc	PC80
 556E  FF E2		     3			jmp	temp
 = 0057			     2		op2	= 56H + 1
 5660  8B D5		     2			mov	temp,save_temp
 5662  8B E8		     2			mov	save_temp,ax
 5664  AC		     2			lodsb
 5665  98		     2			cbw
 5666  2E: 03 06 00F8	     2			add	ax,IXY
 566B  95		     2			xchg	ax,save_temp
 566C  3E: 8A 76 00	     2			mov	D,ds:[save_temp]
 5670  8B EA		     2			mov	save_temp,temp
 5672  B2 00		     2			mov	temp_l,0
 5674  8A 34		     3			mov	temp_h,ds:[PC80]
 5676  46		     3			inc	PC80
 5677  FF E2		     3			jmp	temp
 5760  8B D5		     3			mov	temp,save_temp
 5762  8B EF		     3			mov	entry_SP,SP80
 5764  BF 0005		     3			mov	ret_reg,code_undef2
 5767  CB		     3			retf
 = 0058			     3			op2	= op2 + 1
 5860  8B D5		     3			mov	temp,save_temp
 5862  8B EF		     3			mov	entry_SP,SP80
 5864  BF 0005		     3			mov	ret_reg,code_undef2
 5867  CB		     3			retf
 = 0059			     3			op2	= op2 + 1
 5960  8B D5		     3			mov	temp,save_temp
 5962  8B EF		     3			mov	entry_SP,SP80
 5964  BF 0005		     3			mov	ret_reg,code_undef2
 5967  CB		     3			retf
 = 005A			     3			op2	= op2 + 1
 5A60  8B D5		     3			mov	temp,save_temp
 5A62  8B EF		     3			mov	entry_SP,SP80
 5A64  BF 0005		     3			mov	ret_reg,code_undef2
 5A67  CB		     3			retf
 = 005B			     3			op2	= op2 + 1
 5B60  8B D5		     3			mov	temp,save_temp
 5B62  8B EF		     3			mov	entry_SP,SP80
 5B64  BF 0005		     3			mov	ret_reg,code_undef2
 5B67  CB		     3			retf
 = 005C			     3			op2	= op2 + 1
 = 005D			     2		op2	= 5cH + 1
 5C60  8B D5		     2			mov	temp,save_temp
 5C62  2E: 8A 16 00F9	     2			mov	E,XYH
 5C67  8B EA		     2			mov	save_temp,temp
 5C69  B2 00		     2			mov	temp_l,0
 5C6B  8A 34		     3			mov	temp_h,ds:[PC80]
 5C6D  46		     3			inc	PC80
 5C6E  FF E2		     3			jmp	temp
 = 005E			     2		op2	= 5dH + 1
 5D60  8B D5		     2			mov	temp,save_temp
 5D62  2E: 8A 16 00F8	     2			mov	E,XYL
 5D67  8B EA		     2			mov	save_temp,temp
 5D69  B2 00		     2			mov	temp_l,0
 5D6B  8A 34		     3			mov	temp_h,ds:[PC80]
 5D6D  46		     3			inc	PC80
 5D6E  FF E2		     3			jmp	temp
 = 005F			     2		op2	= 5eH + 1
 5E60  8B D5		     2			mov	temp,save_temp
 5E62  8B E8		     2			mov	save_temp,ax
 5E64  AC		     2			lodsb
 5E65  98		     2			cbw
 5E66  2E: 03 06 00F8	     2			add	ax,IXY
 5E6B  95		     2			xchg	ax,save_temp
 5E6C  3E: 8A 56 00	     2			mov	E,ds:[save_temp]
 5E70  8B EA		     2			mov	save_temp,temp
 5E72  B2 00		     2			mov	temp_l,0
 5E74  8A 34		     3			mov	temp_h,ds:[PC80]
 5E76  46		     3			inc	PC80
 5E77  FF E2		     3			jmp	temp
 5F60  8B D5		     3			mov	temp,save_temp
 5F62  8B EF		     3			mov	entry_SP,SP80
 5F64  BF 0005		     3			mov	ret_reg,code_undef2
 5F67  CB		     3			retf
 = 0060			     3			op2	= op2 + 1
 = 0061			     2		op2	= 60H + 1
 6060  2E: 88 2E 00F9	     2			mov	XYH,B
 6065  B2 00		     2			mov	temp_l,0
 6067  8A 34		     3			mov	temp_h,ds:[PC80]
 6069  46		     3			inc	PC80
 606A  FF E2		     3			jmp	temp
 = 0062			     2		op2	= 61H + 1
 6160  2E: 88 0E 00F9	     2			mov	XYH,C_reg
 6165  B2 00		     2			mov	temp_l,0
 6167  8A 34		     3			mov	temp_h,ds:[PC80]
 6169  46		     3			inc	PC80
 616A  FF E2		     3			jmp	temp
 = 0063			     2		op2	= 62H + 1
 6260  8B D5		     2			mov	temp,save_temp
 6262  2E: 88 36 00F9	     2			mov	XYH,D
 6267  B2 00		     2			mov	temp_l,0
 6269  8A 34		     3			mov	temp_h,ds:[PC80]
 626B  46		     3			inc	PC80
 626C  FF E2		     3			jmp	temp
 = 0064			     2		op2	= 63H + 1
 6360  8B D5		     2			mov	temp,save_temp
 6362  2E: 88 16 00F9	     2			mov	XYH,E
 6367  B2 00		     2			mov	temp_l,0
 6369  8A 34		     3			mov	temp_h,ds:[PC80]
 636B  46		     3			inc	PC80
 636C  FF E2		     3			jmp	temp
 = 0065			     2		op2	= 64H + 1
 6460  B2 00		     2			mov	temp_l,0
 6462  8A 34		     3			mov	temp_h,ds:[PC80]
 6464  46		     3			inc	PC80
 6465  FF E2		     3			jmp	temp
 = 0066			     2		op2	= 65H + 1
 6560  2E: 8A 36 00F8	     1			mov	temp_h,XYL
 6565  2E: 88 36 00F9	     1			mov	XYH,temp_h
 656A  B2 00		     1			mov	temp_l,0
 656C  8A 34		     2			mov	temp_h,ds:[PC80]
 656E  46		     2			inc	PC80
 656F  FF E2		     2			jmp	temp
 = 0067			     2		op2	= 66H + 1
 6660  8B D5		     2			mov	temp,save_temp
 6662  8B E8		     2			mov	save_temp,ax
 6664  AC		     2			lodsb
 6665  98		     2			cbw
 6666  2E: 03 06 00F8	     2			add	ax,IXY
 666B  95		     2			xchg	ax,save_temp
 666C  3E: 8A 7E 00	     2			mov	H,ds:[save_temp]
 6670  8B EA		     2			mov	save_temp,temp
 6672  B2 00		     2			mov	temp_l,0
 6674  8A 34		     3			mov	temp_h,ds:[PC80]
 6676  46		     3			inc	PC80
 6677  FF E2		     3			jmp	temp
 = 0068			     2		op2	= 67H + 1
 6760  2E: A2 00F9	     2			mov	XYH,A
 6764  B2 00		     2			mov	temp_l,0
 6766  8A 34		     3			mov	temp_h,ds:[PC80]
 6768  46		     3			inc	PC80
 6769  FF E2		     3			jmp	temp
 = 0069			     2		op2	= 68H + 1
 6860  2E: 88 2E 00F8	     2			mov	XYL,B
 6865  B2 00		     2			mov	temp_l,0
 6867  8A 34		     3			mov	temp_h,ds:[PC80]
 6869  46		     3			inc	PC80
 686A  FF E2		     3			jmp	temp
 = 006A			     2		op2	= 69H + 1
 6960  2E: 88 0E 00F8	     2			mov	XYL,C_reg
 6965  B2 00		     2			mov	temp_l,0
 6967  8A 34		     3			mov	temp_h,ds:[PC80]
 6969  46		     3			inc	PC80
 696A  FF E2		     3			jmp	temp
 = 006B			     2		op2	= 6aH + 1
 6A60  8B D5		     2			mov	temp,save_temp
 6A62  2E: 88 36 00F8	     2			mov	XYL,D
 6A67  B2 00		     2			mov	temp_l,0
 6A69  8A 34		     3			mov	temp_h,ds:[PC80]
 6A6B  46		     3			inc	PC80
 6A6C  FF E2		     3			jmp	temp
 = 006C			     2		op2	= 6bH + 1
 6B60  8B D5		     2			mov	temp,save_temp
 6B62  2E: 88 16 00F8	     2			mov	XYL,E
 6B67  B2 00		     2			mov	temp_l,0
 6B69  8A 34		     3			mov	temp_h,ds:[PC80]
 6B6B  46		     3			inc	PC80
 6B6C  FF E2		     3			jmp	temp
 = 006D			     2		op2	= 6cH + 1
 6C60  2E: 8A 36 00F9	     1			mov	temp_h,XYH
 6C65  2E: 88 36 00F8	     1			mov	XYL,temp_h
 6C6A  B2 00		     1			mov	temp_l,0
 6C6C  8A 34		     2			mov	temp_h,ds:[PC80]
 6C6E  46		     2			inc	PC80
 6C6F  FF E2		     2			jmp	temp
 = 006E			     2		op2	= 6dH + 1
 6D60  B2 00		     2			mov	temp_l,0
 6D62  8A 34		     3			mov	temp_h,ds:[PC80]
 6D64  46		     3			inc	PC80
 6D65  FF E2		     3			jmp	temp
 = 006F			     2		op2	= 6eH + 1
 6E60  8B D5		     2			mov	temp,save_temp
 6E62  8B E8		     2			mov	save_temp,ax
 6E64  AC		     2			lodsb
 6E65  98		     2			cbw
 6E66  2E: 03 06 00F8	     2			add	ax,IXY
 6E6B  95		     2			xchg	ax,save_temp
 6E6C  3E: 8A 5E 00	     2			mov	L,ds:[save_temp]
 6E70  8B EA		     2			mov	save_temp,temp
 6E72  B2 00		     2			mov	temp_l,0
 6E74  8A 34		     3			mov	temp_h,ds:[PC80]
 6E76  46		     3			inc	PC80
 6E77  FF E2		     3			jmp	temp
 = 0070			     2		op2	= 6fH + 1
 6F60  2E: A2 00F8	     2			mov	XYL,A
 6F64  B2 00		     2			mov	temp_l,0
 6F66  8A 34		     3			mov	temp_h,ds:[PC80]
 6F68  46		     3			inc	PC80
 6F69  FF E2		     3			jmp	temp
 = 0071			     2		op2	= 70H + 1
 7060  8B D5		     2			mov	temp,save_temp
 7062  8B E8		     2			mov	save_temp,ax
 7064  AC		     2			lodsb
 7065  98		     2			cbw
 7066  2E: 03 06 00F8	     2			add	ax,IXY
 706B  95		     2			xchg	ax,save_temp
 706C  3E: 88 6E 00	     2			mov	ds:[save_temp],B
 7070  8B EA		     2			mov	save_temp,temp
 7072  B2 00		     2			mov	temp_l,0
 7074  8A 34		     3			mov	temp_h,ds:[PC80]
 7076  46		     3			inc	PC80
 7077  FF E2		     3			jmp	temp
 = 0072			     2		op2	= 71H + 1
 7160  8B D5		     2			mov	temp,save_temp
 7162  8B E8		     2			mov	save_temp,ax
 7164  AC		     2			lodsb
 7165  98		     2			cbw
 7166  2E: 03 06 00F8	     2			add	ax,IXY
 716B  95		     2			xchg	ax,save_temp
 716C  3E: 88 4E 00	     2			mov	ds:[save_temp],C_reg
 7170  8B EA		     2			mov	save_temp,temp
 7172  B2 00		     2			mov	temp_l,0
 7174  8A 34		     3			mov	temp_h,ds:[PC80]
 7176  46		     3			inc	PC80
 7177  FF E2		     3			jmp	temp
 = 0073			     2		op2	= 72H + 1
 7260  8B D5		     2			mov	temp,save_temp
 7262  8B E8		     2			mov	save_temp,ax
 7264  AC		     2			lodsb
 7265  98		     2			cbw
 7266  2E: 03 06 00F8	     2			add	ax,IXY
 726B  95		     2			xchg	ax,save_temp
 726C  3E: 88 76 00	     2			mov	ds:[save_temp],D
 7270  8B EA		     2			mov	save_temp,temp
 7272  B2 00		     2			mov	temp_l,0
 7274  8A 34		     3			mov	temp_h,ds:[PC80]
 7276  46		     3			inc	PC80
 7277  FF E2		     3			jmp	temp
 = 0074			     2		op2	= 73H + 1
 7360  8B D5		     2			mov	temp,save_temp
 7362  8B E8		     2			mov	save_temp,ax
 7364  AC		     2			lodsb
 7365  98		     2			cbw
 7366  2E: 03 06 00F8	     2			add	ax,IXY
 736B  95		     2			xchg	ax,save_temp
 736C  3E: 88 56 00	     2			mov	ds:[save_temp],E
 7370  8B EA		     2			mov	save_temp,temp
 7372  B2 00		     2			mov	temp_l,0
 7374  8A 34		     3			mov	temp_h,ds:[PC80]
 7376  46		     3			inc	PC80
 7377  FF E2		     3			jmp	temp
 = 0075			     2		op2	= 74H + 1
 7460  8B D5		     2			mov	temp,save_temp
 7462  8B E8		     2			mov	save_temp,ax
 7464  AC		     2			lodsb
 7465  98		     2			cbw
 7466  2E: 03 06 00F8	     2			add	ax,IXY
 746B  95		     2			xchg	ax,save_temp
 746C  3E: 88 7E 00	     2			mov	ds:[save_temp],H
 7470  8B EA		     2			mov	save_temp,temp
 7472  B2 00		     2			mov	temp_l,0
 7474  8A 34		     3			mov	temp_h,ds:[PC80]
 7476  46		     3			inc	PC80
 7477  FF E2		     3			jmp	temp
 = 0076			     2		op2	= 75H + 1
 7560  8B D5		     2			mov	temp,save_temp
 7562  8B E8		     2			mov	save_temp,ax
 7564  AC		     2			lodsb
 7565  98		     2			cbw
 7566  2E: 03 06 00F8	     2			add	ax,IXY
 756B  95		     2			xchg	ax,save_temp
 756C  3E: 88 5E 00	     2			mov	ds:[save_temp],L
 7570  8B EA		     2			mov	save_temp,temp
 7572  B2 00		     2			mov	temp_l,0
 7574  8A 34		     3			mov	temp_h,ds:[PC80]
 7576  46		     3			inc	PC80
 7577  FF E2		     3			jmp	temp
 7660  8B D5		     3			mov	temp,save_temp
 7662  8B EF		     3			mov	entry_SP,SP80
 7664  BF 0005		     3			mov	ret_reg,code_undef2
 7667  CB		     3			retf
 = 0077			     3			op2	= op2 + 1
 = 0078			     2		op2	= 77H + 1
 7760  8B D5		     2			mov	temp,save_temp
 7762  8B E8		     2			mov	save_temp,ax
 7764  AC		     2			lodsb
 7765  98		     2			cbw
 7766  2E: 03 06 00F8	     2			add	ax,IXY
 776B  95		     2			xchg	ax,save_temp
 776C  3E: 88 46 00	     2			mov	ds:[save_temp],A
 7770  8B EA		     2			mov	save_temp,temp
 7772  B2 00		     2			mov	temp_l,0
 7774  8A 34		     3			mov	temp_h,ds:[PC80]
 7776  46		     3			inc	PC80
 7777  FF E2		     3			jmp	temp
 7860  8B D5		     3			mov	temp,save_temp
 7862  8B EF		     3			mov	entry_SP,SP80
 7864  BF 0005		     3			mov	ret_reg,code_undef2
 7867  CB		     3			retf
 = 0079			     3			op2	= op2 + 1
 7960  8B D5		     3			mov	temp,save_temp
 7962  8B EF		     3			mov	entry_SP,SP80
 7964  BF 0005		     3			mov	ret_reg,code_undef2
 7967  CB		     3			retf
 = 007A			     3			op2	= op2 + 1
 7A60  8B D5		     3			mov	temp,save_temp
 7A62  8B EF		     3			mov	entry_SP,SP80
 7A64  BF 0005		     3			mov	ret_reg,code_undef2
 7A67  CB		     3			retf
 = 007B			     3			op2	= op2 + 1
 7B60  8B D5		     3			mov	temp,save_temp
 7B62  8B EF		     3			mov	entry_SP,SP80
 7B64  BF 0005		     3			mov	ret_reg,code_undef2
 7B67  CB		     3			retf
 = 007C			     3			op2	= op2 + 1
 = 007D			     2		op2	= 7cH + 1
 7C60  2E: A0 00F9	     2			mov	A,XYH
 7C64  B2 00		     2			mov	temp_l,0
 7C66  8A 34		     3			mov	temp_h,ds:[PC80]
 7C68  46		     3			inc	PC80
 7C69  FF E2		     3			jmp	temp
 = 007E			     2		op2	= 7dH + 1
 7D60  2E: A0 00F8	     2			mov	A,XYL
 7D64  B2 00		     2			mov	temp_l,0
 7D66  8A 34		     3			mov	temp_h,ds:[PC80]
 7D68  46		     3			inc	PC80
 7D69  FF E2		     3			jmp	temp
 = 007F			     2		op2	= 7eH + 1
 7E60  8B D5		     2			mov	temp,save_temp
 7E62  8B E8		     2			mov	save_temp,ax
 7E64  AC		     2			lodsb
 7E65  98		     2			cbw
 7E66  2E: 03 06 00F8	     2			add	ax,IXY
 7E6B  95		     2			xchg	ax,save_temp
 7E6C  3E: 8A 46 00	     2			mov	A,ds:[save_temp]
 7E70  8B EA		     2			mov	save_temp,temp
 7E72  B2 00		     2			mov	temp_l,0
 7E74  8A 34		     3			mov	temp_h,ds:[PC80]
 7E76  46		     3			inc	PC80
 7E77  FF E2		     3			jmp	temp
 7F60  8B D5		     3			mov	temp,save_temp
 7F62  8B EF		     3			mov	entry_SP,SP80
 7F64  BF 0005		     3			mov	ret_reg,code_undef2
 7F67  CB		     3			retf
 = 0080			     3			op2	= op2 + 1
 8060  8B D5		     3			mov	temp,save_temp
 8062  8B EF		     3			mov	entry_SP,SP80
 8064  BF 0005		     3			mov	ret_reg,code_undef2
 8067  CB		     3			retf
 = 0081			     3			op2	= op2 + 1
 8160  8B D5		     3			mov	temp,save_temp
 8162  8B EF		     3			mov	entry_SP,SP80
 8164  BF 0005		     3			mov	ret_reg,code_undef2
 8167  CB		     3			retf
 = 0082			     3			op2	= op2 + 1
 8260  8B D5		     3			mov	temp,save_temp
 8262  8B EF		     3			mov	entry_SP,SP80
 8264  BF 0005		     3			mov	ret_reg,code_undef2
 8267  CB		     3			retf
 = 0083			     3			op2	= op2 + 1
 8360  8B D5		     3			mov	temp,save_temp
 8362  8B EF		     3			mov	entry_SP,SP80
 8364  BF 0005		     3			mov	ret_reg,code_undef2
 8367  CB		     3			retf
 = 0084			     3			op2	= op2 + 1
 = 0085			     2		op2	= 84H + 1
 8460  2E: 02 06 00F9	     1			add	A,XYH
 8465  9F		     1			lahf
 8466  70 0A		     1			jo	@f
 8468  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 846B  B2 00		     1			mov	temp_l,0
 846D  8A 34		     2			mov	temp_h,ds:[PC80]
 846F  46		     2			inc	PC80
 8470  FF E2		     2			jmp	temp
 8472  80 E4 FD		     1	@@:		and	ah,not n_flag
 8475  80 CC 04		     1			or	ah,v_flag
 8478  B2 00		     1			mov	temp_l,0
 847A  8A 34		     2			mov	temp_h,ds:[PC80]
 847C  46		     2			inc	PC80
 847D  FF E2		     2			jmp	temp
 = 0086			     2		op2	= 85H + 1
 8560  2E: 02 06 00F8	     1			add	A,XYL
 8565  9F		     1	??0002:		lahf
 8566  70 0A		     1			jo	@f
 8568  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 856B  B2 00		     1			mov	temp_l,0
 856D  8A 34		     2			mov	temp_h,ds:[PC80]
 856F  46		     2			inc	PC80
 8570  FF E2		     2			jmp	temp
 8572  80 E4 FD		     1	@@:		and	ah,not n_flag
 8575  80 CC 04		     1			or	ah,v_flag
 8578  B2 00		     1			mov	temp_l,0
 857A  8A 34		     2			mov	temp_h,ds:[PC80]
 857C  46		     2			inc	PC80
 857D  FF E2		     2			jmp	temp
 = 0087			     2		op2	= 86H + 1
 8660  8B D3		     1			mov	temp,bx
 8662  8B D8		     1			mov	bx,ax
 8664  AC		     1			lodsb
 8665  98		     1			cbw
 8666  2E: 03 06 00F8	     1			add	ax,IXY
 866B  93		     1			xchg	ax,bx
 866C  02 07		     1			add	A,ds:[bx]
 866E  8B DA		     1			mov	bx,temp
 8670  E9 FEF2		     1			jmp	??0002
 8760  8B D5		     3			mov	temp,save_temp
 8762  8B EF		     3			mov	entry_SP,SP80
 8764  BF 0005		     3			mov	ret_reg,code_undef2
 8767  CB		     3			retf
 = 0088			     3			op2	= op2 + 1
 8860  8B D5		     3			mov	temp,save_temp
 8862  8B EF		     3			mov	entry_SP,SP80
 8864  BF 0005		     3			mov	ret_reg,code_undef2
 8867  CB		     3			retf
 = 0089			     3			op2	= op2 + 1
 8960  8B D5		     3			mov	temp,save_temp
 8962  8B EF		     3			mov	entry_SP,SP80
 8964  BF 0005		     3			mov	ret_reg,code_undef2
 8967  CB		     3			retf
 = 008A			     3			op2	= op2 + 1
 8A60  8B D5		     3			mov	temp,save_temp
 8A62  8B EF		     3			mov	entry_SP,SP80
 8A64  BF 0005		     3			mov	ret_reg,code_undef2
 8A67  CB		     3			retf
 = 008B			     3			op2	= op2 + 1
 8B60  8B D5		     3			mov	temp,save_temp
 8B62  8B EF		     3			mov	entry_SP,SP80
 8B64  BF 0005		     3			mov	ret_reg,code_undef2
 8B67  CB		     3			retf
 = 008C			     3			op2	= op2 + 1
 = 008D			     2		op2	= 8cH + 1
 8C60  9E		     1			sahf
 8C61  2E: 12 06 00F8	     1			adc	A,XYL
 8C66  9F		     1			lahf
 8C67  70 0A		     1			jo	@f
 8C69  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8C6C  B2 00		     1			mov	temp_l,0
 8C6E  8A 34		     2			mov	temp_h,ds:[PC80]
 8C70  46		     2			inc	PC80
 8C71  FF E2		     2			jmp	temp
 8C73  80 E4 FD		     1	@@:		and	ah,not n_flag
 8C76  80 CC 04		     1			or	ah,v_flag
 8C79  B2 00		     1			mov	temp_l,0
 8C7B  8A 34		     2			mov	temp_h,ds:[PC80]
 8C7D  46		     2			inc	PC80
 8C7E  FF E2		     2			jmp	temp
 = 008E			     2		op2	= 8dH + 1
 8D60  9E		     1			sahf
 8D61  2E: 12 06 00F8	     1			adc	A,XYL
 8D66  9F		     1	??0003:		lahf
 8D67  70 0A		     1			jo	@f
 8D69  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8D6C  B2 00		     1			mov	temp_l,0
 8D6E  8A 34		     2			mov	temp_h,ds:[PC80]
 8D70  46		     2			inc	PC80
 8D71  FF E2		     2			jmp	temp
 8D73  80 E4 FD		     1	@@:		and	ah,not n_flag
 8D76  80 CC 04		     1			or	ah,v_flag
 8D79  B2 00		     1			mov	temp_l,0
 8D7B  8A 34		     2			mov	temp_h,ds:[PC80]
 8D7D  46		     2			inc	PC80
 8D7E  FF E2		     2			jmp	temp
 = 008F			     2		op2	= 8eH + 1
 8E60  8B D3		     1			mov	temp,bx
 8E62  8B D8		     1			mov	bx,ax
 8E64  AC		     1			lodsb
 8E65  98		     1			cbw
 8E66  2E: 03 06 00F8	     1			add	ax,IXY
 8E6B  93		     1			xchg	ax,bx
 8E6C  9E		     1			sahf
 8E6D  12 07		     1			adc	A,ds:[bx]
 8E6F  8B DA		     1			mov	bx,temp
 8E71  E9 FEF2		     1			jmp	??0003
 8F60  8B D5		     3			mov	temp,save_temp
 8F62  8B EF		     3			mov	entry_SP,SP80
 8F64  BF 0005		     3			mov	ret_reg,code_undef2
 8F67  CB		     3			retf
 = 0090			     3			op2	= op2 + 1
 9060  8B D5		     3			mov	temp,save_temp
 9062  8B EF		     3			mov	entry_SP,SP80
 9064  BF 0005		     3			mov	ret_reg,code_undef2
 9067  CB		     3			retf
 = 0091			     3			op2	= op2 + 1
 9160  8B D5		     3			mov	temp,save_temp
 9162  8B EF		     3			mov	entry_SP,SP80
 9164  BF 0005		     3			mov	ret_reg,code_undef2
 9167  CB		     3			retf
 = 0092			     3			op2	= op2 + 1
 9260  8B D5		     3			mov	temp,save_temp
 9262  8B EF		     3			mov	entry_SP,SP80
 9264  BF 0005		     3			mov	ret_reg,code_undef2
 9267  CB		     3			retf
 = 0093			     3			op2	= op2 + 1
 9360  8B D5		     3			mov	temp,save_temp
 9362  8B EF		     3			mov	entry_SP,SP80
 9364  BF 0005		     3			mov	ret_reg,code_undef2
 9367  CB		     3			retf
 = 0094			     3			op2	= op2 + 1
 = 0095			     2		op2	= 94H + 1
 9460  2E: 2A 06 00F9	     1			sub	A,XYH
 9465  9F		     1			lahf
 9466  70 0A		     1			jo	@f
 9468  80 E4 FB		     1			and	ah,not(v_flag)
 946B  B2 00		     1			mov	temp_l,0
 946D  8A 34		     2			mov	temp_h,ds:[PC80]
 946F  46		     2			inc	PC80
 9470  FF E2		     2			jmp	temp
 9472  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9475  B2 00		     1			mov	temp_l,0
 9477  8A 34		     2			mov	temp_h,ds:[PC80]
 9479  46		     2			inc	PC80
 947A  FF E2		     2			jmp	temp
 = 0096			     2		op2	= 95H + 1
 9560  2E: 2A 06 00F8	     1			sub	A,XYL
 9565  9F		     1	??0004:		lahf
 9566  70 0A		     1			jo	@f
 9568  80 E4 FB		     1			and	ah,not(v_flag)
 956B  B2 00		     1			mov	temp_l,0
 956D  8A 34		     2			mov	temp_h,ds:[PC80]
 956F  46		     2			inc	PC80
 9570  FF E2		     2			jmp	temp
 9572  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9575  B2 00		     1			mov	temp_l,0
 9577  8A 34		     2			mov	temp_h,ds:[PC80]
 9579  46		     2			inc	PC80
 957A  FF E2		     2			jmp	temp
 = 0097			     2		op2	= 96H + 1
 9660  8B D3		     1			mov	temp,bx
 9662  8B D8		     1			mov	bx,ax
 9664  AC		     1			lodsb
 9665  98		     1			cbw
 9666  2E: 03 06 00F8	     1			add	ax,IXY
 966B  93		     1			xchg	ax,bx
 966C  2A 07		     1			sub	A,ds:[bx]
 966E  8B DA		     1			mov	bx,temp
 9670  E9 FEF2		     1			jmp	??0004
 9760  8B D5		     3			mov	temp,save_temp
 9762  8B EF		     3			mov	entry_SP,SP80
 9764  BF 0005		     3			mov	ret_reg,code_undef2
 9767  CB		     3			retf
 = 0098			     3			op2	= op2 + 1
 9860  8B D5		     3			mov	temp,save_temp
 9862  8B EF		     3			mov	entry_SP,SP80
 9864  BF 0005		     3			mov	ret_reg,code_undef2
 9867  CB		     3			retf
 = 0099			     3			op2	= op2 + 1
 9960  8B D5		     3			mov	temp,save_temp
 9962  8B EF		     3			mov	entry_SP,SP80
 9964  BF 0005		     3			mov	ret_reg,code_undef2
 9967  CB		     3			retf
 = 009A			     3			op2	= op2 + 1
 9A60  8B D5		     3			mov	temp,save_temp
 9A62  8B EF		     3			mov	entry_SP,SP80
 9A64  BF 0005		     3			mov	ret_reg,code_undef2
 9A67  CB		     3			retf
 = 009B			     3			op2	= op2 + 1
 9B60  8B D5		     3			mov	temp,save_temp
 9B62  8B EF		     3			mov	entry_SP,SP80
 9B64  BF 0005		     3			mov	ret_reg,code_undef2
 9B67  CB		     3			retf
 = 009C			     3			op2	= op2 + 1
 = 009D			     2		op2	= 9cH + 1
 9C60  9E		     1			sahf
 9C61  2E: 1A 06 00F9	     1			sbb	A,XYH
 9C66  9F		     1			lahf
 9C67  70 0A		     1			jo	@f
 9C69  80 E4 FB		     1			and	ah,not(v_flag)
 9C6C  B2 00		     1			mov	temp_l,0
 9C6E  8A 34		     2			mov	temp_h,ds:[PC80]
 9C70  46		     2			inc	PC80
 9C71  FF E2		     2			jmp	temp
 9C73  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9C76  B2 00		     1			mov	temp_l,0
 9C78  8A 34		     2			mov	temp_h,ds:[PC80]
 9C7A  46		     2			inc	PC80
 9C7B  FF E2		     2			jmp	temp
 = 009E			     2		op2	= 9dH + 1
 9D60  9E		     1			sahf
 9D61  2E: 1A 06 00F8	     1			sbb	A,XYL
 9D66  9F		     1	??0005:		lahf
 9D67  70 0A		     1			jo	@f
 9D69  80 E4 FB		     1			and	ah,not(v_flag)
 9D6C  B2 00		     1			mov	temp_l,0
 9D6E  8A 34		     2			mov	temp_h,ds:[PC80]
 9D70  46		     2			inc	PC80
 9D71  FF E2		     2			jmp	temp
 9D73  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9D76  B2 00		     1			mov	temp_l,0
 9D78  8A 34		     2			mov	temp_h,ds:[PC80]
 9D7A  46		     2			inc	PC80
 9D7B  FF E2		     2			jmp	temp
 = 009F			     2		op2	= 9eH + 1
 9E60  8B D3		     1			mov	temp,bx
 9E62  8B D8		     1			mov	bx,ax
 9E64  AC		     1			lodsb
 9E65  98		     1			cbw
 9E66  2E: 03 06 00F8	     1			add	ax,IXY
 9E6B  93		     1			xchg	ax,bx
 9E6C  9E		     1			sahf
 9E6D  1A 07		     1			sbb	A,ds:[bx]
 9E6F  8B DA		     1			mov	bx,temp
 9E71  E9 FEF2		     1			jmp	??0005
 9F60  8B D5		     3			mov	temp,save_temp
 9F62  8B EF		     3			mov	entry_SP,SP80
 9F64  BF 0005		     3			mov	ret_reg,code_undef2
 9F67  CB		     3			retf
 = 00A0			     3			op2	= op2 + 1
 A060  8B D5		     3			mov	temp,save_temp
 A062  8B EF		     3			mov	entry_SP,SP80
 A064  BF 0005		     3			mov	ret_reg,code_undef2
 A067  CB		     3			retf
 = 00A1			     3			op2	= op2 + 1
 A160  8B D5		     3			mov	temp,save_temp
 A162  8B EF		     3			mov	entry_SP,SP80
 A164  BF 0005		     3			mov	ret_reg,code_undef2
 A167  CB		     3			retf
 = 00A2			     3			op2	= op2 + 1
 A260  8B D5		     3			mov	temp,save_temp
 A262  8B EF		     3			mov	entry_SP,SP80
 A264  BF 0005		     3			mov	ret_reg,code_undef2
 A267  CB		     3			retf
 = 00A3			     3			op2	= op2 + 1
 A360  8B D5		     3			mov	temp,save_temp
 A362  8B EF		     3			mov	entry_SP,SP80
 A364  BF 0005		     3			mov	ret_reg,code_undef2
 A367  CB		     3			retf
 = 00A4			     3			op2	= op2 + 1
 = 00A5			     2		op2	= 0a4H + 1
 A460  2E: 22 06 00F9	     1			and	A,XYH
 A465  9F		     1			lahf
 A466  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A469  80 CC 10		     1			or	ah,h_flag
 A46C  B2 00		     1			mov	temp_l,0
 A46E  8A 34		     2			mov	temp_h,ds:[PC80]
 A470  46		     2			inc	PC80
 A471  FF E2		     2			jmp	temp
 = 00A6			     2		op2	= 0a5H + 1
 A560  2E: 22 06 00F9	     1			and	A,XYH
 A565  9F		     1			lahf
 A566  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A569  80 CC 10		     1			or	ah,h_flag
 A56C  B2 00		     1			mov	temp_l,0
 A56E  8A 34		     2			mov	temp_h,ds:[PC80]
 A570  46		     2			inc	PC80
 A571  FF E2		     2			jmp	temp
 = 00A7			     2		op2	= 0a6H + 1
 A660  8B D3		     1			mov	temp,bx
 A662  8B D8		     1			mov	bx,ax
 A664  AC		     1			lodsb
 A665  98		     1			cbw
 A666  2E: 03 06 00F8	     1			add	ax,IXY
 A66B  93		     1			xchg	ax,bx
 A66C  22 07		     1			and	A,ds:[bx]
 A66E  8B DA		     1			mov	bx,temp
 A670  9F		     1			lahf
 A671  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A674  80 CC 10		     1			or	ah,h_flag
 A677  B2 00		     1			mov	temp_l,0
 A679  8A 34		     2			mov	temp_h,ds:[PC80]
 A67B  46		     2			inc	PC80
 A67C  FF E2		     2			jmp	temp
 A760  8B D5		     3			mov	temp,save_temp
 A762  8B EF		     3			mov	entry_SP,SP80
 A764  BF 0005		     3			mov	ret_reg,code_undef2
 A767  CB		     3			retf
 = 00A8			     3			op2	= op2 + 1
 A860  8B D5		     3			mov	temp,save_temp
 A862  8B EF		     3			mov	entry_SP,SP80
 A864  BF 0005		     3			mov	ret_reg,code_undef2
 A867  CB		     3			retf
 = 00A9			     3			op2	= op2 + 1
 A960  8B D5		     3			mov	temp,save_temp
 A962  8B EF		     3			mov	entry_SP,SP80
 A964  BF 0005		     3			mov	ret_reg,code_undef2
 A967  CB		     3			retf
 = 00AA			     3			op2	= op2 + 1
 AA60  8B D5		     3			mov	temp,save_temp
 AA62  8B EF		     3			mov	entry_SP,SP80
 AA64  BF 0005		     3			mov	ret_reg,code_undef2
 AA67  CB		     3			retf
 = 00AB			     3			op2	= op2 + 1
 AB60  8B D5		     3			mov	temp,save_temp
 AB62  8B EF		     3			mov	entry_SP,SP80
 AB64  BF 0005		     3			mov	ret_reg,code_undef2
 AB67  CB		     3			retf
 = 00AC			     3			op2	= op2 + 1
 = 00AD			     2		op2	= 0acH + 1
 AC60  2E: 32 06 00F9	     1			xor	A,XYH
 AC65  9F		     1			lahf
 AC66  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 AC69  B2 00		     1			mov	temp_l,0
 AC6B  8A 34		     2			mov	temp_h,ds:[PC80]
 AC6D  46		     2			inc	PC80
 AC6E  FF E2		     2			jmp	temp
 = 00AE			     2		op2	= 0adH + 1
 AD60  2E: 32 06 00F8	     1			xor	A,XYL
 AD65  9F		     1			lahf
 AD66  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 AD69  B2 00		     1			mov	temp_l,0
 AD6B  8A 34		     2			mov	temp_h,ds:[PC80]
 AD6D  46		     2			inc	PC80
 AD6E  FF E2		     2			jmp	temp
 = 00AF			     2		op2	= 0aeH + 1
 AE60  8B D3		     1			mov	temp,bx
 AE62  8B D8		     1			mov	bx,ax
 AE64  AC		     1			lodsb
 AE65  98		     1			cbw
 AE66  2E: 03 06 00F8	     1			add	ax,IXY
 AE6B  93		     1			xchg	ax,bx
 AE6C  32 07		     1			xor	A,ds:[bx]
 AE6E  8B DA		     1			mov	bx,temp
 AE70  9F		     1			lahf
 AE71  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 AE74  B2 00		     1			mov	temp_l,0
 AE76  8A 34		     2			mov	temp_h,ds:[PC80]
 AE78  46		     2			inc	PC80
 AE79  FF E2		     2			jmp	temp
 AF60  8B D5		     3			mov	temp,save_temp
 AF62  8B EF		     3			mov	entry_SP,SP80
 AF64  BF 0005		     3			mov	ret_reg,code_undef2
 AF67  CB		     3			retf
 = 00B0			     3			op2	= op2 + 1
 B060  8B D5		     3			mov	temp,save_temp
 B062  8B EF		     3			mov	entry_SP,SP80
 B064  BF 0005		     3			mov	ret_reg,code_undef2
 B067  CB		     3			retf
 = 00B1			     3			op2	= op2 + 1
 B160  8B D5		     3			mov	temp,save_temp
 B162  8B EF		     3			mov	entry_SP,SP80
 B164  BF 0005		     3			mov	ret_reg,code_undef2
 B167  CB		     3			retf
 = 00B2			     3			op2	= op2 + 1
 B260  8B D5		     3			mov	temp,save_temp
 B262  8B EF		     3			mov	entry_SP,SP80
 B264  BF 0005		     3			mov	ret_reg,code_undef2
 B267  CB		     3			retf
 = 00B3			     3			op2	= op2 + 1
 B360  8B D5		     3			mov	temp,save_temp
 B362  8B EF		     3			mov	entry_SP,SP80
 B364  BF 0005		     3			mov	ret_reg,code_undef2
 B367  CB		     3			retf
 = 00B4			     3			op2	= op2 + 1
 = 00B5			     2		op2	= 0b4H + 1
 B460  2E: 0A 06 00F9	     1			or	A,XYH
 B465  9F		     1			lahf
 B466  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B469  B2 00		     1			mov	temp_l,0
 B46B  8A 34		     2			mov	temp_h,ds:[PC80]
 B46D  46		     2			inc	PC80
 B46E  FF E2		     2			jmp	temp
 = 00B6			     2		op2	= 0b5H + 1
 B560  2E: 0A 06 00F8	     1			or	A,XYL
 B565  9F		     1			lahf
 B566  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B569  B2 00		     1			mov	temp_l,0
 B56B  8A 34		     2			mov	temp_h,ds:[PC80]
 B56D  46		     2			inc	PC80
 B56E  FF E2		     2			jmp	temp
 = 00B7			     2		op2	= 0b6H + 1
 B660  8B D3		     1			mov	temp,bx
 B662  8B D8		     1			mov	bx,ax
 B664  AC		     1			lodsb
 B665  98		     1			cbw
 B666  2E: 03 06 00F8	     1			add	ax,IXY
 B66B  93		     1			xchg	ax,bx
 B66C  0A 07		     1			or	A,ds:[bx]
 B66E  8B DA		     1			mov	bx,temp
 B670  9F		     1			lahf
 B671  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B674  B2 00		     1			mov	temp_l,0
 B676  8A 34		     2			mov	temp_h,ds:[PC80]
 B678  46		     2			inc	PC80
 B679  FF E2		     2			jmp	temp
 B760  8B D5		     3			mov	temp,save_temp
 B762  8B EF		     3			mov	entry_SP,SP80
 B764  BF 0005		     3			mov	ret_reg,code_undef2
 B767  CB		     3			retf
 = 00B8			     3			op2	= op2 + 1
 B860  8B D5		     3			mov	temp,save_temp
 B862  8B EF		     3			mov	entry_SP,SP80
 B864  BF 0005		     3			mov	ret_reg,code_undef2
 B867  CB		     3			retf
 = 00B9			     3			op2	= op2 + 1
 B960  8B D5		     3			mov	temp,save_temp
 B962  8B EF		     3			mov	entry_SP,SP80
 B964  BF 0005		     3			mov	ret_reg,code_undef2
 B967  CB		     3			retf
 = 00BA			     3			op2	= op2 + 1
 BA60  8B D5		     3			mov	temp,save_temp
 BA62  8B EF		     3			mov	entry_SP,SP80
 BA64  BF 0005		     3			mov	ret_reg,code_undef2
 BA67  CB		     3			retf
 = 00BB			     3			op2	= op2 + 1
 BB60  8B D5		     3			mov	temp,save_temp
 BB62  8B EF		     3			mov	entry_SP,SP80
 BB64  BF 0005		     3			mov	ret_reg,code_undef2
 BB67  CB		     3			retf
 = 00BC			     3			op2	= op2 + 1
 = 00BD			     2		op2	= 0bcH + 1
 BC60  2E: 3A 06 00F9	     1			cmp	A,XYH
 BC65  9F		     1			lahf
 BC66  70 0A		     1			jo	@f
 BC68  80 E4 FB		     1			and	ah,not(v_flag)
 BC6B  B2 00		     1			mov	temp_l,0
 BC6D  8A 34		     2			mov	temp_h,ds:[PC80]
 BC6F  46		     2			inc	PC80
 BC70  FF E2		     2			jmp	temp
 BC72  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 BC75  B2 00		     1			mov	temp_l,0
 BC77  8A 34		     2			mov	temp_h,ds:[PC80]
 BC79  46		     2			inc	PC80
 BC7A  FF E2		     2			jmp	temp
 = 00BE			     2		op2	= 0bdH + 1
 BD60  2E: 3A 06 00F8	     1			cmp	A,XYL
 BD65  9F		     1	??0006:		lahf
 BD66  70 0A		     1			jo	@f
 BD68  80 E4 FB		     1			and	ah,not(v_flag)
 BD6B  B2 00		     1			mov	temp_l,0
 BD6D  8A 34		     2			mov	temp_h,ds:[PC80]
 BD6F  46		     2			inc	PC80
 BD70  FF E2		     2			jmp	temp
 BD72  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 BD75  B2 00		     1			mov	temp_l,0
 BD77  8A 34		     2			mov	temp_h,ds:[PC80]
 BD79  46		     2			inc	PC80
 BD7A  FF E2		     2			jmp	temp
 = 00BF			     2		op2	= 0beH + 1
 BE60  8B D3		     1			mov	temp,bx
 BE62  8B D8		     1			mov	bx,ax
 BE64  AC		     1			lodsb
 BE65  98		     1			cbw
 BE66  2E: 03 06 00F8	     1			add	ax,IXY
 BE6B  93		     1			xchg	ax,bx
 BE6C  3A 07		     1			cmp	A,ds:[bx]
 BE6E  8B DA		     1			mov	bx,temp
 BE70  E9 FEF2		     1			jmp	??0006
 BF60  8B D5		     3			mov	temp,save_temp
 BF62  8B EF		     3			mov	entry_SP,SP80
 BF64  BF 0005		     3			mov	ret_reg,code_undef2
 BF67  CB		     3			retf
 = 00C0			     3			op2	= op2 + 1
 C060  8B D5		     3			mov	temp,save_temp
 C062  8B EF		     3			mov	entry_SP,SP80
 C064  BF 0005		     3			mov	ret_reg,code_undef2
 C067  CB		     3			retf
 = 00C1			     3			op2	= op2 + 1
 C160  8B D5		     3			mov	temp,save_temp
 C162  8B EF		     3			mov	entry_SP,SP80
 C164  BF 0005		     3			mov	ret_reg,code_undef2
 C167  CB		     3			retf
 = 00C2			     3			op2	= op2 + 1
 C260  8B D5		     3			mov	temp,save_temp
 C262  8B EF		     3			mov	entry_SP,SP80
 C264  BF 0005		     3			mov	ret_reg,code_undef2
 C267  CB		     3			retf
 = 00C3			     3			op2	= op2 + 1
 C360  8B D5		     3			mov	temp,save_temp
 C362  8B EF		     3			mov	entry_SP,SP80
 C364  BF 0005		     3			mov	ret_reg,code_undef2
 C367  CB		     3			retf
 = 00C4			     3			op2	= op2 + 1
 C460  8B D5		     3			mov	temp,save_temp
 C462  8B EF		     3			mov	entry_SP,SP80
 C464  BF 0005		     3			mov	ret_reg,code_undef2
 C467  CB		     3			retf
 = 00C5			     3			op2	= op2 + 1
 C560  8B D5		     3			mov	temp,save_temp
 C562  8B EF		     3			mov	entry_SP,SP80
 C564  BF 0005		     3			mov	ret_reg,code_undef2
 C567  CB		     3			retf
 = 00C6			     3			op2	= op2 + 1
 C660  8B D5		     3			mov	temp,save_temp
 C662  8B EF		     3			mov	entry_SP,SP80
 C664  BF 0005		     3			mov	ret_reg,code_undef2
 C667  CB		     3			retf
 = 00C7			     3			op2	= op2 + 1
 C760  8B D5		     3			mov	temp,save_temp
 C762  8B EF		     3			mov	entry_SP,SP80
 C764  BF 0005		     3			mov	ret_reg,code_undef2
 C767  CB		     3			retf
 = 00C8			     3			op2	= op2 + 1
 C860  8B D5		     3			mov	temp,save_temp
 C862  8B EF		     3			mov	entry_SP,SP80
 C864  BF 0005		     3			mov	ret_reg,code_undef2
 C867  CB		     3			retf
 = 00C9			     3			op2	= op2 + 1
 C960  8B D5		     3			mov	temp,save_temp
 C962  8B EF		     3			mov	entry_SP,SP80
 C964  BF 0005		     3			mov	ret_reg,code_undef2
 C967  CB		     3			retf
 = 00CA			     3			op2	= op2 + 1
 CA60  8B D5		     3			mov	temp,save_temp
 CA62  8B EF		     3			mov	entry_SP,SP80
 CA64  BF 0005		     3			mov	ret_reg,code_undef2
 CA67  CB		     3			retf
 = 00CB			     3			op2	= op2 + 1
 = 00CC			     2		op2	= 0cbH + 1
 CB60  8B D0		     1	                mov     temp,ax
 CB62  AC		     1			lodsb
 CB63  98		     1	                cbw
 CB64  2E: 03 06 00F8	     1	                add     ax,IXY
 CB69  50		     1	                push	ax
 CB6A  AC		     1	                lodsb
 CB6B  8A E0		     1	                mov     ah,al
 CB6D  B0 40		     1	                mov     al,org_CBX
 CB6F  92		     1	                xchg    ax,temp
 CB70  FF E2		     1	                jmp	temp
 CC60  8B D5		     3			mov	temp,save_temp
 CC62  8B EF		     3			mov	entry_SP,SP80
 CC64  BF 0005		     3			mov	ret_reg,code_undef2
 CC67  CB		     3			retf
 = 00CD			     3			op2	= op2 + 1
 CD60  8B D5		     3			mov	temp,save_temp
 CD62  8B EF		     3			mov	entry_SP,SP80
 CD64  BF 0005		     3			mov	ret_reg,code_undef2
 CD67  CB		     3			retf
 = 00CE			     3			op2	= op2 + 1
 CE60  8B D5		     3			mov	temp,save_temp
 CE62  8B EF		     3			mov	entry_SP,SP80
 CE64  BF 0005		     3			mov	ret_reg,code_undef2
 CE67  CB		     3			retf
 = 00CF			     3			op2	= op2 + 1
 CF60  8B D5		     3			mov	temp,save_temp
 CF62  8B EF		     3			mov	entry_SP,SP80
 CF64  BF 0005		     3			mov	ret_reg,code_undef2
 CF67  CB		     3			retf
 = 00D0			     3			op2	= op2 + 1
 D060  8B D5		     3			mov	temp,save_temp
 D062  8B EF		     3			mov	entry_SP,SP80
 D064  BF 0005		     3			mov	ret_reg,code_undef2
 D067  CB		     3			retf
 = 00D1			     3			op2	= op2 + 1
 D160  8B D5		     3			mov	temp,save_temp
 D162  8B EF		     3			mov	entry_SP,SP80
 D164  BF 0005		     3			mov	ret_reg,code_undef2
 D167  CB		     3			retf
 = 00D2			     3			op2	= op2 + 1
 D260  8B D5		     3			mov	temp,save_temp
 D262  8B EF		     3			mov	entry_SP,SP80
 D264  BF 0005		     3			mov	ret_reg,code_undef2
 D267  CB		     3			retf
 = 00D3			     3			op2	= op2 + 1
 D360  8B D5		     3			mov	temp,save_temp
 D362  8B EF		     3			mov	entry_SP,SP80
 D364  BF 0005		     3			mov	ret_reg,code_undef2
 D367  CB		     3			retf
 = 00D4			     3			op2	= op2 + 1
 D460  8B D5		     3			mov	temp,save_temp
 D462  8B EF		     3			mov	entry_SP,SP80
 D464  BF 0005		     3			mov	ret_reg,code_undef2
 D467  CB		     3			retf
 = 00D5			     3			op2	= op2 + 1
 D560  8B D5		     3			mov	temp,save_temp
 D562  8B EF		     3			mov	entry_SP,SP80
 D564  BF 0005		     3			mov	ret_reg,code_undef2
 D567  CB		     3			retf
 = 00D6			     3			op2	= op2 + 1
 D660  8B D5		     3			mov	temp,save_temp
 D662  8B EF		     3			mov	entry_SP,SP80
 D664  BF 0005		     3			mov	ret_reg,code_undef2
 D667  CB		     3			retf
 = 00D7			     3			op2	= op2 + 1
 D760  8B D5		     3			mov	temp,save_temp
 D762  8B EF		     3			mov	entry_SP,SP80
 D764  BF 0005		     3			mov	ret_reg,code_undef2
 D767  CB		     3			retf
 = 00D8			     3			op2	= op2 + 1
 D860  8B D5		     3			mov	temp,save_temp
 D862  8B EF		     3			mov	entry_SP,SP80
 D864  BF 0005		     3			mov	ret_reg,code_undef2
 D867  CB		     3			retf
 = 00D9			     3			op2	= op2 + 1
 D960  8B D5		     3			mov	temp,save_temp
 D962  8B EF		     3			mov	entry_SP,SP80
 D964  BF 0005		     3			mov	ret_reg,code_undef2
 D967  CB		     3			retf
 = 00DA			     3			op2	= op2 + 1
 DA60  8B D5		     3			mov	temp,save_temp
 DA62  8B EF		     3			mov	entry_SP,SP80
 DA64  BF 0005		     3			mov	ret_reg,code_undef2
 DA67  CB		     3			retf
 = 00DB			     3			op2	= op2 + 1
 DB60  8B D5		     3			mov	temp,save_temp
 DB62  8B EF		     3			mov	entry_SP,SP80
 DB64  BF 0005		     3			mov	ret_reg,code_undef2
 DB67  CB		     3			retf
 = 00DC			     3			op2	= op2 + 1
 DC60  8B D5		     3			mov	temp,save_temp
 DC62  8B EF		     3			mov	entry_SP,SP80
 DC64  BF 0005		     3			mov	ret_reg,code_undef2
 DC67  CB		     3			retf
 = 00DD			     3			op2	= op2 + 1
 DD60  8B D5		     3			mov	temp,save_temp
 DD62  8B EF		     3			mov	entry_SP,SP80
 DD64  BF 0005		     3			mov	ret_reg,code_undef2
 DD67  CB		     3			retf
 = 00DE			     3			op2	= op2 + 1
 DE60  8B D5		     3			mov	temp,save_temp
 DE62  8B EF		     3			mov	entry_SP,SP80
 DE64  BF 0005		     3			mov	ret_reg,code_undef2
 DE67  CB		     3			retf
 = 00DF			     3			op2	= op2 + 1
 DF60  8B D5		     3			mov	temp,save_temp
 DF62  8B EF		     3			mov	entry_SP,SP80
 DF64  BF 0005		     3			mov	ret_reg,code_undef2
 DF67  CB		     3			retf
 = 00E0			     3			op2	= op2 + 1
 E060  8B D5		     3			mov	temp,save_temp
 E062  8B EF		     3			mov	entry_SP,SP80
 E064  BF 0005		     3			mov	ret_reg,code_undef2
 E067  CB		     3			retf
 = 00E1			     3			op2	= op2 + 1
 = 00E2			     2		op2	= 0e1H + 1
 E160  8B 15		     1			mov	temp,ds:[SP80]
 E162  2E: 89 16 00F8	     1			mov	IXY,temp
 E167  83 C7 02		     1			add	SP80,2
 E16A  B2 00		     1			mov	temp_l,0
 E16C  8A 34		     2			mov	temp_h,ds:[PC80]
 E16E  46		     2			inc	PC80
 E16F  FF E2		     2			jmp	temp
 E260  8B D5		     3			mov	temp,save_temp
 E262  8B EF		     3			mov	entry_SP,SP80
 E264  BF 0005		     3			mov	ret_reg,code_undef2
 E267  CB		     3			retf
 = 00E3			     3			op2	= op2 + 1
 = 00E4			     2		op2	= 0e3H + 1
 E360  8B 15		     1			mov	temp,ds:[SP80]
 E362  2E: 87 16 00F8	     1			xchg	temp,IXY
 E367  89 15		     1			mov	ds:[SP80],temp
 E369  B2 00		     1			mov	temp_l,0
 E36B  8A 34		     2			mov	temp_h,ds:[PC80]
 E36D  46		     2			inc	PC80
 E36E  FF E2		     2			jmp	temp
 E460  8B D5		     3			mov	temp,save_temp
 E462  8B EF		     3			mov	entry_SP,SP80
 E464  BF 0005		     3			mov	ret_reg,code_undef2
 E467  CB		     3			retf
 = 00E5			     3			op2	= op2 + 1
 = 00E6			     2		op2	= 0e5H + 1
 E560  2E: 8B 16 00F8	     1			mov	temp,IXY
 E565  83 EF 02		     1			sub	SP80,2
 E568  89 15		     1			mov	ds:[SP80],temp
 E56A  B2 00		     1			mov	temp_l,0
 E56C  8A 34		     2			mov	temp_h,ds:[PC80]
 E56E  46		     2			inc	PC80
 E56F  FF E2		     2			jmp	temp
 E660  8B D5		     3			mov	temp,save_temp
 E662  8B EF		     3			mov	entry_SP,SP80
 E664  BF 0005		     3			mov	ret_reg,code_undef2
 E667  CB		     3			retf
 = 00E7			     3			op2	= op2 + 1
 E760  8B D5		     3			mov	temp,save_temp
 E762  8B EF		     3			mov	entry_SP,SP80
 E764  BF 0005		     3			mov	ret_reg,code_undef2
 E767  CB		     3			retf
 = 00E8			     3			op2	= op2 + 1
 E860  8B D5		     3			mov	temp,save_temp
 E862  8B EF		     3			mov	entry_SP,SP80
 E864  BF 0005		     3			mov	ret_reg,code_undef2
 E867  CB		     3			retf
 = 00E9			     3			op2	= op2 + 1
 = 00EA			     2		op2	= 0e9H + 1
 E960  2E: 8B 36 00F8	     1			mov	PC80,IXY
 E965  B2 00		     1			mov	temp_l,0
 E967  8A 34		     2			mov	temp_h,ds:[PC80]
 E969  46		     2			inc	PC80
 E96A  FF E2		     2			jmp	temp
 EA60  8B D5		     3			mov	temp,save_temp
 EA62  8B EF		     3			mov	entry_SP,SP80
 EA64  BF 0005		     3			mov	ret_reg,code_undef2
 EA67  CB		     3			retf
 = 00EB			     3			op2	= op2 + 1
 EB60  8B D5		     3			mov	temp,save_temp
 EB62  8B EF		     3			mov	entry_SP,SP80
 EB64  BF 0005		     3			mov	ret_reg,code_undef2
 EB67  CB		     3			retf
 = 00EC			     3			op2	= op2 + 1
 EC60  8B D5		     3			mov	temp,save_temp
 EC62  8B EF		     3			mov	entry_SP,SP80
 EC64  BF 0005		     3			mov	ret_reg,code_undef2
 EC67  CB		     3			retf
 = 00ED			     3			op2	= op2 + 1
 ED60  8B D5		     3			mov	temp,save_temp
 ED62  8B EF		     3			mov	entry_SP,SP80
 ED64  BF 0005		     3			mov	ret_reg,code_undef2
 ED67  CB		     3			retf
 = 00EE			     3			op2	= op2 + 1
 EE60  8B D5		     3			mov	temp,save_temp
 EE62  8B EF		     3			mov	entry_SP,SP80
 EE64  BF 0005		     3			mov	ret_reg,code_undef2
 EE67  CB		     3			retf
 = 00EF			     3			op2	= op2 + 1
 EF60  8B D5		     3			mov	temp,save_temp
 EF62  8B EF		     3			mov	entry_SP,SP80
 EF64  BF 0005		     3			mov	ret_reg,code_undef2
 EF67  CB		     3			retf
 = 00F0			     3			op2	= op2 + 1
 F060  8B D5		     3			mov	temp,save_temp
 F062  8B EF		     3			mov	entry_SP,SP80
 F064  BF 0005		     3			mov	ret_reg,code_undef2
 F067  CB		     3			retf
 = 00F1			     3			op2	= op2 + 1
 F160  8B D5		     3			mov	temp,save_temp
 F162  8B EF		     3			mov	entry_SP,SP80
 F164  BF 0005		     3			mov	ret_reg,code_undef2
 F167  CB		     3			retf
 = 00F2			     3			op2	= op2 + 1
 F260  8B D5		     3			mov	temp,save_temp
 F262  8B EF		     3			mov	entry_SP,SP80
 F264  BF 0005		     3			mov	ret_reg,code_undef2
 F267  CB		     3			retf
 = 00F3			     3			op2	= op2 + 1
 F360  8B D5		     3			mov	temp,save_temp
 F362  8B EF		     3			mov	entry_SP,SP80
 F364  BF 0005		     3			mov	ret_reg,code_undef2
 F367  CB		     3			retf
 = 00F4			     3			op2	= op2 + 1
 F460  8B D5		     3			mov	temp,save_temp
 F462  8B EF		     3			mov	entry_SP,SP80
 F464  BF 0005		     3			mov	ret_reg,code_undef2
 F467  CB		     3			retf
 = 00F5			     3			op2	= op2 + 1
 F560  8B D5		     3			mov	temp,save_temp
 F562  8B EF		     3			mov	entry_SP,SP80
 F564  BF 0005		     3			mov	ret_reg,code_undef2
 F567  CB		     3			retf
 = 00F6			     3			op2	= op2 + 1
 F660  8B D5		     3			mov	temp,save_temp
 F662  8B EF		     3			mov	entry_SP,SP80
 F664  BF 0005		     3			mov	ret_reg,code_undef2
 F667  CB		     3			retf
 = 00F7			     3			op2	= op2 + 1
 F760  8B D5		     3			mov	temp,save_temp
 F762  8B EF		     3			mov	entry_SP,SP80
 F764  BF 0005		     3			mov	ret_reg,code_undef2
 F767  CB		     3			retf
 = 00F8			     3			op2	= op2 + 1
 F860  8B D5		     3			mov	temp,save_temp
 F862  8B EF		     3			mov	entry_SP,SP80
 F864  BF 0005		     3			mov	ret_reg,code_undef2
 F867  CB		     3			retf
 = 00F9			     3			op2	= op2 + 1
 = 00FA			     2		op2	= 0f9H + 1
 F960  2E: 8B 3E 00F8	     1			mov	SP80,IXY
 F965  B2 00		     1			mov	temp_l,0
 F967  8A 34		     2			mov	temp_h,ds:[PC80]
 F969  46		     2			inc	PC80
 F96A  FF E2		     2			jmp	temp
 FA60  8B D5		     3			mov	temp,save_temp
 FA62  8B EF		     3			mov	entry_SP,SP80
 FA64  BF 0005		     3			mov	ret_reg,code_undef2
 FA67  CB		     3			retf
 = 00FB			     3			op2	= op2 + 1
 FB60  8B D5		     3			mov	temp,save_temp
 FB62  8B EF		     3			mov	entry_SP,SP80
 FB64  BF 0005		     3			mov	ret_reg,code_undef2
 FB67  CB		     3			retf
 = 00FC			     3			op2	= op2 + 1
 FC60  8B D5		     3			mov	temp,save_temp
 FC62  8B EF		     3			mov	entry_SP,SP80
 FC64  BF 0005		     3			mov	ret_reg,code_undef2
 FC67  CB		     3			retf
 = 00FD			     3			op2	= op2 + 1
 FD60  8B D5		     3			mov	temp,save_temp
 FD62  8B EF		     3			mov	entry_SP,SP80
 FD64  BF 0005		     3			mov	ret_reg,code_undef2
 FD67  CB		     3			retf
 = 00FE			     3			op2	= op2 + 1
 FE60  8B D5		     3			mov	temp,save_temp
 FE62  8B EF		     3			mov	entry_SP,SP80
 FE64  BF 0005		     3			mov	ret_reg,code_undef2
 FE67  CB		     3			retf
 = 00FF			     3			op2	= op2 + 1
 = 0100			     2		op2	= 0ffh + 1
 FF60  8B D5		     1			mov	temp,save_temp
 FF62  8B EF		     1			mov	entry_SP,SP80
 FF64  BF 0005		     1			mov	ret_reg,code_undef2
 FF67  CB		     1			retf
 = 0080			     1	org_DDFD	=	org_FD
 = IY			     1	IXY		equ	IY
 = YL			     1	XYL		equ	YL
 = YH			     1	XYH		equ	YH
 = 0000			     1	op2	=	0
 0080  8B D5		     3			mov	temp,save_temp
 0082  8B EF		     3			mov	entry_SP,SP80
 0084  BF 0005		     3			mov	ret_reg,code_undef2
 0087  CB		     3			retf
 = 0001			     3			op2	= op2 + 1
 0180  8B D5		     3			mov	temp,save_temp
 0182  8B EF		     3			mov	entry_SP,SP80
 0184  BF 0005		     3			mov	ret_reg,code_undef2
 0187  CB		     3			retf
 = 0002			     3			op2	= op2 + 1
 0280  8B D5		     3			mov	temp,save_temp
 0282  8B EF		     3			mov	entry_SP,SP80
 0284  BF 0005		     3			mov	ret_reg,code_undef2
 0287  CB		     3			retf
 = 0003			     3			op2	= op2 + 1
 0380  8B D5		     3			mov	temp,save_temp
 0382  8B EF		     3			mov	entry_SP,SP80
 0384  BF 0005		     3			mov	ret_reg,code_undef2
 0387  CB		     3			retf
 = 0004			     3			op2	= op2 + 1
 0480  8B D5		     3			mov	temp,save_temp
 0482  8B EF		     3			mov	entry_SP,SP80
 0484  BF 0005		     3			mov	ret_reg,code_undef2
 0487  CB		     3			retf
 = 0005			     3			op2	= op2 + 1
 0580  8B D5		     3			mov	temp,save_temp
 0582  8B EF		     3			mov	entry_SP,SP80
 0584  BF 0005		     3			mov	ret_reg,code_undef2
 0587  CB		     3			retf
 = 0006			     3			op2	= op2 + 1
 0680  8B D5		     3			mov	temp,save_temp
 0682  8B EF		     3			mov	entry_SP,SP80
 0684  BF 0005		     3			mov	ret_reg,code_undef2
 0687  CB		     3			retf
 = 0007			     3			op2	= op2 + 1
 0780  8B D5		     3			mov	temp,save_temp
 0782  8B EF		     3			mov	entry_SP,SP80
 0784  BF 0005		     3			mov	ret_reg,code_undef2
 0787  CB		     3			retf
 = 0008			     3			op2	= op2 + 1
 0880  8B D5		     3			mov	temp,save_temp
 0882  8B EF		     3			mov	entry_SP,SP80
 0884  BF 0005		     3			mov	ret_reg,code_undef2
 0887  CB		     3			retf
 = 0009			     3			op2	= op2 + 1
 = 000A			     2		op2	= 09H + 1
 0980  D0 CC		     2			ror	ah,1
 0982  2E: 01 0E 00FA	     2			add	IXY,BC
 0987  D0 D4		     2			rcl	ah,1
 0989  80 E4 FD		     2			and	ah,not (n_flag)
 098C  B2 00		     2			mov	temp_l,0
 098E  8A 34		     3			mov	temp_h,ds:[PC80]
 0990  46		     3			inc	PC80
 0991  FF E2		     3			jmp	temp
 0A80  8B D5		     3			mov	temp,save_temp
 0A82  8B EF		     3			mov	entry_SP,SP80
 0A84  BF 0005		     3			mov	ret_reg,code_undef2
 0A87  CB		     3			retf
 = 000B			     3			op2	= op2 + 1
 0B80  8B D5		     3			mov	temp,save_temp
 0B82  8B EF		     3			mov	entry_SP,SP80
 0B84  BF 0005		     3			mov	ret_reg,code_undef2
 0B87  CB		     3			retf
 = 000C			     3			op2	= op2 + 1
 0C80  8B D5		     3			mov	temp,save_temp
 0C82  8B EF		     3			mov	entry_SP,SP80
 0C84  BF 0005		     3			mov	ret_reg,code_undef2
 0C87  CB		     3			retf
 = 000D			     3			op2	= op2 + 1
 0D80  8B D5		     3			mov	temp,save_temp
 0D82  8B EF		     3			mov	entry_SP,SP80
 0D84  BF 0005		     3			mov	ret_reg,code_undef2
 0D87  CB		     3			retf
 = 000E			     3			op2	= op2 + 1
 0E80  8B D5		     3			mov	temp,save_temp
 0E82  8B EF		     3			mov	entry_SP,SP80
 0E84  BF 0005		     3			mov	ret_reg,code_undef2
 0E87  CB		     3			retf
 = 000F			     3			op2	= op2 + 1
 0F80  8B D5		     3			mov	temp,save_temp
 0F82  8B EF		     3			mov	entry_SP,SP80
 0F84  BF 0005		     3			mov	ret_reg,code_undef2
 0F87  CB		     3			retf
 = 0010			     3			op2	= op2 + 1
 1080  8B D5		     3			mov	temp,save_temp
 1082  8B EF		     3			mov	entry_SP,SP80
 1084  BF 0005		     3			mov	ret_reg,code_undef2
 1087  CB		     3			retf
 = 0011			     3			op2	= op2 + 1
 1180  8B D5		     3			mov	temp,save_temp
 1182  8B EF		     3			mov	entry_SP,SP80
 1184  BF 0005		     3			mov	ret_reg,code_undef2
 1187  CB		     3			retf
 = 0012			     3			op2	= op2 + 1
 1280  8B D5		     3			mov	temp,save_temp
 1282  8B EF		     3			mov	entry_SP,SP80
 1284  BF 0005		     3			mov	ret_reg,code_undef2
 1287  CB		     3			retf
 = 0013			     3			op2	= op2 + 1
 1380  8B D5		     3			mov	temp,save_temp
 1382  8B EF		     3			mov	entry_SP,SP80
 1384  BF 0005		     3			mov	ret_reg,code_undef2
 1387  CB		     3			retf
 = 0014			     3			op2	= op2 + 1
 1480  8B D5		     3			mov	temp,save_temp
 1482  8B EF		     3			mov	entry_SP,SP80
 1484  BF 0005		     3			mov	ret_reg,code_undef2
 1487  CB		     3			retf
 = 0015			     3			op2	= op2 + 1
 1580  8B D5		     3			mov	temp,save_temp
 1582  8B EF		     3			mov	entry_SP,SP80
 1584  BF 0005		     3			mov	ret_reg,code_undef2
 1587  CB		     3			retf
 = 0016			     3			op2	= op2 + 1
 1680  8B D5		     3			mov	temp,save_temp
 1682  8B EF		     3			mov	entry_SP,SP80
 1684  BF 0005		     3			mov	ret_reg,code_undef2
 1687  CB		     3			retf
 = 0017			     3			op2	= op2 + 1
 1780  8B D5		     3			mov	temp,save_temp
 1782  8B EF		     3			mov	entry_SP,SP80
 1784  BF 0005		     3			mov	ret_reg,code_undef2
 1787  CB		     3			retf
 = 0018			     3			op2	= op2 + 1
 1880  8B D5		     3			mov	temp,save_temp
 1882  8B EF		     3			mov	entry_SP,SP80
 1884  BF 0005		     3			mov	ret_reg,code_undef2
 1887  CB		     3			retf
 = 0019			     3			op2	= op2 + 1
 = 001A			     2		op2	= 19H + 1
 1980  D0 CC		     2			ror	ah,1
 1982  2E: 01 2E 00FA	     2			add	IXY,DE
 1987  D0 D4		     2			rcl	ah,1
 1989  80 E4 FD		     2			and	ah,not (n_flag)
 198C  B2 00		     2			mov	temp_l,0
 198E  8A 34		     3			mov	temp_h,ds:[PC80]
 1990  46		     3			inc	PC80
 1991  FF E2		     3			jmp	temp
 1A80  8B D5		     3			mov	temp,save_temp
 1A82  8B EF		     3			mov	entry_SP,SP80
 1A84  BF 0005		     3			mov	ret_reg,code_undef2
 1A87  CB		     3			retf
 = 001B			     3			op2	= op2 + 1
 1B80  8B D5		     3			mov	temp,save_temp
 1B82  8B EF		     3			mov	entry_SP,SP80
 1B84  BF 0005		     3			mov	ret_reg,code_undef2
 1B87  CB		     3			retf
 = 001C			     3			op2	= op2 + 1
 1C80  8B D5		     3			mov	temp,save_temp
 1C82  8B EF		     3			mov	entry_SP,SP80
 1C84  BF 0005		     3			mov	ret_reg,code_undef2
 1C87  CB		     3			retf
 = 001D			     3			op2	= op2 + 1
 1D80  8B D5		     3			mov	temp,save_temp
 1D82  8B EF		     3			mov	entry_SP,SP80
 1D84  BF 0005		     3			mov	ret_reg,code_undef2
 1D87  CB		     3			retf
 = 001E			     3			op2	= op2 + 1
 1E80  8B D5		     3			mov	temp,save_temp
 1E82  8B EF		     3			mov	entry_SP,SP80
 1E84  BF 0005		     3			mov	ret_reg,code_undef2
 1E87  CB		     3			retf
 = 001F			     3			op2	= op2 + 1
 1F80  8B D5		     3			mov	temp,save_temp
 1F82  8B EF		     3			mov	entry_SP,SP80
 1F84  BF 0005		     3			mov	ret_reg,code_undef2
 1F87  CB		     3			retf
 = 0020			     3			op2	= op2 + 1
 2080  8B D5		     3			mov	temp,save_temp
 2082  8B EF		     3			mov	entry_SP,SP80
 2084  BF 0005		     3			mov	ret_reg,code_undef2
 2087  CB		     3			retf
 = 0021			     3			op2	= op2 + 1
 = 0022			     2		op2	= 21H + 1
 2180  8B 14		     1			mov	temp,ds:[PC80]
 2182  2E: 89 16 00FA	     1			mov	IXY,temp
 2187  B2 00		     1			mov	temp_l,0
 2189  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 218C  83 C6 03		     2			add	PC80,3
 218F  FF E2		     2			jmp	temp
 = 0023			     2		op2	= 22H + 1
 2280  50		     1			push	ax
 2281  8B D3		     1			mov	temp,bx
 2283  AD		     1			lodsw
 2284  8B D8		     1			mov	bx,ax
 2286  2E: A1 00FA	     1			mov	ax,IXY
 228A  89 07		     1			mov	ds:[bx],ax
 228C  8B DA		     1			mov	bx,temp
 228E  58		     1			pop	ax
 228F  B2 00		     1			mov	temp_l,0
 2291  8A 34		     2			mov	temp_h,ds:[PC80]
 2293  46		     2			inc	PC80
 2294  FF E2		     2			jmp	temp
 = 0024			     2		op2	= 23H + 1
 2380  2E: FF 06 00FA	     1			inc	IXY
 2385  B2 00		     1			mov	temp_l,0
 2387  8A 34		     2			mov	temp_h,ds:[PC80]
 2389  46		     2			inc	PC80
 238A  FF E2		     2			jmp	temp
 = 0025			     2		op2	= 24H + 1
 2480  9E		     1			sahf
 2481  2E: FE 06 00FB	     1			inc	XYH
 2486  9F		     1			lahf
 2487  70 0A		     1			jo	@f
 2489  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 248C  B2 00		     1			mov	temp_l,0
 248E  8A 34		     2			mov	temp_h,ds:[PC80]
 2490  46		     2			inc	PC80
 2491  FF E2		     2			jmp	temp
 2493  80 E4 FD		     1	@@:		and	ah,not n_flag
 2496  80 CC 04		     1			or	ah,v_flag
 2499  B2 00		     1			mov	temp_l,0
 249B  8A 34		     2			mov	temp_h,ds:[PC80]
 249D  46		     2			inc	PC80
 249E  FF E2		     2			jmp	temp
 = 0026			     2		op2	= 25H + 1
 2580  9E		     1			sahf
 2581  2E: FE 0E 00FB	     1			dec	XYH
 2586  9F		     1			lahf
 2587  70 0A		     1			jo	@f
 2589  80 E4 FB		     1			and	ah,not(v_flag)
 258C  B2 00		     1			mov	temp_l,0
 258E  8A 34		     2			mov	temp_h,ds:[PC80]
 2590  46		     2			inc	PC80
 2591  FF E2		     2			jmp	temp
 2593  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 2596  B2 00		     1			mov	temp_l,0
 2598  8A 34		     2			mov	temp_h,ds:[PC80]
 259A  46		     2			inc	PC80
 259B  FF E2		     2			jmp	temp
 = 0027			     2		op2	= 26H + 1
 2680  8A 34		     1			mov	temp_h,ds:[PC80]
 2682  2E: 88 36 00FB	     1			mov	XYH,temp_h
 2687  B2 00		     1			mov	temp_l,0
 2689  46		     2			inc	PC80
 268A  8A 34		     2			mov	temp_h,ds:[PC80]
 268C  46		     2			inc	PC80
 268D  FF E2		     2			jmp	temp
 2780  8B D5		     3			mov	temp,save_temp
 2782  8B EF		     3			mov	entry_SP,SP80
 2784  BF 0005		     3			mov	ret_reg,code_undef2
 2787  CB		     3			retf
 = 0028			     3			op2	= op2 + 1
 2880  8B D5		     3			mov	temp,save_temp
 2882  8B EF		     3			mov	entry_SP,SP80
 2884  BF 0005		     3			mov	ret_reg,code_undef2
 2887  CB		     3			retf
 = 0029			     3			op2	= op2 + 1
 = 002A			     2		op2	= 29H + 1
 2980  D0 CC		     1			ror	ah,1
 2982  2E: D1 26 00FA	     1			shl	IXY,1
 2987  D0 D4		     1			rcl	ah,1
 2989  80 E4 FD		     1			and	ah,not (n_flag)
 298C  B2 00		     1			mov	temp_l,0
 298E  8A 34		     2			mov	temp_h,ds:[PC80]
 2990  46		     2			inc	PC80
 2991  FF E2		     2			jmp	temp
 = 002B			     2		op2	= 2aH + 1
 2A80  8B D3		     1			mov	temp,bx
 2A82  8B 1C		     1			mov	bx,ds:[PC80]
 2A84  8B 1F		     1			mov	bx,ds:[bx]
 2A86  2E: 89 1E 00FA	     1			mov	IXY,bx
 2A8B  8B DA		     1			mov	bx,temp
 2A8D  B2 00		     1			mov	temp_l,0
 2A8F  8A 74 02		     2			mov	temp_h,ds:[PC80+2]
 2A92  83 C6 03		     2			add	PC80,3
 2A95  FF E2		     2			jmp	temp
 = 002C			     2		op2	= 2bH + 1
 2B80  2E: FF 0E 00FA	     1			dec	IXY
 2B85  B2 00		     1			mov	temp_l,0
 2B87  8A 34		     2			mov	temp_h,ds:[PC80]
 2B89  46		     2			inc	PC80
 2B8A  FF E2		     2			jmp	temp
 = 002D			     2		op2	= 2cH + 1
 2C80  9E		     1			sahf
 2C81  2E: FE 06 00FA	     1			inc	XYL
 2C86  9F		     1	??0007:		lahf
 2C87  70 0A		     1			jo	@f
 2C89  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 2C8C  B2 00		     1			mov	temp_l,0
 2C8E  8A 34		     2			mov	temp_h,ds:[PC80]
 2C90  46		     2			inc	PC80
 2C91  FF E2		     2			jmp	temp
 2C93  80 E4 FD		     1	@@:		and	ah,not n_flag
 2C96  80 CC 04		     1			or	ah,v_flag
 2C99  B2 00		     1			mov	temp_l,0
 2C9B  8A 34		     2			mov	temp_h,ds:[PC80]
 2C9D  46		     2			inc	PC80
 2C9E  FF E2		     2			jmp	temp
 = 002E			     2		op2	= 2dH + 1
 2D80  9E		     1			sahf
 2D81  2E: FE 0E 00FA	     1			dec	XYL
 2D86  9F		     1	??0008:		lahf
 2D87  70 0A		     1			jo	@f
 2D89  80 E4 FB		     1			and	ah,not(v_flag)
 2D8C  B2 00		     1			mov	temp_l,0
 2D8E  8A 34		     2			mov	temp_h,ds:[PC80]
 2D90  46		     2			inc	PC80
 2D91  FF E2		     2			jmp	temp
 2D93  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 2D96  B2 00		     1			mov	temp_l,0
 2D98  8A 34		     2			mov	temp_h,ds:[PC80]
 2D9A  46		     2			inc	PC80
 2D9B  FF E2		     2			jmp	temp
 = 002F			     2		op2	= 2eH + 1
 2E80  8A 34		     1			mov	temp_h,ds:[PC80]	;LD	XYL,n
 2E82  2E: 88 36 00FA	     1			mov	XYL,temp_h
 2E87  B2 00		     1			mov	temp_l,0
 2E89  46		     2			inc	PC80
 2E8A  8A 34		     2			mov	temp_h,ds:[PC80]
 2E8C  46		     2			inc	PC80
 2E8D  FF E2		     2			jmp	temp
 2F80  8B D5		     3			mov	temp,save_temp
 2F82  8B EF		     3			mov	entry_SP,SP80
 2F84  BF 0005		     3			mov	ret_reg,code_undef2
 2F87  CB		     3			retf
 = 0030			     3			op2	= op2 + 1
 3080  8B D5		     3			mov	temp,save_temp
 3082  8B EF		     3			mov	entry_SP,SP80
 3084  BF 0005		     3			mov	ret_reg,code_undef2
 3087  CB		     3			retf
 = 0031			     3			op2	= op2 + 1
 3180  8B D5		     3			mov	temp,save_temp
 3182  8B EF		     3			mov	entry_SP,SP80
 3184  BF 0005		     3			mov	ret_reg,code_undef2
 3187  CB		     3			retf
 = 0032			     3			op2	= op2 + 1
 3280  8B D5		     3			mov	temp,save_temp
 3282  8B EF		     3			mov	entry_SP,SP80
 3284  BF 0005		     3			mov	ret_reg,code_undef2
 3287  CB		     3			retf
 = 0033			     3			op2	= op2 + 1
 3380  8B D5		     3			mov	temp,save_temp
 3382  8B EF		     3			mov	entry_SP,SP80
 3384  BF 0005		     3			mov	ret_reg,code_undef2
 3387  CB		     3			retf
 = 0034			     3			op2	= op2 + 1
 = 0035			     2		op2	= 34H + 1
 3480  8B D3		     1			mov	temp,bx
 3482  8B D8		     1			mov	bx,ax
 3484  AC		     1			lodsb
 3485  98		     1			cbw
 3486  2E: 03 06 00FA	     1			add	ax,IXY
 348B  93		     1			xchg	ax,bx
 348C  9E		     1			sahf
 348D  FE 07		     1			inc	byte ptr ds:[bx]
 348F  8B DA		     1			mov	bx,temp
 3491  E9 F7F2		     1			jmp	??0007
 = 0036			     2		op2	= 35H + 1
 3580  8B D3		     1			mov	temp,bx
 3582  8B D8		     1			mov	bx,ax
 3584  AC		     1			lodsb
 3585  98		     1			cbw
 3586  2E: 03 06 00FA	     1			add	ax,IXY
 358B  93		     1			xchg	ax,bx
 358C  9E		     1			sahf
 358D  FE 0F		     1			dec	byte ptr ds:[bx]
 358F  8B DA		     1			mov	bx,temp
 3591  E9 F7F2		     1			jmp	??0008
 = 0037			     2		op2	= 36H + 1
 3680  50		     1			push	ax
 3681  8B D3		     1			mov	temp,bx
 3683  AC		     1			lodsb
 3684  98		     1			cbw
 3685  2E: 03 06 00FA	     1			add	ax,IXY
 368A  8B D8		     1			mov	bx,ax
 368C  AC		     1			lodsb
 368D  88 07		     1			mov	ds:[bx],al
 368F  8B DA		     1			mov	bx,temp
 3691  58		     1			pop	ax
 3692  B2 00		     1			mov	temp_l,0
 3694  8A 34		     2			mov	temp_h,ds:[PC80]
 3696  46		     2			inc	PC80
 3697  FF E2		     2			jmp	temp
 3780  8B D5		     3			mov	temp,save_temp
 3782  8B EF		     3			mov	entry_SP,SP80
 3784  BF 0005		     3			mov	ret_reg,code_undef2
 3787  CB		     3			retf
 = 0038			     3			op2	= op2 + 1
 3880  8B D5		     3			mov	temp,save_temp
 3882  8B EF		     3			mov	entry_SP,SP80
 3884  BF 0005		     3			mov	ret_reg,code_undef2
 3887  CB		     3			retf
 = 0039			     3			op2	= op2 + 1
 = 003A			     2		op2	= 39H + 1
 3980  D0 CC		     2			ror	ah,1
 3982  2E: 01 3E 00FA	     2			add	IXY,SP80
 3987  D0 D4		     2			rcl	ah,1
 3989  80 E4 FD		     2			and	ah,not (n_flag)
 398C  B2 00		     2			mov	temp_l,0
 398E  8A 34		     3			mov	temp_h,ds:[PC80]
 3990  46		     3			inc	PC80
 3991  FF E2		     3			jmp	temp
 3A80  8B D5		     3			mov	temp,save_temp
 3A82  8B EF		     3			mov	entry_SP,SP80
 3A84  BF 0005		     3			mov	ret_reg,code_undef2
 3A87  CB		     3			retf
 = 003B			     3			op2	= op2 + 1
 3B80  8B D5		     3			mov	temp,save_temp
 3B82  8B EF		     3			mov	entry_SP,SP80
 3B84  BF 0005		     3			mov	ret_reg,code_undef2
 3B87  CB		     3			retf
 = 003C			     3			op2	= op2 + 1
 3C80  8B D5		     3			mov	temp,save_temp
 3C82  8B EF		     3			mov	entry_SP,SP80
 3C84  BF 0005		     3			mov	ret_reg,code_undef2
 3C87  CB		     3			retf
 = 003D			     3			op2	= op2 + 1
 3D80  8B D5		     3			mov	temp,save_temp
 3D82  8B EF		     3			mov	entry_SP,SP80
 3D84  BF 0005		     3			mov	ret_reg,code_undef2
 3D87  CB		     3			retf
 = 003E			     3			op2	= op2 + 1
 3E80  8B D5		     3			mov	temp,save_temp
 3E82  8B EF		     3			mov	entry_SP,SP80
 3E84  BF 0005		     3			mov	ret_reg,code_undef2
 3E87  CB		     3			retf
 = 003F			     3			op2	= op2 + 1
 3F80  8B D5		     3			mov	temp,save_temp
 3F82  8B EF		     3			mov	entry_SP,SP80
 3F84  BF 0005		     3			mov	ret_reg,code_undef2
 3F87  CB		     3			retf
 = 0040			     3			op2	= op2 + 1
 4080  8B D5		     3			mov	temp,save_temp
 4082  8B EF		     3			mov	entry_SP,SP80
 4084  BF 0005		     3			mov	ret_reg,code_undef2
 4087  CB		     3			retf
 = 0041			     3			op2	= op2 + 1
 4180  8B D5		     3			mov	temp,save_temp
 4182  8B EF		     3			mov	entry_SP,SP80
 4184  BF 0005		     3			mov	ret_reg,code_undef2
 4187  CB		     3			retf
 = 0042			     3			op2	= op2 + 1
 4280  8B D5		     3			mov	temp,save_temp
 4282  8B EF		     3			mov	entry_SP,SP80
 4284  BF 0005		     3			mov	ret_reg,code_undef2
 4287  CB		     3			retf
 = 0043			     3			op2	= op2 + 1
 4380  8B D5		     3			mov	temp,save_temp
 4382  8B EF		     3			mov	entry_SP,SP80
 4384  BF 0005		     3			mov	ret_reg,code_undef2
 4387  CB		     3			retf
 = 0044			     3			op2	= op2 + 1
 = 0045			     2		op2	= 44H + 1
 4480  2E: 8A 2E 00FB	     2			mov	B,XYH
 4485  B2 00		     2			mov	temp_l,0
 4487  8A 34		     3			mov	temp_h,ds:[PC80]
 4489  46		     3			inc	PC80
 448A  FF E2		     3			jmp	temp
 = 0046			     2		op2	= 45H + 1
 4580  2E: 8A 2E 00FA	     2			mov	B,XYL
 4585  B2 00		     2			mov	temp_l,0
 4587  8A 34		     3			mov	temp_h,ds:[PC80]
 4589  46		     3			inc	PC80
 458A  FF E2		     3			jmp	temp
 = 0047			     2		op2	= 46H + 1
 4680  8B D5		     2			mov	temp,save_temp
 4682  8B E8		     2			mov	save_temp,ax
 4684  AC		     2			lodsb
 4685  98		     2			cbw
 4686  2E: 03 06 00FA	     2			add	ax,IXY
 468B  95		     2			xchg	ax,save_temp
 468C  3E: 8A 6E 00	     2			mov	B,ds:[save_temp]
 4690  8B EA		     2			mov	save_temp,temp
 4692  B2 00		     2			mov	temp_l,0
 4694  8A 34		     3			mov	temp_h,ds:[PC80]
 4696  46		     3			inc	PC80
 4697  FF E2		     3			jmp	temp
 4780  8B D5		     3			mov	temp,save_temp
 4782  8B EF		     3			mov	entry_SP,SP80
 4784  BF 0005		     3			mov	ret_reg,code_undef2
 4787  CB		     3			retf
 = 0048			     3			op2	= op2 + 1
 4880  8B D5		     3			mov	temp,save_temp
 4882  8B EF		     3			mov	entry_SP,SP80
 4884  BF 0005		     3			mov	ret_reg,code_undef2
 4887  CB		     3			retf
 = 0049			     3			op2	= op2 + 1
 4980  8B D5		     3			mov	temp,save_temp
 4982  8B EF		     3			mov	entry_SP,SP80
 4984  BF 0005		     3			mov	ret_reg,code_undef2
 4987  CB		     3			retf
 = 004A			     3			op2	= op2 + 1
 4A80  8B D5		     3			mov	temp,save_temp
 4A82  8B EF		     3			mov	entry_SP,SP80
 4A84  BF 0005		     3			mov	ret_reg,code_undef2
 4A87  CB		     3			retf
 = 004B			     3			op2	= op2 + 1
 4B80  8B D5		     3			mov	temp,save_temp
 4B82  8B EF		     3			mov	entry_SP,SP80
 4B84  BF 0005		     3			mov	ret_reg,code_undef2
 4B87  CB		     3			retf
 = 004C			     3			op2	= op2 + 1
 = 004D			     2		op2	= 4cH + 1
 4C80  2E: 8A 0E 00FB	     2			mov	C_reg,XYH
 4C85  B2 00		     2			mov	temp_l,0
 4C87  8A 34		     3			mov	temp_h,ds:[PC80]
 4C89  46		     3			inc	PC80
 4C8A  FF E2		     3			jmp	temp
 = 004E			     2		op2	= 4dH + 1
 4D80  2E: 8A 0E 00FA	     2			mov	C_reg,XYL
 4D85  B2 00		     2			mov	temp_l,0
 4D87  8A 34		     3			mov	temp_h,ds:[PC80]
 4D89  46		     3			inc	PC80
 4D8A  FF E2		     3			jmp	temp
 = 004F			     2		op2	= 4eH + 1
 4E80  8B D5		     2			mov	temp,save_temp
 4E82  8B E8		     2			mov	save_temp,ax
 4E84  AC		     2			lodsb
 4E85  98		     2			cbw
 4E86  2E: 03 06 00FA	     2			add	ax,IXY
 4E8B  95		     2			xchg	ax,save_temp
 4E8C  3E: 8A 4E 00	     2			mov	C_reg,ds:[save_temp]
 4E90  8B EA		     2			mov	save_temp,temp
 4E92  B2 00		     2			mov	temp_l,0
 4E94  8A 34		     3			mov	temp_h,ds:[PC80]
 4E96  46		     3			inc	PC80
 4E97  FF E2		     3			jmp	temp
 4F80  8B D5		     3			mov	temp,save_temp
 4F82  8B EF		     3			mov	entry_SP,SP80
 4F84  BF 0005		     3			mov	ret_reg,code_undef2
 4F87  CB		     3			retf
 = 0050			     3			op2	= op2 + 1
 5080  8B D5		     3			mov	temp,save_temp
 5082  8B EF		     3			mov	entry_SP,SP80
 5084  BF 0005		     3			mov	ret_reg,code_undef2
 5087  CB		     3			retf
 = 0051			     3			op2	= op2 + 1
 5180  8B D5		     3			mov	temp,save_temp
 5182  8B EF		     3			mov	entry_SP,SP80
 5184  BF 0005		     3			mov	ret_reg,code_undef2
 5187  CB		     3			retf
 = 0052			     3			op2	= op2 + 1
 5280  8B D5		     3			mov	temp,save_temp
 5282  8B EF		     3			mov	entry_SP,SP80
 5284  BF 0005		     3			mov	ret_reg,code_undef2
 5287  CB		     3			retf
 = 0053			     3			op2	= op2 + 1
 5380  8B D5		     3			mov	temp,save_temp
 5382  8B EF		     3			mov	entry_SP,SP80
 5384  BF 0005		     3			mov	ret_reg,code_undef2
 5387  CB		     3			retf
 = 0054			     3			op2	= op2 + 1
 = 0055			     2		op2	= 54H + 1
 5480  8B D5		     2			mov	temp,save_temp
 5482  2E: 8A 36 00FB	     2			mov	D,XYH
 5487  8B EA		     2			mov	save_temp,temp
 5489  B2 00		     2			mov	temp_l,0
 548B  8A 34		     3			mov	temp_h,ds:[PC80]
 548D  46		     3			inc	PC80
 548E  FF E2		     3			jmp	temp
 = 0056			     2		op2	= 55H + 1
 5580  8B D5		     2			mov	temp,save_temp
 5582  2E: 8A 36 00FA	     2			mov	D,XYL
 5587  8B EA		     2			mov	save_temp,temp
 5589  B2 00		     2			mov	temp_l,0
 558B  8A 34		     3			mov	temp_h,ds:[PC80]
 558D  46		     3			inc	PC80
 558E  FF E2		     3			jmp	temp
 = 0057			     2		op2	= 56H + 1
 5680  8B D5		     2			mov	temp,save_temp
 5682  8B E8		     2			mov	save_temp,ax
 5684  AC		     2			lodsb
 5685  98		     2			cbw
 5686  2E: 03 06 00FA	     2			add	ax,IXY
 568B  95		     2			xchg	ax,save_temp
 568C  3E: 8A 76 00	     2			mov	D,ds:[save_temp]
 5690  8B EA		     2			mov	save_temp,temp
 5692  B2 00		     2			mov	temp_l,0
 5694  8A 34		     3			mov	temp_h,ds:[PC80]
 5696  46		     3			inc	PC80
 5697  FF E2		     3			jmp	temp
 5780  8B D5		     3			mov	temp,save_temp
 5782  8B EF		     3			mov	entry_SP,SP80
 5784  BF 0005		     3			mov	ret_reg,code_undef2
 5787  CB		     3			retf
 = 0058			     3			op2	= op2 + 1
 5880  8B D5		     3			mov	temp,save_temp
 5882  8B EF		     3			mov	entry_SP,SP80
 5884  BF 0005		     3			mov	ret_reg,code_undef2
 5887  CB		     3			retf
 = 0059			     3			op2	= op2 + 1
 5980  8B D5		     3			mov	temp,save_temp
 5982  8B EF		     3			mov	entry_SP,SP80
 5984  BF 0005		     3			mov	ret_reg,code_undef2
 5987  CB		     3			retf
 = 005A			     3			op2	= op2 + 1
 5A80  8B D5		     3			mov	temp,save_temp
 5A82  8B EF		     3			mov	entry_SP,SP80
 5A84  BF 0005		     3			mov	ret_reg,code_undef2
 5A87  CB		     3			retf
 = 005B			     3			op2	= op2 + 1
 5B80  8B D5		     3			mov	temp,save_temp
 5B82  8B EF		     3			mov	entry_SP,SP80
 5B84  BF 0005		     3			mov	ret_reg,code_undef2
 5B87  CB		     3			retf
 = 005C			     3			op2	= op2 + 1
 = 005D			     2		op2	= 5cH + 1
 5C80  8B D5		     2			mov	temp,save_temp
 5C82  2E: 8A 16 00FB	     2			mov	E,XYH
 5C87  8B EA		     2			mov	save_temp,temp
 5C89  B2 00		     2			mov	temp_l,0
 5C8B  8A 34		     3			mov	temp_h,ds:[PC80]
 5C8D  46		     3			inc	PC80
 5C8E  FF E2		     3			jmp	temp
 = 005E			     2		op2	= 5dH + 1
 5D80  8B D5		     2			mov	temp,save_temp
 5D82  2E: 8A 16 00FA	     2			mov	E,XYL
 5D87  8B EA		     2			mov	save_temp,temp
 5D89  B2 00		     2			mov	temp_l,0
 5D8B  8A 34		     3			mov	temp_h,ds:[PC80]
 5D8D  46		     3			inc	PC80
 5D8E  FF E2		     3			jmp	temp
 = 005F			     2		op2	= 5eH + 1
 5E80  8B D5		     2			mov	temp,save_temp
 5E82  8B E8		     2			mov	save_temp,ax
 5E84  AC		     2			lodsb
 5E85  98		     2			cbw
 5E86  2E: 03 06 00FA	     2			add	ax,IXY
 5E8B  95		     2			xchg	ax,save_temp
 5E8C  3E: 8A 56 00	     2			mov	E,ds:[save_temp]
 5E90  8B EA		     2			mov	save_temp,temp
 5E92  B2 00		     2			mov	temp_l,0
 5E94  8A 34		     3			mov	temp_h,ds:[PC80]
 5E96  46		     3			inc	PC80
 5E97  FF E2		     3			jmp	temp
 5F80  8B D5		     3			mov	temp,save_temp
 5F82  8B EF		     3			mov	entry_SP,SP80
 5F84  BF 0005		     3			mov	ret_reg,code_undef2
 5F87  CB		     3			retf
 = 0060			     3			op2	= op2 + 1
 = 0061			     2		op2	= 60H + 1
 6080  2E: 88 2E 00FB	     2			mov	XYH,B
 6085  B2 00		     2			mov	temp_l,0
 6087  8A 34		     3			mov	temp_h,ds:[PC80]
 6089  46		     3			inc	PC80
 608A  FF E2		     3			jmp	temp
 = 0062			     2		op2	= 61H + 1
 6180  2E: 88 0E 00FB	     2			mov	XYH,C_reg
 6185  B2 00		     2			mov	temp_l,0
 6187  8A 34		     3			mov	temp_h,ds:[PC80]
 6189  46		     3			inc	PC80
 618A  FF E2		     3			jmp	temp
 = 0063			     2		op2	= 62H + 1
 6280  8B D5		     2			mov	temp,save_temp
 6282  2E: 88 36 00FB	     2			mov	XYH,D
 6287  B2 00		     2			mov	temp_l,0
 6289  8A 34		     3			mov	temp_h,ds:[PC80]
 628B  46		     3			inc	PC80
 628C  FF E2		     3			jmp	temp
 = 0064			     2		op2	= 63H + 1
 6380  8B D5		     2			mov	temp,save_temp
 6382  2E: 88 16 00FB	     2			mov	XYH,E
 6387  B2 00		     2			mov	temp_l,0
 6389  8A 34		     3			mov	temp_h,ds:[PC80]
 638B  46		     3			inc	PC80
 638C  FF E2		     3			jmp	temp
 = 0065			     2		op2	= 64H + 1
 6480  B2 00		     2			mov	temp_l,0
 6482  8A 34		     3			mov	temp_h,ds:[PC80]
 6484  46		     3			inc	PC80
 6485  FF E2		     3			jmp	temp
 = 0066			     2		op2	= 65H + 1
 6580  2E: 8A 36 00FA	     1			mov	temp_h,XYL
 6585  2E: 88 36 00FB	     1			mov	XYH,temp_h
 658A  B2 00		     1			mov	temp_l,0
 658C  8A 34		     2			mov	temp_h,ds:[PC80]
 658E  46		     2			inc	PC80
 658F  FF E2		     2			jmp	temp
 = 0067			     2		op2	= 66H + 1
 6680  8B D5		     2			mov	temp,save_temp
 6682  8B E8		     2			mov	save_temp,ax
 6684  AC		     2			lodsb
 6685  98		     2			cbw
 6686  2E: 03 06 00FA	     2			add	ax,IXY
 668B  95		     2			xchg	ax,save_temp
 668C  3E: 8A 7E 00	     2			mov	H,ds:[save_temp]
 6690  8B EA		     2			mov	save_temp,temp
 6692  B2 00		     2			mov	temp_l,0
 6694  8A 34		     3			mov	temp_h,ds:[PC80]
 6696  46		     3			inc	PC80
 6697  FF E2		     3			jmp	temp
 = 0068			     2		op2	= 67H + 1
 6780  2E: A2 00FB	     2			mov	XYH,A
 6784  B2 00		     2			mov	temp_l,0
 6786  8A 34		     3			mov	temp_h,ds:[PC80]
 6788  46		     3			inc	PC80
 6789  FF E2		     3			jmp	temp
 = 0069			     2		op2	= 68H + 1
 6880  2E: 88 2E 00FA	     2			mov	XYL,B
 6885  B2 00		     2			mov	temp_l,0
 6887  8A 34		     3			mov	temp_h,ds:[PC80]
 6889  46		     3			inc	PC80
 688A  FF E2		     3			jmp	temp
 = 006A			     2		op2	= 69H + 1
 6980  2E: 88 0E 00FA	     2			mov	XYL,C_reg
 6985  B2 00		     2			mov	temp_l,0
 6987  8A 34		     3			mov	temp_h,ds:[PC80]
 6989  46		     3			inc	PC80
 698A  FF E2		     3			jmp	temp
 = 006B			     2		op2	= 6aH + 1
 6A80  8B D5		     2			mov	temp,save_temp
 6A82  2E: 88 36 00FA	     2			mov	XYL,D
 6A87  B2 00		     2			mov	temp_l,0
 6A89  8A 34		     3			mov	temp_h,ds:[PC80]
 6A8B  46		     3			inc	PC80
 6A8C  FF E2		     3			jmp	temp
 = 006C			     2		op2	= 6bH + 1
 6B80  8B D5		     2			mov	temp,save_temp
 6B82  2E: 88 16 00FA	     2			mov	XYL,E
 6B87  B2 00		     2			mov	temp_l,0
 6B89  8A 34		     3			mov	temp_h,ds:[PC80]
 6B8B  46		     3			inc	PC80
 6B8C  FF E2		     3			jmp	temp
 = 006D			     2		op2	= 6cH + 1
 6C80  2E: 8A 36 00FB	     1			mov	temp_h,XYH
 6C85  2E: 88 36 00FA	     1			mov	XYL,temp_h
 6C8A  B2 00		     1			mov	temp_l,0
 6C8C  8A 34		     2			mov	temp_h,ds:[PC80]
 6C8E  46		     2			inc	PC80
 6C8F  FF E2		     2			jmp	temp
 = 006E			     2		op2	= 6dH + 1
 6D80  B2 00		     2			mov	temp_l,0
 6D82  8A 34		     3			mov	temp_h,ds:[PC80]
 6D84  46		     3			inc	PC80
 6D85  FF E2		     3			jmp	temp
 = 006F			     2		op2	= 6eH + 1
 6E80  8B D5		     2			mov	temp,save_temp
 6E82  8B E8		     2			mov	save_temp,ax
 6E84  AC		     2			lodsb
 6E85  98		     2			cbw
 6E86  2E: 03 06 00FA	     2			add	ax,IXY
 6E8B  95		     2			xchg	ax,save_temp
 6E8C  3E: 8A 5E 00	     2			mov	L,ds:[save_temp]
 6E90  8B EA		     2			mov	save_temp,temp
 6E92  B2 00		     2			mov	temp_l,0
 6E94  8A 34		     3			mov	temp_h,ds:[PC80]
 6E96  46		     3			inc	PC80
 6E97  FF E2		     3			jmp	temp
 = 0070			     2		op2	= 6fH + 1
 6F80  2E: A2 00FA	     2			mov	XYL,A
 6F84  B2 00		     2			mov	temp_l,0
 6F86  8A 34		     3			mov	temp_h,ds:[PC80]
 6F88  46		     3			inc	PC80
 6F89  FF E2		     3			jmp	temp
 = 0071			     2		op2	= 70H + 1
 7080  8B D5		     2			mov	temp,save_temp
 7082  8B E8		     2			mov	save_temp,ax
 7084  AC		     2			lodsb
 7085  98		     2			cbw
 7086  2E: 03 06 00FA	     2			add	ax,IXY
 708B  95		     2			xchg	ax,save_temp
 708C  3E: 88 6E 00	     2			mov	ds:[save_temp],B
 7090  8B EA		     2			mov	save_temp,temp
 7092  B2 00		     2			mov	temp_l,0
 7094  8A 34		     3			mov	temp_h,ds:[PC80]
 7096  46		     3			inc	PC80
 7097  FF E2		     3			jmp	temp
 = 0072			     2		op2	= 71H + 1
 7180  8B D5		     2			mov	temp,save_temp
 7182  8B E8		     2			mov	save_temp,ax
 7184  AC		     2			lodsb
 7185  98		     2			cbw
 7186  2E: 03 06 00FA	     2			add	ax,IXY
 718B  95		     2			xchg	ax,save_temp
 718C  3E: 88 4E 00	     2			mov	ds:[save_temp],C_reg
 7190  8B EA		     2			mov	save_temp,temp
 7192  B2 00		     2			mov	temp_l,0
 7194  8A 34		     3			mov	temp_h,ds:[PC80]
 7196  46		     3			inc	PC80
 7197  FF E2		     3			jmp	temp
 = 0073			     2		op2	= 72H + 1
 7280  8B D5		     2			mov	temp,save_temp
 7282  8B E8		     2			mov	save_temp,ax
 7284  AC		     2			lodsb
 7285  98		     2			cbw
 7286  2E: 03 06 00FA	     2			add	ax,IXY
 728B  95		     2			xchg	ax,save_temp
 728C  3E: 88 76 00	     2			mov	ds:[save_temp],D
 7290  8B EA		     2			mov	save_temp,temp
 7292  B2 00		     2			mov	temp_l,0
 7294  8A 34		     3			mov	temp_h,ds:[PC80]
 7296  46		     3			inc	PC80
 7297  FF E2		     3			jmp	temp
 = 0074			     2		op2	= 73H + 1
 7380  8B D5		     2			mov	temp,save_temp
 7382  8B E8		     2			mov	save_temp,ax
 7384  AC		     2			lodsb
 7385  98		     2			cbw
 7386  2E: 03 06 00FA	     2			add	ax,IXY
 738B  95		     2			xchg	ax,save_temp
 738C  3E: 88 56 00	     2			mov	ds:[save_temp],E
 7390  8B EA		     2			mov	save_temp,temp
 7392  B2 00		     2			mov	temp_l,0
 7394  8A 34		     3			mov	temp_h,ds:[PC80]
 7396  46		     3			inc	PC80
 7397  FF E2		     3			jmp	temp
 = 0075			     2		op2	= 74H + 1
 7480  8B D5		     2			mov	temp,save_temp
 7482  8B E8		     2			mov	save_temp,ax
 7484  AC		     2			lodsb
 7485  98		     2			cbw
 7486  2E: 03 06 00FA	     2			add	ax,IXY
 748B  95		     2			xchg	ax,save_temp
 748C  3E: 88 7E 00	     2			mov	ds:[save_temp],H
 7490  8B EA		     2			mov	save_temp,temp
 7492  B2 00		     2			mov	temp_l,0
 7494  8A 34		     3			mov	temp_h,ds:[PC80]
 7496  46		     3			inc	PC80
 7497  FF E2		     3			jmp	temp
 = 0076			     2		op2	= 75H + 1
 7580  8B D5		     2			mov	temp,save_temp
 7582  8B E8		     2			mov	save_temp,ax
 7584  AC		     2			lodsb
 7585  98		     2			cbw
 7586  2E: 03 06 00FA	     2			add	ax,IXY
 758B  95		     2			xchg	ax,save_temp
 758C  3E: 88 5E 00	     2			mov	ds:[save_temp],L
 7590  8B EA		     2			mov	save_temp,temp
 7592  B2 00		     2			mov	temp_l,0
 7594  8A 34		     3			mov	temp_h,ds:[PC80]
 7596  46		     3			inc	PC80
 7597  FF E2		     3			jmp	temp
 7680  8B D5		     3			mov	temp,save_temp
 7682  8B EF		     3			mov	entry_SP,SP80
 7684  BF 0005		     3			mov	ret_reg,code_undef2
 7687  CB		     3			retf
 = 0077			     3			op2	= op2 + 1
 = 0078			     2		op2	= 77H + 1
 7780  8B D5		     2			mov	temp,save_temp
 7782  8B E8		     2			mov	save_temp,ax
 7784  AC		     2			lodsb
 7785  98		     2			cbw
 7786  2E: 03 06 00FA	     2			add	ax,IXY
 778B  95		     2			xchg	ax,save_temp
 778C  3E: 88 46 00	     2			mov	ds:[save_temp],A
 7790  8B EA		     2			mov	save_temp,temp
 7792  B2 00		     2			mov	temp_l,0
 7794  8A 34		     3			mov	temp_h,ds:[PC80]
 7796  46		     3			inc	PC80
 7797  FF E2		     3			jmp	temp
 7880  8B D5		     3			mov	temp,save_temp
 7882  8B EF		     3			mov	entry_SP,SP80
 7884  BF 0005		     3			mov	ret_reg,code_undef2
 7887  CB		     3			retf
 = 0079			     3			op2	= op2 + 1
 7980  8B D5		     3			mov	temp,save_temp
 7982  8B EF		     3			mov	entry_SP,SP80
 7984  BF 0005		     3			mov	ret_reg,code_undef2
 7987  CB		     3			retf
 = 007A			     3			op2	= op2 + 1
 7A80  8B D5		     3			mov	temp,save_temp
 7A82  8B EF		     3			mov	entry_SP,SP80
 7A84  BF 0005		     3			mov	ret_reg,code_undef2
 7A87  CB		     3			retf
 = 007B			     3			op2	= op2 + 1
 7B80  8B D5		     3			mov	temp,save_temp
 7B82  8B EF		     3			mov	entry_SP,SP80
 7B84  BF 0005		     3			mov	ret_reg,code_undef2
 7B87  CB		     3			retf
 = 007C			     3			op2	= op2 + 1
 = 007D			     2		op2	= 7cH + 1
 7C80  2E: A0 00FB	     2			mov	A,XYH
 7C84  B2 00		     2			mov	temp_l,0
 7C86  8A 34		     3			mov	temp_h,ds:[PC80]
 7C88  46		     3			inc	PC80
 7C89  FF E2		     3			jmp	temp
 = 007E			     2		op2	= 7dH + 1
 7D80  2E: A0 00FA	     2			mov	A,XYL
 7D84  B2 00		     2			mov	temp_l,0
 7D86  8A 34		     3			mov	temp_h,ds:[PC80]
 7D88  46		     3			inc	PC80
 7D89  FF E2		     3			jmp	temp
 = 007F			     2		op2	= 7eH + 1
 7E80  8B D5		     2			mov	temp,save_temp
 7E82  8B E8		     2			mov	save_temp,ax
 7E84  AC		     2			lodsb
 7E85  98		     2			cbw
 7E86  2E: 03 06 00FA	     2			add	ax,IXY
 7E8B  95		     2			xchg	ax,save_temp
 7E8C  3E: 8A 46 00	     2			mov	A,ds:[save_temp]
 7E90  8B EA		     2			mov	save_temp,temp
 7E92  B2 00		     2			mov	temp_l,0
 7E94  8A 34		     3			mov	temp_h,ds:[PC80]
 7E96  46		     3			inc	PC80
 7E97  FF E2		     3			jmp	temp
 7F80  8B D5		     3			mov	temp,save_temp
 7F82  8B EF		     3			mov	entry_SP,SP80
 7F84  BF 0005		     3			mov	ret_reg,code_undef2
 7F87  CB		     3			retf
 = 0080			     3			op2	= op2 + 1
 8080  8B D5		     3			mov	temp,save_temp
 8082  8B EF		     3			mov	entry_SP,SP80
 8084  BF 0005		     3			mov	ret_reg,code_undef2
 8087  CB		     3			retf
 = 0081			     3			op2	= op2 + 1
 8180  8B D5		     3			mov	temp,save_temp
 8182  8B EF		     3			mov	entry_SP,SP80
 8184  BF 0005		     3			mov	ret_reg,code_undef2
 8187  CB		     3			retf
 = 0082			     3			op2	= op2 + 1
 8280  8B D5		     3			mov	temp,save_temp
 8282  8B EF		     3			mov	entry_SP,SP80
 8284  BF 0005		     3			mov	ret_reg,code_undef2
 8287  CB		     3			retf
 = 0083			     3			op2	= op2 + 1
 8380  8B D5		     3			mov	temp,save_temp
 8382  8B EF		     3			mov	entry_SP,SP80
 8384  BF 0005		     3			mov	ret_reg,code_undef2
 8387  CB		     3			retf
 = 0084			     3			op2	= op2 + 1
 = 0085			     2		op2	= 84H + 1
 8480  2E: 02 06 00FB	     1			add	A,XYH
 8485  9F		     1			lahf
 8486  70 0A		     1			jo	@f
 8488  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 848B  B2 00		     1			mov	temp_l,0
 848D  8A 34		     2			mov	temp_h,ds:[PC80]
 848F  46		     2			inc	PC80
 8490  FF E2		     2			jmp	temp
 8492  80 E4 FD		     1	@@:		and	ah,not n_flag
 8495  80 CC 04		     1			or	ah,v_flag
 8498  B2 00		     1			mov	temp_l,0
 849A  8A 34		     2			mov	temp_h,ds:[PC80]
 849C  46		     2			inc	PC80
 849D  FF E2		     2			jmp	temp
 = 0086			     2		op2	= 85H + 1
 8580  2E: 02 06 00FA	     1			add	A,XYL
 8585  9F		     1	??0009:		lahf
 8586  70 0A		     1			jo	@f
 8588  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 858B  B2 00		     1			mov	temp_l,0
 858D  8A 34		     2			mov	temp_h,ds:[PC80]
 858F  46		     2			inc	PC80
 8590  FF E2		     2			jmp	temp
 8592  80 E4 FD		     1	@@:		and	ah,not n_flag
 8595  80 CC 04		     1			or	ah,v_flag
 8598  B2 00		     1			mov	temp_l,0
 859A  8A 34		     2			mov	temp_h,ds:[PC80]
 859C  46		     2			inc	PC80
 859D  FF E2		     2			jmp	temp
 = 0087			     2		op2	= 86H + 1
 8680  8B D3		     1			mov	temp,bx
 8682  8B D8		     1			mov	bx,ax
 8684  AC		     1			lodsb
 8685  98		     1			cbw
 8686  2E: 03 06 00FA	     1			add	ax,IXY
 868B  93		     1			xchg	ax,bx
 868C  02 07		     1			add	A,ds:[bx]
 868E  8B DA		     1			mov	bx,temp
 8690  E9 FEF2		     1			jmp	??0009
 8780  8B D5		     3			mov	temp,save_temp
 8782  8B EF		     3			mov	entry_SP,SP80
 8784  BF 0005		     3			mov	ret_reg,code_undef2
 8787  CB		     3			retf
 = 0088			     3			op2	= op2 + 1
 8880  8B D5		     3			mov	temp,save_temp
 8882  8B EF		     3			mov	entry_SP,SP80
 8884  BF 0005		     3			mov	ret_reg,code_undef2
 8887  CB		     3			retf
 = 0089			     3			op2	= op2 + 1
 8980  8B D5		     3			mov	temp,save_temp
 8982  8B EF		     3			mov	entry_SP,SP80
 8984  BF 0005		     3			mov	ret_reg,code_undef2
 8987  CB		     3			retf
 = 008A			     3			op2	= op2 + 1
 8A80  8B D5		     3			mov	temp,save_temp
 8A82  8B EF		     3			mov	entry_SP,SP80
 8A84  BF 0005		     3			mov	ret_reg,code_undef2
 8A87  CB		     3			retf
 = 008B			     3			op2	= op2 + 1
 8B80  8B D5		     3			mov	temp,save_temp
 8B82  8B EF		     3			mov	entry_SP,SP80
 8B84  BF 0005		     3			mov	ret_reg,code_undef2
 8B87  CB		     3			retf
 = 008C			     3			op2	= op2 + 1
 = 008D			     2		op2	= 8cH + 1
 8C80  9E		     1			sahf
 8C81  2E: 12 06 00FA	     1			adc	A,XYL
 8C86  9F		     1			lahf
 8C87  70 0A		     1			jo	@f
 8C89  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8C8C  B2 00		     1			mov	temp_l,0
 8C8E  8A 34		     2			mov	temp_h,ds:[PC80]
 8C90  46		     2			inc	PC80
 8C91  FF E2		     2			jmp	temp
 8C93  80 E4 FD		     1	@@:		and	ah,not n_flag
 8C96  80 CC 04		     1			or	ah,v_flag
 8C99  B2 00		     1			mov	temp_l,0
 8C9B  8A 34		     2			mov	temp_h,ds:[PC80]
 8C9D  46		     2			inc	PC80
 8C9E  FF E2		     2			jmp	temp
 = 008E			     2		op2	= 8dH + 1
 8D80  9E		     1			sahf
 8D81  2E: 12 06 00FA	     1			adc	A,XYL
 8D86  9F		     1	??000A:		lahf
 8D87  70 0A		     1			jo	@f
 8D89  80 E4 F9		     1			and	ah,not (v_flag or n_flag)
 8D8C  B2 00		     1			mov	temp_l,0
 8D8E  8A 34		     2			mov	temp_h,ds:[PC80]
 8D90  46		     2			inc	PC80
 8D91  FF E2		     2			jmp	temp
 8D93  80 E4 FD		     1	@@:		and	ah,not n_flag
 8D96  80 CC 04		     1			or	ah,v_flag
 8D99  B2 00		     1			mov	temp_l,0
 8D9B  8A 34		     2			mov	temp_h,ds:[PC80]
 8D9D  46		     2			inc	PC80
 8D9E  FF E2		     2			jmp	temp
 = 008F			     2		op2	= 8eH + 1
 8E80  8B D3		     1			mov	temp,bx
 8E82  8B D8		     1			mov	bx,ax
 8E84  AC		     1			lodsb
 8E85  98		     1			cbw
 8E86  2E: 03 06 00FA	     1			add	ax,IXY
 8E8B  93		     1			xchg	ax,bx
 8E8C  9E		     1			sahf
 8E8D  12 07		     1			adc	A,ds:[bx]
 8E8F  8B DA		     1			mov	bx,temp
 8E91  E9 FEF2		     1			jmp	??000A
 8F80  8B D5		     3			mov	temp,save_temp
 8F82  8B EF		     3			mov	entry_SP,SP80
 8F84  BF 0005		     3			mov	ret_reg,code_undef2
 8F87  CB		     3			retf
 = 0090			     3			op2	= op2 + 1
 9080  8B D5		     3			mov	temp,save_temp
 9082  8B EF		     3			mov	entry_SP,SP80
 9084  BF 0005		     3			mov	ret_reg,code_undef2
 9087  CB		     3			retf
 = 0091			     3			op2	= op2 + 1
 9180  8B D5		     3			mov	temp,save_temp
 9182  8B EF		     3			mov	entry_SP,SP80
 9184  BF 0005		     3			mov	ret_reg,code_undef2
 9187  CB		     3			retf
 = 0092			     3			op2	= op2 + 1
 9280  8B D5		     3			mov	temp,save_temp
 9282  8B EF		     3			mov	entry_SP,SP80
 9284  BF 0005		     3			mov	ret_reg,code_undef2
 9287  CB		     3			retf
 = 0093			     3			op2	= op2 + 1
 9380  8B D5		     3			mov	temp,save_temp
 9382  8B EF		     3			mov	entry_SP,SP80
 9384  BF 0005		     3			mov	ret_reg,code_undef2
 9387  CB		     3			retf
 = 0094			     3			op2	= op2 + 1
 = 0095			     2		op2	= 94H + 1
 9480  2E: 2A 06 00FB	     1			sub	A,XYH
 9485  9F		     1			lahf
 9486  70 0A		     1			jo	@f
 9488  80 E4 FB		     1			and	ah,not(v_flag)
 948B  B2 00		     1			mov	temp_l,0
 948D  8A 34		     2			mov	temp_h,ds:[PC80]
 948F  46		     2			inc	PC80
 9490  FF E2		     2			jmp	temp
 9492  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9495  B2 00		     1			mov	temp_l,0
 9497  8A 34		     2			mov	temp_h,ds:[PC80]
 9499  46		     2			inc	PC80
 949A  FF E2		     2			jmp	temp
 = 0096			     2		op2	= 95H + 1
 9580  2E: 2A 06 00FA	     1			sub	A,XYL
 9585  9F		     1	??000B:		lahf
 9586  70 0A		     1			jo	@f
 9588  80 E4 FB		     1			and	ah,not(v_flag)
 958B  B2 00		     1			mov	temp_l,0
 958D  8A 34		     2			mov	temp_h,ds:[PC80]
 958F  46		     2			inc	PC80
 9590  FF E2		     2			jmp	temp
 9592  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9595  B2 00		     1			mov	temp_l,0
 9597  8A 34		     2			mov	temp_h,ds:[PC80]
 9599  46		     2			inc	PC80
 959A  FF E2		     2			jmp	temp
 = 0097			     2		op2	= 96H + 1
 9680  8B D3		     1			mov	temp,bx
 9682  8B D8		     1			mov	bx,ax
 9684  AC		     1			lodsb
 9685  98		     1			cbw
 9686  2E: 03 06 00FA	     1			add	ax,IXY
 968B  93		     1			xchg	ax,bx
 968C  2A 07		     1			sub	A,ds:[bx]
 968E  8B DA		     1			mov	bx,temp
 9690  E9 FEF2		     1			jmp	??000B
 9780  8B D5		     3			mov	temp,save_temp
 9782  8B EF		     3			mov	entry_SP,SP80
 9784  BF 0005		     3			mov	ret_reg,code_undef2
 9787  CB		     3			retf
 = 0098			     3			op2	= op2 + 1
 9880  8B D5		     3			mov	temp,save_temp
 9882  8B EF		     3			mov	entry_SP,SP80
 9884  BF 0005		     3			mov	ret_reg,code_undef2
 9887  CB		     3			retf
 = 0099			     3			op2	= op2 + 1
 9980  8B D5		     3			mov	temp,save_temp
 9982  8B EF		     3			mov	entry_SP,SP80
 9984  BF 0005		     3			mov	ret_reg,code_undef2
 9987  CB		     3			retf
 = 009A			     3			op2	= op2 + 1
 9A80  8B D5		     3			mov	temp,save_temp
 9A82  8B EF		     3			mov	entry_SP,SP80
 9A84  BF 0005		     3			mov	ret_reg,code_undef2
 9A87  CB		     3			retf
 = 009B			     3			op2	= op2 + 1
 9B80  8B D5		     3			mov	temp,save_temp
 9B82  8B EF		     3			mov	entry_SP,SP80
 9B84  BF 0005		     3			mov	ret_reg,code_undef2
 9B87  CB		     3			retf
 = 009C			     3			op2	= op2 + 1
 = 009D			     2		op2	= 9cH + 1
 9C80  9E		     1			sahf
 9C81  2E: 1A 06 00FB	     1			sbb	A,XYH
 9C86  9F		     1			lahf
 9C87  70 0A		     1			jo	@f
 9C89  80 E4 FB		     1			and	ah,not(v_flag)
 9C8C  B2 00		     1			mov	temp_l,0
 9C8E  8A 34		     2			mov	temp_h,ds:[PC80]
 9C90  46		     2			inc	PC80
 9C91  FF E2		     2			jmp	temp
 9C93  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9C96  B2 00		     1			mov	temp_l,0
 9C98  8A 34		     2			mov	temp_h,ds:[PC80]
 9C9A  46		     2			inc	PC80
 9C9B  FF E2		     2			jmp	temp
 = 009E			     2		op2	= 9dH + 1
 9D80  9E		     1			sahf
 9D81  2E: 1A 06 00FA	     1			sbb	A,XYL
 9D86  9F		     1	??000C:		lahf
 9D87  70 0A		     1			jo	@f
 9D89  80 E4 FB		     1			and	ah,not(v_flag)
 9D8C  B2 00		     1			mov	temp_l,0
 9D8E  8A 34		     2			mov	temp_h,ds:[PC80]
 9D90  46		     2			inc	PC80
 9D91  FF E2		     2			jmp	temp
 9D93  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 9D96  B2 00		     1			mov	temp_l,0
 9D98  8A 34		     2			mov	temp_h,ds:[PC80]
 9D9A  46		     2			inc	PC80
 9D9B  FF E2		     2			jmp	temp
 = 009F			     2		op2	= 9eH + 1
 9E80  8B D3		     1			mov	temp,bx
 9E82  8B D8		     1			mov	bx,ax
 9E84  AC		     1			lodsb
 9E85  98		     1			cbw
 9E86  2E: 03 06 00FA	     1			add	ax,IXY
 9E8B  93		     1			xchg	ax,bx
 9E8C  9E		     1			sahf
 9E8D  1A 07		     1			sbb	A,ds:[bx]
 9E8F  8B DA		     1			mov	bx,temp
 9E91  E9 FEF2		     1			jmp	??000C
 9F80  8B D5		     3			mov	temp,save_temp
 9F82  8B EF		     3			mov	entry_SP,SP80
 9F84  BF 0005		     3			mov	ret_reg,code_undef2
 9F87  CB		     3			retf
 = 00A0			     3			op2	= op2 + 1
 A080  8B D5		     3			mov	temp,save_temp
 A082  8B EF		     3			mov	entry_SP,SP80
 A084  BF 0005		     3			mov	ret_reg,code_undef2
 A087  CB		     3			retf
 = 00A1			     3			op2	= op2 + 1
 A180  8B D5		     3			mov	temp,save_temp
 A182  8B EF		     3			mov	entry_SP,SP80
 A184  BF 0005		     3			mov	ret_reg,code_undef2
 A187  CB		     3			retf
 = 00A2			     3			op2	= op2 + 1
 A280  8B D5		     3			mov	temp,save_temp
 A282  8B EF		     3			mov	entry_SP,SP80
 A284  BF 0005		     3			mov	ret_reg,code_undef2
 A287  CB		     3			retf
 = 00A3			     3			op2	= op2 + 1
 A380  8B D5		     3			mov	temp,save_temp
 A382  8B EF		     3			mov	entry_SP,SP80
 A384  BF 0005		     3			mov	ret_reg,code_undef2
 A387  CB		     3			retf
 = 00A4			     3			op2	= op2 + 1
 = 00A5			     2		op2	= 0a4H + 1
 A480  2E: 22 06 00FB	     1			and	A,XYH
 A485  9F		     1			lahf
 A486  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A489  80 CC 10		     1			or	ah,h_flag
 A48C  B2 00		     1			mov	temp_l,0
 A48E  8A 34		     2			mov	temp_h,ds:[PC80]
 A490  46		     2			inc	PC80
 A491  FF E2		     2			jmp	temp
 = 00A6			     2		op2	= 0a5H + 1
 A580  2E: 22 06 00FB	     1			and	A,XYH
 A585  9F		     1			lahf
 A586  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A589  80 CC 10		     1			or	ah,h_flag
 A58C  B2 00		     1			mov	temp_l,0
 A58E  8A 34		     2			mov	temp_h,ds:[PC80]
 A590  46		     2			inc	PC80
 A591  FF E2		     2			jmp	temp
 = 00A7			     2		op2	= 0a6H + 1
 A680  8B D3		     1			mov	temp,bx
 A682  8B D8		     1			mov	bx,ax
 A684  AC		     1			lodsb
 A685  98		     1			cbw
 A686  2E: 03 06 00FA	     1			add	ax,IXY
 A68B  93		     1			xchg	ax,bx
 A68C  22 07		     1			and	A,ds:[bx]
 A68E  8B DA		     1			mov	bx,temp
 A690  9F		     1			lahf
 A691  80 E4 FC		     1			and	ah,not(n_flag or c_flag)
 A694  80 CC 10		     1			or	ah,h_flag
 A697  B2 00		     1			mov	temp_l,0
 A699  8A 34		     2			mov	temp_h,ds:[PC80]
 A69B  46		     2			inc	PC80
 A69C  FF E2		     2			jmp	temp
 A780  8B D5		     3			mov	temp,save_temp
 A782  8B EF		     3			mov	entry_SP,SP80
 A784  BF 0005		     3			mov	ret_reg,code_undef2
 A787  CB		     3			retf
 = 00A8			     3			op2	= op2 + 1
 A880  8B D5		     3			mov	temp,save_temp
 A882  8B EF		     3			mov	entry_SP,SP80
 A884  BF 0005		     3			mov	ret_reg,code_undef2
 A887  CB		     3			retf
 = 00A9			     3			op2	= op2 + 1
 A980  8B D5		     3			mov	temp,save_temp
 A982  8B EF		     3			mov	entry_SP,SP80
 A984  BF 0005		     3			mov	ret_reg,code_undef2
 A987  CB		     3			retf
 = 00AA			     3			op2	= op2 + 1
 AA80  8B D5		     3			mov	temp,save_temp
 AA82  8B EF		     3			mov	entry_SP,SP80
 AA84  BF 0005		     3			mov	ret_reg,code_undef2
 AA87  CB		     3			retf
 = 00AB			     3			op2	= op2 + 1
 AB80  8B D5		     3			mov	temp,save_temp
 AB82  8B EF		     3			mov	entry_SP,SP80
 AB84  BF 0005		     3			mov	ret_reg,code_undef2
 AB87  CB		     3			retf
 = 00AC			     3			op2	= op2 + 1
 = 00AD			     2		op2	= 0acH + 1
 AC80  2E: 32 06 00FB	     1			xor	A,XYH
 AC85  9F		     1			lahf
 AC86  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 AC89  B2 00		     1			mov	temp_l,0
 AC8B  8A 34		     2			mov	temp_h,ds:[PC80]
 AC8D  46		     2			inc	PC80
 AC8E  FF E2		     2			jmp	temp
 = 00AE			     2		op2	= 0adH + 1
 AD80  2E: 32 06 00FA	     1			xor	A,XYL
 AD85  9F		     1			lahf
 AD86  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 AD89  B2 00		     1			mov	temp_l,0
 AD8B  8A 34		     2			mov	temp_h,ds:[PC80]
 AD8D  46		     2			inc	PC80
 AD8E  FF E2		     2			jmp	temp
 = 00AF			     2		op2	= 0aeH + 1
 AE80  8B D3		     1			mov	temp,bx
 AE82  8B D8		     1			mov	bx,ax
 AE84  AC		     1			lodsb
 AE85  98		     1			cbw
 AE86  2E: 03 06 00FA	     1			add	ax,IXY
 AE8B  93		     1			xchg	ax,bx
 AE8C  32 07		     1			xor	A,ds:[bx]
 AE8E  8B DA		     1			mov	bx,temp
 AE90  9F		     1			lahf
 AE91  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 AE94  B2 00		     1			mov	temp_l,0
 AE96  8A 34		     2			mov	temp_h,ds:[PC80]
 AE98  46		     2			inc	PC80
 AE99  FF E2		     2			jmp	temp
 AF80  8B D5		     3			mov	temp,save_temp
 AF82  8B EF		     3			mov	entry_SP,SP80
 AF84  BF 0005		     3			mov	ret_reg,code_undef2
 AF87  CB		     3			retf
 = 00B0			     3			op2	= op2 + 1
 B080  8B D5		     3			mov	temp,save_temp
 B082  8B EF		     3			mov	entry_SP,SP80
 B084  BF 0005		     3			mov	ret_reg,code_undef2
 B087  CB		     3			retf
 = 00B1			     3			op2	= op2 + 1
 B180  8B D5		     3			mov	temp,save_temp
 B182  8B EF		     3			mov	entry_SP,SP80
 B184  BF 0005		     3			mov	ret_reg,code_undef2
 B187  CB		     3			retf
 = 00B2			     3			op2	= op2 + 1
 B280  8B D5		     3			mov	temp,save_temp
 B282  8B EF		     3			mov	entry_SP,SP80
 B284  BF 0005		     3			mov	ret_reg,code_undef2
 B287  CB		     3			retf
 = 00B3			     3			op2	= op2 + 1
 B380  8B D5		     3			mov	temp,save_temp
 B382  8B EF		     3			mov	entry_SP,SP80
 B384  BF 0005		     3			mov	ret_reg,code_undef2
 B387  CB		     3			retf
 = 00B4			     3			op2	= op2 + 1
 = 00B5			     2		op2	= 0b4H + 1
 B480  2E: 0A 06 00FB	     1			or	A,XYH
 B485  9F		     1			lahf
 B486  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B489  B2 00		     1			mov	temp_l,0
 B48B  8A 34		     2			mov	temp_h,ds:[PC80]
 B48D  46		     2			inc	PC80
 B48E  FF E2		     2			jmp	temp
 = 00B6			     2		op2	= 0b5H + 1
 B580  2E: 0A 06 00FA	     1			or	A,XYL
 B585  9F		     1			lahf
 B586  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B589  B2 00		     1			mov	temp_l,0
 B58B  8A 34		     2			mov	temp_h,ds:[PC80]
 B58D  46		     2			inc	PC80
 B58E  FF E2		     2			jmp	temp
 = 00B7			     2		op2	= 0b6H + 1
 B680  8B D3		     1			mov	temp,bx
 B682  8B D8		     1			mov	bx,ax
 B684  AC		     1			lodsb
 B685  98		     1			cbw
 B686  2E: 03 06 00FA	     1			add	ax,IXY
 B68B  93		     1			xchg	ax,bx
 B68C  0A 07		     1			or	A,ds:[bx]
 B68E  8B DA		     1			mov	bx,temp
 B690  9F		     1			lahf
 B691  80 E4 EC		     1			and	ah,not(h_flag or n_flag or c_flag)
 B694  B2 00		     1			mov	temp_l,0
 B696  8A 34		     2			mov	temp_h,ds:[PC80]
 B698  46		     2			inc	PC80
 B699  FF E2		     2			jmp	temp
 B780  8B D5		     3			mov	temp,save_temp
 B782  8B EF		     3			mov	entry_SP,SP80
 B784  BF 0005		     3			mov	ret_reg,code_undef2
 B787  CB		     3			retf
 = 00B8			     3			op2	= op2 + 1
 B880  8B D5		     3			mov	temp,save_temp
 B882  8B EF		     3			mov	entry_SP,SP80
 B884  BF 0005		     3			mov	ret_reg,code_undef2
 B887  CB		     3			retf
 = 00B9			     3			op2	= op2 + 1
 B980  8B D5		     3			mov	temp,save_temp
 B982  8B EF		     3			mov	entry_SP,SP80
 B984  BF 0005		     3			mov	ret_reg,code_undef2
 B987  CB		     3			retf
 = 00BA			     3			op2	= op2 + 1
 BA80  8B D5		     3			mov	temp,save_temp
 BA82  8B EF		     3			mov	entry_SP,SP80
 BA84  BF 0005		     3			mov	ret_reg,code_undef2
 BA87  CB		     3			retf
 = 00BB			     3			op2	= op2 + 1
 BB80  8B D5		     3			mov	temp,save_temp
 BB82  8B EF		     3			mov	entry_SP,SP80
 BB84  BF 0005		     3			mov	ret_reg,code_undef2
 BB87  CB		     3			retf
 = 00BC			     3			op2	= op2 + 1
 = 00BD			     2		op2	= 0bcH + 1
 BC80  2E: 3A 06 00FB	     1			cmp	A,XYH
 BC85  9F		     1			lahf
 BC86  70 0A		     1			jo	@f
 BC88  80 E4 FB		     1			and	ah,not(v_flag)
 BC8B  B2 00		     1			mov	temp_l,0
 BC8D  8A 34		     2			mov	temp_h,ds:[PC80]
 BC8F  46		     2			inc	PC80
 BC90  FF E2		     2			jmp	temp
 BC92  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 BC95  B2 00		     1			mov	temp_l,0
 BC97  8A 34		     2			mov	temp_h,ds:[PC80]
 BC99  46		     2			inc	PC80
 BC9A  FF E2		     2			jmp	temp
 = 00BE			     2		op2	= 0bdH + 1
 BD80  2E: 3A 06 00FA	     1			cmp	A,XYL
 BD85  9F		     1	??000D:		lahf
 BD86  70 0A		     1			jo	@f
 BD88  80 E4 FB		     1			and	ah,not(v_flag)
 BD8B  B2 00		     1			mov	temp_l,0
 BD8D  8A 34		     2			mov	temp_h,ds:[PC80]
 BD8F  46		     2			inc	PC80
 BD90  FF E2		     2			jmp	temp
 BD92  80 CC 06		     1	@@:		or	ah,(v_flag or n_flag)
 BD95  B2 00		     1			mov	temp_l,0
 BD97  8A 34		     2			mov	temp_h,ds:[PC80]
 BD99  46		     2			inc	PC80
 BD9A  FF E2		     2			jmp	temp
 = 00BF			     2		op2	= 0beH + 1
 BE80  8B D3		     1			mov	temp,bx
 BE82  8B D8		     1			mov	bx,ax
 BE84  AC		     1			lodsb
 BE85  98		     1			cbw
 BE86  2E: 03 06 00FA	     1			add	ax,IXY
 BE8B  93		     1			xchg	ax,bx
 BE8C  3A 07		     1			cmp	A,ds:[bx]
 BE8E  8B DA		     1			mov	bx,temp
 BE90  E9 FEF2		     1			jmp	??000D
 BF80  8B D5		     3			mov	temp,save_temp
 BF82  8B EF		     3			mov	entry_SP,SP80
 BF84  BF 0005		     3			mov	ret_reg,code_undef2
 BF87  CB		     3			retf
 = 00C0			     3			op2	= op2 + 1
 C080  8B D5		     3			mov	temp,save_temp
 C082  8B EF		     3			mov	entry_SP,SP80
 C084  BF 0005		     3			mov	ret_reg,code_undef2
 C087  CB		     3			retf
 = 00C1			     3			op2	= op2 + 1
 C180  8B D5		     3			mov	temp,save_temp
 C182  8B EF		     3			mov	entry_SP,SP80
 C184  BF 0005		     3			mov	ret_reg,code_undef2
 C187  CB		     3			retf
 = 00C2			     3			op2	= op2 + 1
 C280  8B D5		     3			mov	temp,save_temp
 C282  8B EF		     3			mov	entry_SP,SP80
 C284  BF 0005		     3			mov	ret_reg,code_undef2
 C287  CB		     3			retf
 = 00C3			     3			op2	= op2 + 1
 C380  8B D5		     3			mov	temp,save_temp
 C382  8B EF		     3			mov	entry_SP,SP80
 C384  BF 0005		     3			mov	ret_reg,code_undef2
 C387  CB		     3			retf
 = 00C4			     3			op2	= op2 + 1
 C480  8B D5		     3			mov	temp,save_temp
 C482  8B EF		     3			mov	entry_SP,SP80
 C484  BF 0005		     3			mov	ret_reg,code_undef2
 C487  CB		     3			retf
 = 00C5			     3			op2	= op2 + 1
 C580  8B D5		     3			mov	temp,save_temp
 C582  8B EF		     3			mov	entry_SP,SP80
 C584  BF 0005		     3			mov	ret_reg,code_undef2
 C587  CB		     3			retf
 = 00C6			     3			op2	= op2 + 1
 C680  8B D5		     3			mov	temp,save_temp
 C682  8B EF		     3			mov	entry_SP,SP80
 C684  BF 0005		     3			mov	ret_reg,code_undef2
 C687  CB		     3			retf
 = 00C7			     3			op2	= op2 + 1
 C780  8B D5		     3			mov	temp,save_temp
 C782  8B EF		     3			mov	entry_SP,SP80
 C784  BF 0005		     3			mov	ret_reg,code_undef2
 C787  CB		     3			retf
 = 00C8			     3			op2	= op2 + 1
 C880  8B D5		     3			mov	temp,save_temp
 C882  8B EF		     3			mov	entry_SP,SP80
 C884  BF 0005		     3			mov	ret_reg,code_undef2
 C887  CB		     3			retf
 = 00C9			     3			op2	= op2 + 1
 C980  8B D5		     3			mov	temp,save_temp
 C982  8B EF		     3			mov	entry_SP,SP80
 C984  BF 0005		     3			mov	ret_reg,code_undef2
 C987  CB		     3			retf
 = 00CA			     3			op2	= op2 + 1
 CA80  8B D5		     3			mov	temp,save_temp
 CA82  8B EF		     3			mov	entry_SP,SP80
 CA84  BF 0005		     3			mov	ret_reg,code_undef2
 CA87  CB		     3			retf
 = 00CB			     3			op2	= op2 + 1
 = 00CC			     2		op2	= 0cbH + 1
 CB80  8B D0		     1	                mov     temp,ax
 CB82  AC		     1			lodsb
 CB83  98		     1	                cbw
 CB84  2E: 03 06 00FA	     1	                add     ax,IXY
 CB89  50		     1	                push	ax
 CB8A  AC		     1	                lodsb
 CB8B  8A E0		     1	                mov     ah,al
 CB8D  B0 40		     1	                mov     al,org_CBX
 CB8F  92		     1	                xchg    ax,temp
 CB90  FF E2		     1	                jmp	temp
 CC80  8B D5		     3			mov	temp,save_temp
 CC82  8B EF		     3			mov	entry_SP,SP80
 CC84  BF 0005		     3			mov	ret_reg,code_undef2
 CC87  CB		     3			retf
 = 00CD			     3			op2	= op2 + 1
 CD80  8B D5		     3			mov	temp,save_temp
 CD82  8B EF		     3			mov	entry_SP,SP80
 CD84  BF 0005		     3			mov	ret_reg,code_undef2
 CD87  CB		     3			retf
 = 00CE			     3			op2	= op2 + 1
 CE80  8B D5		     3			mov	temp,save_temp
 CE82  8B EF		     3			mov	entry_SP,SP80
 CE84  BF 0005		     3			mov	ret_reg,code_undef2
 CE87  CB		     3			retf
 = 00CF			     3			op2	= op2 + 1
 CF80  8B D5		     3			mov	temp,save_temp
 CF82  8B EF		     3			mov	entry_SP,SP80
 CF84  BF 0005		     3			mov	ret_reg,code_undef2
 CF87  CB		     3			retf
 = 00D0			     3			op2	= op2 + 1
 D080  8B D5		     3			mov	temp,save_temp
 D082  8B EF		     3			mov	entry_SP,SP80
 D084  BF 0005		     3			mov	ret_reg,code_undef2
 D087  CB		     3			retf
 = 00D1			     3			op2	= op2 + 1
 D180  8B D5		     3			mov	temp,save_temp
 D182  8B EF		     3			mov	entry_SP,SP80
 D184  BF 0005		     3			mov	ret_reg,code_undef2
 D187  CB		     3			retf
 = 00D2			     3			op2	= op2 + 1
 D280  8B D5		     3			mov	temp,save_temp
 D282  8B EF		     3			mov	entry_SP,SP80
 D284  BF 0005		     3			mov	ret_reg,code_undef2
 D287  CB		     3			retf
 = 00D3			     3			op2	= op2 + 1
 D380  8B D5		     3			mov	temp,save_temp
 D382  8B EF		     3			mov	entry_SP,SP80
 D384  BF 0005		     3			mov	ret_reg,code_undef2
 D387  CB		     3			retf
 = 00D4			     3			op2	= op2 + 1
 D480  8B D5		     3			mov	temp,save_temp
 D482  8B EF		     3			mov	entry_SP,SP80
 D484  BF 0005		     3			mov	ret_reg,code_undef2
 D487  CB		     3			retf
 = 00D5			     3			op2	= op2 + 1
 D580  8B D5		     3			mov	temp,save_temp
 D582  8B EF		     3			mov	entry_SP,SP80
 D584  BF 0005		     3			mov	ret_reg,code_undef2
 D587  CB		     3			retf
 = 00D6			     3			op2	= op2 + 1
 D680  8B D5		     3			mov	temp,save_temp
 D682  8B EF		     3			mov	entry_SP,SP80
 D684  BF 0005		     3			mov	ret_reg,code_undef2
 D687  CB		     3			retf
 = 00D7			     3			op2	= op2 + 1
 D780  8B D5		     3			mov	temp,save_temp
 D782  8B EF		     3			mov	entry_SP,SP80
 D784  BF 0005		     3			mov	ret_reg,code_undef2
 D787  CB		     3			retf
 = 00D8			     3			op2	= op2 + 1
 D880  8B D5		     3			mov	temp,save_temp
 D882  8B EF		     3			mov	entry_SP,SP80
 D884  BF 0005		     3			mov	ret_reg,code_undef2
 D887  CB		     3			retf
 = 00D9			     3			op2	= op2 + 1
 D980  8B D5		     3			mov	temp,save_temp
 D982  8B EF		     3			mov	entry_SP,SP80
 D984  BF 0005		     3			mov	ret_reg,code_undef2
 D987  CB		     3			retf
 = 00DA			     3			op2	= op2 + 1
 DA80  8B D5		     3			mov	temp,save_temp
 DA82  8B EF		     3			mov	entry_SP,SP80
 DA84  BF 0005		     3			mov	ret_reg,code_undef2
 DA87  CB		     3			retf
 = 00DB			     3			op2	= op2 + 1
 DB80  8B D5		     3			mov	temp,save_temp
 DB82  8B EF		     3			mov	entry_SP,SP80
 DB84  BF 0005		     3			mov	ret_reg,code_undef2
 DB87  CB		     3			retf
 = 00DC			     3			op2	= op2 + 1
 DC80  8B D5		     3			mov	temp,save_temp
 DC82  8B EF		     3			mov	entry_SP,SP80
 DC84  BF 0005		     3			mov	ret_reg,code_undef2
 DC87  CB		     3			retf
 = 00DD			     3			op2	= op2 + 1
 DD80  8B D5		     3			mov	temp,save_temp
 DD82  8B EF		     3			mov	entry_SP,SP80
 DD84  BF 0005		     3			mov	ret_reg,code_undef2
 DD87  CB		     3			retf
 = 00DE			     3			op2	= op2 + 1
 DE80  8B D5		     3			mov	temp,save_temp
 DE82  8B EF		     3			mov	entry_SP,SP80
 DE84  BF 0005		     3			mov	ret_reg,code_undef2
 DE87  CB		     3			retf
 = 00DF			     3			op2	= op2 + 1
 DF80  8B D5		     3			mov	temp,save_temp
 DF82  8B EF		     3			mov	entry_SP,SP80
 DF84  BF 0005		     3			mov	ret_reg,code_undef2
 DF87  CB		     3			retf
 = 00E0			     3			op2	= op2 + 1
 E080  8B D5		     3			mov	temp,save_temp
 E082  8B EF		     3			mov	entry_SP,SP80
 E084  BF 0005		     3			mov	ret_reg,code_undef2
 E087  CB		     3			retf
 = 00E1			     3			op2	= op2 + 1
 = 00E2			     2		op2	= 0e1H + 1
 E180  8B 15		     1			mov	temp,ds:[SP80]
 E182  2E: 89 16 00FA	     1			mov	IXY,temp
 E187  83 C7 02		     1			add	SP80,2
 E18A  B2 00		     1			mov	temp_l,0
 E18C  8A 34		     2			mov	temp_h,ds:[PC80]
 E18E  46		     2			inc	PC80
 E18F  FF E2		     2			jmp	temp
 E280  8B D5		     3			mov	temp,save_temp
 E282  8B EF		     3			mov	entry_SP,SP80
 E284  BF 0005		     3			mov	ret_reg,code_undef2
 E287  CB		     3			retf
 = 00E3			     3			op2	= op2 + 1
 = 00E4			     2		op2	= 0e3H + 1
 E380  8B 15		     1			mov	temp,ds:[SP80]
 E382  2E: 87 16 00FA	     1			xchg	temp,IXY
 E387  89 15		     1			mov	ds:[SP80],temp
 E389  B2 00		     1			mov	temp_l,0
 E38B  8A 34		     2			mov	temp_h,ds:[PC80]
 E38D  46		     2			inc	PC80
 E38E  FF E2		     2			jmp	temp
 E480  8B D5		     3			mov	temp,save_temp
 E482  8B EF		     3			mov	entry_SP,SP80
 E484  BF 0005		     3			mov	ret_reg,code_undef2
 E487  CB		     3			retf
 = 00E5			     3			op2	= op2 + 1
 = 00E6			     2		op2	= 0e5H + 1
 E580  2E: 8B 16 00FA	     1			mov	temp,IXY
 E585  83 EF 02		     1			sub	SP80,2
 E588  89 15		     1			mov	ds:[SP80],temp
 E58A  B2 00		     1			mov	temp_l,0
 E58C  8A 34		     2			mov	temp_h,ds:[PC80]
 E58E  46		     2			inc	PC80
 E58F  FF E2		     2			jmp	temp
 E680  8B D5		     3			mov	temp,save_temp
 E682  8B EF		     3			mov	entry_SP,SP80
 E684  BF 0005		     3			mov	ret_reg,code_undef2
 E687  CB		     3			retf
 = 00E7			     3			op2	= op2 + 1
 E780  8B D5		     3			mov	temp,save_temp
 E782  8B EF		     3			mov	entry_SP,SP80
 E784  BF 0005		     3			mov	ret_reg,code_undef2
 E787  CB		     3			retf
 = 00E8			     3			op2	= op2 + 1
 E880  8B D5		     3			mov	temp,save_temp
 E882  8B EF		     3			mov	entry_SP,SP80
 E884  BF 0005		     3			mov	ret_reg,code_undef2
 E887  CB		     3			retf
 = 00E9			     3			op2	= op2 + 1
 = 00EA			     2		op2	= 0e9H + 1
 E980  2E: 8B 36 00FA	     1			mov	PC80,IXY
 E985  B2 00		     1			mov	temp_l,0
 E987  8A 34		     2			mov	temp_h,ds:[PC80]
 E989  46		     2			inc	PC80
 E98A  FF E2		     2			jmp	temp
 EA80  8B D5		     3			mov	temp,save_temp
 EA82  8B EF		     3			mov	entry_SP,SP80
 EA84  BF 0005		     3			mov	ret_reg,code_undef2
 EA87  CB		     3			retf
 = 00EB			     3			op2	= op2 + 1
 EB80  8B D5		     3			mov	temp,save_temp
 EB82  8B EF		     3			mov	entry_SP,SP80
 EB84  BF 0005		     3			mov	ret_reg,code_undef2
 EB87  CB		     3			retf
 = 00EC			     3			op2	= op2 + 1
 EC80  8B D5		     3			mov	temp,save_temp
 EC82  8B EF		     3			mov	entry_SP,SP80
 EC84  BF 0005		     3			mov	ret_reg,code_undef2
 EC87  CB		     3			retf
 = 00ED			     3			op2	= op2 + 1
 ED80  8B D5		     3			mov	temp,save_temp
 ED82  8B EF		     3			mov	entry_SP,SP80
 ED84  BF 0005		     3			mov	ret_reg,code_undef2
 ED87  CB		     3			retf
 = 00EE			     3			op2	= op2 + 1
 EE80  8B D5		     3			mov	temp,save_temp
 EE82  8B EF		     3			mov	entry_SP,SP80
 EE84  BF 0005		     3			mov	ret_reg,code_undef2
 EE87  CB		     3			retf
 = 00EF			     3			op2	= op2 + 1
 EF80  8B D5		     3			mov	temp,save_temp
 EF82  8B EF		     3			mov	entry_SP,SP80
 EF84  BF 0005		     3			mov	ret_reg,code_undef2
 EF87  CB		     3			retf
 = 00F0			     3			op2	= op2 + 1
 F080  8B D5		     3			mov	temp,save_temp
 F082  8B EF		     3			mov	entry_SP,SP80
 F084  BF 0005		     3			mov	ret_reg,code_undef2
 F087  CB		     3			retf
 = 00F1			     3			op2	= op2 + 1
 F180  8B D5		     3			mov	temp,save_temp
 F182  8B EF		     3			mov	entry_SP,SP80
 F184  BF 0005		     3			mov	ret_reg,code_undef2
 F187  CB		     3			retf
 = 00F2			     3			op2	= op2 + 1
 F280  8B D5		     3			mov	temp,save_temp
 F282  8B EF		     3			mov	entry_SP,SP80
 F284  BF 0005		     3			mov	ret_reg,code_undef2
 F287  CB		     3			retf
 = 00F3			     3			op2	= op2 + 1
 F380  8B D5		     3			mov	temp,save_temp
 F382  8B EF		     3			mov	entry_SP,SP80
 F384  BF 0005		     3			mov	ret_reg,code_undef2
 F387  CB		     3			retf
 = 00F4			     3			op2	= op2 + 1
 F480  8B D5		     3			mov	temp,save_temp
 F482  8B EF		     3			mov	entry_SP,SP80
 F484  BF 0005		     3			mov	ret_reg,code_undef2
 F487  CB		     3			retf
 = 00F5			     3			op2	= op2 + 1
 F580  8B D5		     3			mov	temp,save_temp
 F582  8B EF		     3			mov	entry_SP,SP80
 F584  BF 0005		     3			mov	ret_reg,code_undef2
 F587  CB		     3			retf
 = 00F6			     3			op2	= op2 + 1
 F680  8B D5		     3			mov	temp,save_temp
 F682  8B EF		     3			mov	entry_SP,SP80
 F684  BF 0005		     3			mov	ret_reg,code_undef2
 F687  CB		     3			retf
 = 00F7			     3			op2	= op2 + 1
 F780  8B D5		     3			mov	temp,save_temp
 F782  8B EF		     3			mov	entry_SP,SP80
 F784  BF 0005		     3			mov	ret_reg,code_undef2
 F787  CB		     3			retf
 = 00F8			     3			op2	= op2 + 1
 F880  8B D5		     3			mov	temp,save_temp
 F882  8B EF		     3			mov	entry_SP,SP80
 F884  BF 0005		     3			mov	ret_reg,code_undef2
 F887  CB		     3			retf
 = 00F9			     3			op2	= op2 + 1
 = 00FA			     2		op2	= 0f9H + 1
 F980  2E: 8B 3E 00FA	     1			mov	SP80,IXY
 F985  B2 00		     1			mov	temp_l,0
 F987  8A 34		     2			mov	temp_h,ds:[PC80]
 F989  46		     2			inc	PC80
 F98A  FF E2		     2			jmp	temp
 FA80  8B D5		     3			mov	temp,save_temp
 FA82  8B EF		     3			mov	entry_SP,SP80
 FA84  BF 0005		     3			mov	ret_reg,code_undef2
 FA87  CB		     3			retf
 = 00FB			     3			op2	= op2 + 1
 FB80  8B D5		     3			mov	temp,save_temp
 FB82  8B EF		     3			mov	entry_SP,SP80
 FB84  BF 0005		     3			mov	ret_reg,code_undef2
 FB87  CB		     3			retf
 = 00FC			     3			op2	= op2 + 1
 FC80  8B D5		     3			mov	temp,save_temp
 FC82  8B EF		     3			mov	entry_SP,SP80
 FC84  BF 0005		     3			mov	ret_reg,code_undef2
 FC87  CB		     3			retf
 = 00FD			     3			op2	= op2 + 1
 FD80  8B D5		     3			mov	temp,save_temp
 FD82  8B EF		     3			mov	entry_SP,SP80
 FD84  BF 0005		     3			mov	ret_reg,code_undef2
 FD87  CB		     3			retf
 = 00FE			     3			op2	= op2 + 1
 FE80  8B D5		     3			mov	temp,save_temp
 FE82  8B EF		     3			mov	entry_SP,SP80
 FE84  BF 0005		     3			mov	ret_reg,code_undef2
 FE87  CB		     3			retf
 = 00FF			     3			op2	= op2 + 1
 = 0100			     2		op2	= 0ffh + 1
 FF80  8B D5		     1			mov	temp,save_temp
 FF82  8B EF		     1			mov	entry_SP,SP80
 FF84  BF 0005		     1			mov	ret_reg,code_undef2
 FF87  CB		     1			retf
 = 0080			     1	org_DDFD	=	org_FD
 = IY			     1	IXY		equ	IY
 = YL			     1	XYL		equ	YL
 = YH			     1	XYH		equ	YH
				;================================================

						org	0ffc0h
 FFC0				exe_start:
 FFC0  8C C8					mov	ax,cs
 FFC2  8E D8					mov	ds,ax
 FFC4  BA 0005 R				mov	dx,offset exe_msg1
 FFC7  B4 09					mov	ah,9
 FFC9  CD 21					int	21h
 FFCB  BA 0306 R				mov	dx,offset exe_msg2
 FFCE  B4 09					mov	ah,9
 FFD0  CD 21					int	21h
 FFD2  BA 1B06 R				mov	dx,offset exe_msg3
 FFD5  B4 09					mov	ah,9
 FFD7  CD 21					int	21h
 FFD9  BA 0B06 R				mov	dx,offset exe_msg4
 FFDC  B4 09					mov	ah,9
 FFDE  CD 21					int	21h
 FFE0  BA 1306 R				mov	dx,offset exe_msg5
 FFE3  B4 09					mov	ah,9
 FFE5  CD 21					int	21h
 FFE7  B8 4C00					mov	ax,4c00h
 FFEA  CD 21					int	21h

 0000						.data
						.stack

						end	exe_start
				  
Microsoft (R) Macro Assembler Version 6.00AD    	    09/21/25 15:37:37
z80emv.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

ADC8x  . . . . . . . . . . . . .	Proc
ADC8 . . . . . . . . . . . . . .	Proc
ADD8 . . . . . . . . . . . . . .	Proc
ADDHL  . . . . . . . . . . . . .	Proc
ADDXY  . . . . . . . . . . . . .	Proc
ANA  . . . . . . . . . . . . . .	Proc
BITX . . . . . . . . . . . . . .	Proc
BIT  . . . . . . . . . . . . . .	Proc
CALL80 . . . . . . . . . . . . .	Proc
CBX  . . . . . . . . . . . . . .	Proc
CB . . . . . . . . . . . . . . .	Proc
CPA  . . . . . . . . . . . . . .	Proc
DCR  . . . . . . . . . . . . . .	Proc
DCX  . . . . . . . . . . . . . .	Proc
DDFD . . . . . . . . . . . . . .	Proc
ED . . . . . . . . . . . . . . .	Proc
INR  . . . . . . . . . . . . . .	Proc
INX  . . . . . . . . . . . . . .	Proc
IO . . . . . . . . . . . . . . .	Proc
JP80 . . . . . . . . . . . . . .	Proc
JR . . . . . . . . . . . . . . .	Proc
LD2  . . . . . . . . . . . . . .	Proc
LDIXY  . . . . . . . . . . . . .	Proc
LD . . . . . . . . . . . . . . .	Proc
LXI  . . . . . . . . . . . . . .	Proc
M1 . . . . . . . . . . . . . . .	Proc
MLT  . . . . . . . . . . . . . .	Proc
MVI  . . . . . . . . . . . . . .	Proc
ORA  . . . . . . . . . . . . . .	Proc
POP8 . . . . . . . . . . . . . .	Proc
PUSH8  . . . . . . . . . . . . .	Proc
RESX . . . . . . . . . . . . . .	Proc
RES  . . . . . . . . . . . . . .	Proc
RET80  . . . . . . . . . . . . .	Proc
RLC  . . . . . . . . . . . . . .	Proc
RL . . . . . . . . . . . . . . .	Proc
RRC  . . . . . . . . . . . . . .	Proc
RR . . . . . . . . . . . . . . .	Proc
RST  . . . . . . . . . . . . . .	Proc
SBC8x  . . . . . . . . . . . . .	Proc
SBC8 . . . . . . . . . . . . . .	Proc
SETX . . . . . . . . . . . . . .	Proc
SET  . . . . . . . . . . . . . .	Proc
SLA  . . . . . . . . . . . . . .	Proc
SLL  . . . . . . . . . . . . . .	Proc
SRA  . . . . . . . . . . . . . .	Proc
SRL  . . . . . . . . . . . . . .	Proc
STIXY  . . . . . . . . . . . . .	Proc
SUB8 . . . . . . . . . . . . . .	Proc
TST  . . . . . . . . . . . . . .	Proc
XRA  . . . . . . . . . . . . . .	Proc
fetch1 . . . . . . . . . . . . .	Proc
fetch2 . . . . . . . . . . . . .	Proc
fetch3 . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 0000	  Word	  Public  'DATA'	
STACK  . . . . . . . . . . . . .	16 Bit	 0400	  Para	  Stack	  'STACK'	 
_TEXT  . . . . . . . . . . . . .	16 Bit	 FFEC	  Word	  Public  'CODE'	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
AF . . . . . . . . . . . . . . .	Text   	 ax
A  . . . . . . . . . . . . . . .	Text   	 al
BC . . . . . . . . . . . . . . .	Text   	 cx
B  . . . . . . . . . . . . . . .	Text   	 ch
CALLN_vect . . . . . . . . . . .	Byte	 EDAD	  _TEXT	
C_reg  . . . . . . . . . . . . .	Text   	 cl
DE . . . . . . . . . . . . . . .	Text   	 bp
D  . . . . . . . . . . . . . . .	Text   	 dh
E  . . . . . . . . . . . . . . .	Text   	 dl
HL . . . . . . . . . . . . . . .	Text   	 bx
H  . . . . . . . . . . . . . . .	Text   	 bh
IXY  . . . . . . . . . . . . . .	Text   	 IY
IX . . . . . . . . . . . . . . .	Text   	 word ptr cs:[00f8h]
IY . . . . . . . . . . . . . . .	Text   	 word ptr cs:[00fah]
I  . . . . . . . . . . . . . . .	Text   	 byte ptr cs:[00fch]
L  . . . . . . . . . . . . . . .	Text   	 bl
M  . . . . . . . . . . . . . . .	Text   	 byte ptr ds:[HL]
PC80 . . . . . . . . . . . . . .	Text   	 si
R  . . . . . . . . . . . . . . .	Text   	 byte ptr cs:[00fdh]
SP80 . . . . . . . . . . . . . .	Text   	 di
XH . . . . . . . . . . . . . . .	Text   	 byte ptr cs:[00f9h]
XL . . . . . . . . . . . . . . .	Text   	 byte ptr cs:[00f8h]
XYH  . . . . . . . . . . . . . .	Text   	 YH
XYL  . . . . . . . . . . . . . .	Text   	 YL
YH . . . . . . . . . . . . . . .	Text   	 byte ptr cs:[00fbh]
YL . . . . . . . . . . . . . . .	Text   	 byte ptr cs:[00fah]
alt_AF . . . . . . . . . . . . .	Text   	 word ptr cs:[00f6h]
alt_BC . . . . . . . . . . . . .	Text   	 word ptr cs:[00f0h]
alt_DE . . . . . . . . . . . . .	Text   	 word ptr cs:[00f2h]
alt_HL . . . . . . . . . . . . .	Text   	 word ptr cs:[00f4h]
c_flag . . . . . . . . . . . . .	Number	 0001h	 
code_EDFD  . . . . . . . . . . .	Number	 0000h	 
code_HLT . . . . . . . . . . . .	Number	 0001h	 
code_IN  . . . . . . . . . . . .	Number	 0003h	 
code_IO  . . . . . . . . . . . .	Number	 0004h	 
code_OUT . . . . . . . . . . . .	Number	 0002h	 
code_undef2  . . . . . . . . . .	Number	 0005h	 
code_undef4  . . . . . . . . . .	Number	 0006h	 
cpdr_end . . . . . . . . . . . .	L Near	 B9C7	  _TEXT	
cpdr_loop  . . . . . . . . . . .	L Near	 B9A5	  _TEXT	
cpdr_z . . . . . . . . . . . . .	L Near	 B9C0	  _TEXT	
cpir_end . . . . . . . . . . . .	L Near	 B1C7	  _TEXT	
cpir_loop  . . . . . . . . . . .	L Near	 B1A5	  _TEXT	
cpir_z . . . . . . . . . . . . .	L Near	 B1C0	  _TEXT	
entry_SP . . . . . . . . . . . .	Text   	 bp
entry_c0 . . . . . . . . . . . .	L Near	 00C0	  _TEXT	
entry  . . . . . . . . . . . . .	L Near	 00E0	  _TEXT	
exe_msg1 . . . . . . . . . . . .	Byte	 0005	  _TEXT	
exe_msg2 . . . . . . . . . . . .	Byte	 0306	  _TEXT	
exe_msg3 . . . . . . . . . . . .	Byte	 1B06	  _TEXT	
exe_msg4 . . . . . . . . . . . .	Byte	 0B06	  _TEXT	
exe_msg5 . . . . . . . . . . . .	Byte	 1306	  _TEXT	
exe_start  . . . . . . . . . . .	L Near	 FFC0	  _TEXT	
h_flag . . . . . . . . . . . . .	Number	 0010h	 
int_no . . . . . . . . . . . . .	Number	 00FFh	 
n_flag . . . . . . . . . . . . .	Number	 0002h	 
no_op  . . . . . . . . . . . . .	L Near	 0000	  _TEXT	
op2  . . . . . . . . . . . . . .	Number	 0100h	 
org_CBX  . . . . . . . . . . . .	Number	 0040h	 
org_CB . . . . . . . . . . . . .	Number	 0020h	 
org_DDFD . . . . . . . . . . . .	Number	 0080h	 
org_DD . . . . . . . . . . . . .	Number	 0060h	 
org_ED . . . . . . . . . . . . .	Number	 00A0h	 
org_FD . . . . . . . . . . . . .	Number	 0080h	 
p_flag . . . . . . . . . . . . .	Number	 0004h	 
ret_reg  . . . . . . . . . . . .	Text   	 di
s_flag . . . . . . . . . . . . .	Number	 0080h	 
save_temp  . . . . . . . . . . .	Text   	 bp
temp_h . . . . . . . . . . . . .	Text   	 dh
temp_l . . . . . . . . . . . . .	Text   	 dl
temp . . . . . . . . . . . . . .	Text   	 dx
v_flag . . . . . . . . . . . . .	Number	 0004h	 
z_flag . . . . . . . . . . . . .	Number	 0040h	 

	   0 Warnings
	   0 Errors
